{"version":3,"file":"vendor-i18n-BRd1ohpR.js","sources":["../../../node_modules/i18next/dist/esm/i18next.js"],"sourcesContent":["const isString = obj => typeof obj === 'string';\nconst defer = () => {\n  let res;\n  let rej;\n  const promise = new Promise((resolve, reject) => {\n    res = resolve;\n    rej = reject;\n  });\n  promise.resolve = res;\n  promise.reject = rej;\n  return promise;\n};\nconst makeString = object => {\n  if (object == null) return '';\n  return '' + object;\n};\nconst copy = (a, s, t) => {\n  a.forEach(m => {\n    if (s[m]) t[m] = s[m];\n  });\n};\nconst lastOfPathSeparatorRegExp = /###/g;\nconst cleanKey = key => key && key.indexOf('###') > -1 ? key.replace(lastOfPathSeparatorRegExp, '.') : key;\nconst canNotTraverseDeeper = object => !object || isString(object);\nconst getLastOfPath = (object, path, Empty) => {\n  const stack = !isString(path) ? path : path.split('.');\n  let stackIndex = 0;\n  while (stackIndex < stack.length - 1) {\n    if (canNotTraverseDeeper(object)) return {};\n    const key = cleanKey(stack[stackIndex]);\n    if (!object[key] && Empty) object[key] = new Empty();\n    if (Object.prototype.hasOwnProperty.call(object, key)) {\n      object = object[key];\n    } else {\n      object = {};\n    }\n    ++stackIndex;\n  }\n  if (canNotTraverseDeeper(object)) return {};\n  return {\n    obj: object,\n    k: cleanKey(stack[stackIndex])\n  };\n};\nconst setPath = (object, path, newValue) => {\n  const {\n    obj,\n    k\n  } = getLastOfPath(object, path, Object);\n  if (obj !== undefined || path.length === 1) {\n    obj[k] = newValue;\n    return;\n  }\n  let e = path[path.length - 1];\n  let p = path.slice(0, path.length - 1);\n  let last = getLastOfPath(object, p, Object);\n  while (last.obj === undefined && p.length) {\n    e = `${p[p.length - 1]}.${e}`;\n    p = p.slice(0, p.length - 1);\n    last = getLastOfPath(object, p, Object);\n    if (last?.obj && typeof last.obj[`${last.k}.${e}`] !== 'undefined') {\n      last.obj = undefined;\n    }\n  }\n  last.obj[`${last.k}.${e}`] = newValue;\n};\nconst pushPath = (object, path, newValue, concat) => {\n  const {\n    obj,\n    k\n  } = getLastOfPath(object, path, Object);\n  obj[k] = obj[k] || [];\n  obj[k].push(newValue);\n};\nconst getPath = (object, path) => {\n  const {\n    obj,\n    k\n  } = getLastOfPath(object, path);\n  if (!obj) return undefined;\n  if (!Object.prototype.hasOwnProperty.call(obj, k)) return undefined;\n  return obj[k];\n};\nconst getPathWithDefaults = (data, defaultData, key) => {\n  const value = getPath(data, key);\n  if (value !== undefined) {\n    return value;\n  }\n  return getPath(defaultData, key);\n};\nconst deepExtend = (target, source, overwrite) => {\n  for (const prop in source) {\n    if (prop !== '__proto__' && prop !== 'constructor') {\n      if (prop in target) {\n        if (isString(target[prop]) || target[prop] instanceof String || isString(source[prop]) || source[prop] instanceof String) {\n          if (overwrite) target[prop] = source[prop];\n        } else {\n          deepExtend(target[prop], source[prop], overwrite);\n        }\n      } else {\n        target[prop] = source[prop];\n      }\n    }\n  }\n  return target;\n};\nconst regexEscape = str => str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\nvar _entityMap = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;',\n  '/': '&#x2F;'\n};\nconst escape = data => {\n  if (isString(data)) {\n    return data.replace(/[&<>\"'\\/]/g, s => _entityMap[s]);\n  }\n  return data;\n};\nclass RegExpCache {\n  constructor(capacity) {\n    this.capacity = capacity;\n    this.regExpMap = new Map();\n    this.regExpQueue = [];\n  }\n  getRegExp(pattern) {\n    const regExpFromCache = this.regExpMap.get(pattern);\n    if (regExpFromCache !== undefined) {\n      return regExpFromCache;\n    }\n    const regExpNew = new RegExp(pattern);\n    if (this.regExpQueue.length === this.capacity) {\n      this.regExpMap.delete(this.regExpQueue.shift());\n    }\n    this.regExpMap.set(pattern, regExpNew);\n    this.regExpQueue.push(pattern);\n    return regExpNew;\n  }\n}\nconst chars = [' ', ',', '?', '!', ';'];\nconst looksLikeObjectPathRegExpCache = new RegExpCache(20);\nconst looksLikeObjectPath = (key, nsSeparator, keySeparator) => {\n  nsSeparator = nsSeparator || '';\n  keySeparator = keySeparator || '';\n  const possibleChars = chars.filter(c => nsSeparator.indexOf(c) < 0 && keySeparator.indexOf(c) < 0);\n  if (possibleChars.length === 0) return true;\n  const r = looksLikeObjectPathRegExpCache.getRegExp(`(${possibleChars.map(c => c === '?' ? '\\\\?' : c).join('|')})`);\n  let matched = !r.test(key);\n  if (!matched) {\n    const ki = key.indexOf(keySeparator);\n    if (ki > 0 && !r.test(key.substring(0, ki))) {\n      matched = true;\n    }\n  }\n  return matched;\n};\nconst deepFind = (obj, path, keySeparator = '.') => {\n  if (!obj) return undefined;\n  if (obj[path]) {\n    if (!Object.prototype.hasOwnProperty.call(obj, path)) return undefined;\n    return obj[path];\n  }\n  const tokens = path.split(keySeparator);\n  let current = obj;\n  for (let i = 0; i < tokens.length;) {\n    if (!current || typeof current !== 'object') {\n      return undefined;\n    }\n    let next;\n    let nextPath = '';\n    for (let j = i; j < tokens.length; ++j) {\n      if (j !== i) {\n        nextPath += keySeparator;\n      }\n      nextPath += tokens[j];\n      next = current[nextPath];\n      if (next !== undefined) {\n        if (['string', 'number', 'boolean'].indexOf(typeof next) > -1 && j < tokens.length - 1) {\n          continue;\n        }\n        i += j - i + 1;\n        break;\n      }\n    }\n    current = next;\n  }\n  return current;\n};\nconst getCleanedCode = code => code?.replace('_', '-');\n\nconst consoleLogger = {\n  type: 'logger',\n  log(args) {\n    this.output('log', args);\n  },\n  warn(args) {\n    this.output('warn', args);\n  },\n  error(args) {\n    this.output('error', args);\n  },\n  output(type, args) {\n    console?.[type]?.apply?.(console, args);\n  }\n};\nclass Logger {\n  constructor(concreteLogger, options = {}) {\n    this.init(concreteLogger, options);\n  }\n  init(concreteLogger, options = {}) {\n    this.prefix = options.prefix || 'i18next:';\n    this.logger = concreteLogger || consoleLogger;\n    this.options = options;\n    this.debug = options.debug;\n  }\n  log(...args) {\n    return this.forward(args, 'log', '', true);\n  }\n  warn(...args) {\n    return this.forward(args, 'warn', '', true);\n  }\n  error(...args) {\n    return this.forward(args, 'error', '');\n  }\n  deprecate(...args) {\n    return this.forward(args, 'warn', 'WARNING DEPRECATED: ', true);\n  }\n  forward(args, lvl, prefix, debugOnly) {\n    if (debugOnly && !this.debug) return null;\n    if (isString(args[0])) args[0] = `${prefix}${this.prefix} ${args[0]}`;\n    return this.logger[lvl](args);\n  }\n  create(moduleName) {\n    return new Logger(this.logger, {\n      ...{\n        prefix: `${this.prefix}:${moduleName}:`\n      },\n      ...this.options\n    });\n  }\n  clone(options) {\n    options = options || this.options;\n    options.prefix = options.prefix || this.prefix;\n    return new Logger(this.logger, options);\n  }\n}\nvar baseLogger = new Logger();\n\nclass EventEmitter {\n  constructor() {\n    this.observers = {};\n  }\n  on(events, listener) {\n    events.split(' ').forEach(event => {\n      if (!this.observers[event]) this.observers[event] = new Map();\n      const numListeners = this.observers[event].get(listener) || 0;\n      this.observers[event].set(listener, numListeners + 1);\n    });\n    return this;\n  }\n  off(event, listener) {\n    if (!this.observers[event]) return;\n    if (!listener) {\n      delete this.observers[event];\n      return;\n    }\n    this.observers[event].delete(listener);\n  }\n  emit(event, ...args) {\n    if (this.observers[event]) {\n      const cloned = Array.from(this.observers[event].entries());\n      cloned.forEach(([observer, numTimesAdded]) => {\n        for (let i = 0; i < numTimesAdded; i++) {\n          observer(...args);\n        }\n      });\n    }\n    if (this.observers['*']) {\n      const cloned = Array.from(this.observers['*'].entries());\n      cloned.forEach(([observer, numTimesAdded]) => {\n        for (let i = 0; i < numTimesAdded; i++) {\n          observer.apply(observer, [event, ...args]);\n        }\n      });\n    }\n  }\n}\n\nclass ResourceStore extends EventEmitter {\n  constructor(data, options = {\n    ns: ['translation'],\n    defaultNS: 'translation'\n  }) {\n    super();\n    this.data = data || {};\n    this.options = options;\n    if (this.options.keySeparator === undefined) {\n      this.options.keySeparator = '.';\n    }\n    if (this.options.ignoreJSONStructure === undefined) {\n      this.options.ignoreJSONStructure = true;\n    }\n  }\n  addNamespaces(ns) {\n    if (this.options.ns.indexOf(ns) < 0) {\n      this.options.ns.push(ns);\n    }\n  }\n  removeNamespaces(ns) {\n    const index = this.options.ns.indexOf(ns);\n    if (index > -1) {\n      this.options.ns.splice(index, 1);\n    }\n  }\n  getResource(lng, ns, key, options = {}) {\n    const keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n    const ignoreJSONStructure = options.ignoreJSONStructure !== undefined ? options.ignoreJSONStructure : this.options.ignoreJSONStructure;\n    let path;\n    if (lng.indexOf('.') > -1) {\n      path = lng.split('.');\n    } else {\n      path = [lng, ns];\n      if (key) {\n        if (Array.isArray(key)) {\n          path.push(...key);\n        } else if (isString(key) && keySeparator) {\n          path.push(...key.split(keySeparator));\n        } else {\n          path.push(key);\n        }\n      }\n    }\n    const result = getPath(this.data, path);\n    if (!result && !ns && !key && lng.indexOf('.') > -1) {\n      lng = path[0];\n      ns = path[1];\n      key = path.slice(2).join('.');\n    }\n    if (result || !ignoreJSONStructure || !isString(key)) return result;\n    return deepFind(this.data?.[lng]?.[ns], key, keySeparator);\n  }\n  addResource(lng, ns, key, value, options = {\n    silent: false\n  }) {\n    const keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n    let path = [lng, ns];\n    if (key) path = path.concat(keySeparator ? key.split(keySeparator) : key);\n    if (lng.indexOf('.') > -1) {\n      path = lng.split('.');\n      value = ns;\n      ns = path[1];\n    }\n    this.addNamespaces(ns);\n    setPath(this.data, path, value);\n    if (!options.silent) this.emit('added', lng, ns, key, value);\n  }\n  addResources(lng, ns, resources, options = {\n    silent: false\n  }) {\n    for (const m in resources) {\n      if (isString(resources[m]) || Array.isArray(resources[m])) this.addResource(lng, ns, m, resources[m], {\n        silent: true\n      });\n    }\n    if (!options.silent) this.emit('added', lng, ns, resources);\n  }\n  addResourceBundle(lng, ns, resources, deep, overwrite, options = {\n    silent: false,\n    skipCopy: false\n  }) {\n    let path = [lng, ns];\n    if (lng.indexOf('.') > -1) {\n      path = lng.split('.');\n      deep = resources;\n      resources = ns;\n      ns = path[1];\n    }\n    this.addNamespaces(ns);\n    let pack = getPath(this.data, path) || {};\n    if (!options.skipCopy) resources = JSON.parse(JSON.stringify(resources));\n    if (deep) {\n      deepExtend(pack, resources, overwrite);\n    } else {\n      pack = {\n        ...pack,\n        ...resources\n      };\n    }\n    setPath(this.data, path, pack);\n    if (!options.silent) this.emit('added', lng, ns, resources);\n  }\n  removeResourceBundle(lng, ns) {\n    if (this.hasResourceBundle(lng, ns)) {\n      delete this.data[lng][ns];\n    }\n    this.removeNamespaces(ns);\n    this.emit('removed', lng, ns);\n  }\n  hasResourceBundle(lng, ns) {\n    return this.getResource(lng, ns) !== undefined;\n  }\n  getResourceBundle(lng, ns) {\n    if (!ns) ns = this.options.defaultNS;\n    return this.getResource(lng, ns);\n  }\n  getDataByLanguage(lng) {\n    return this.data[lng];\n  }\n  hasLanguageSomeTranslations(lng) {\n    const data = this.getDataByLanguage(lng);\n    const n = data && Object.keys(data) || [];\n    return !!n.find(v => data[v] && Object.keys(data[v]).length > 0);\n  }\n  toJSON() {\n    return this.data;\n  }\n}\n\nvar postProcessor = {\n  processors: {},\n  addPostProcessor(module) {\n    this.processors[module.name] = module;\n  },\n  handle(processors, value, key, options, translator) {\n    processors.forEach(processor => {\n      value = this.processors[processor]?.process(value, key, options, translator) ?? value;\n    });\n    return value;\n  }\n};\n\nconst checkedLoadedFor = {};\nconst shouldHandleAsObject = res => !isString(res) && typeof res !== 'boolean' && typeof res !== 'number';\nclass Translator extends EventEmitter {\n  constructor(services, options = {}) {\n    super();\n    copy(['resourceStore', 'languageUtils', 'pluralResolver', 'interpolator', 'backendConnector', 'i18nFormat', 'utils'], services, this);\n    this.options = options;\n    if (this.options.keySeparator === undefined) {\n      this.options.keySeparator = '.';\n    }\n    this.logger = baseLogger.create('translator');\n  }\n  changeLanguage(lng) {\n    if (lng) this.language = lng;\n  }\n  exists(key, o = {\n    interpolation: {}\n  }) {\n    const opt = {\n      ...o\n    };\n    if (key == null) return false;\n    const resolved = this.resolve(key, opt);\n    return resolved?.res !== undefined;\n  }\n  extractFromKey(key, opt) {\n    let nsSeparator = opt.nsSeparator !== undefined ? opt.nsSeparator : this.options.nsSeparator;\n    if (nsSeparator === undefined) nsSeparator = ':';\n    const keySeparator = opt.keySeparator !== undefined ? opt.keySeparator : this.options.keySeparator;\n    let namespaces = opt.ns || this.options.defaultNS || [];\n    const wouldCheckForNsInKey = nsSeparator && key.indexOf(nsSeparator) > -1;\n    const seemsNaturalLanguage = !this.options.userDefinedKeySeparator && !opt.keySeparator && !this.options.userDefinedNsSeparator && !opt.nsSeparator && !looksLikeObjectPath(key, nsSeparator, keySeparator);\n    if (wouldCheckForNsInKey && !seemsNaturalLanguage) {\n      const m = key.match(this.interpolator.nestingRegexp);\n      if (m && m.length > 0) {\n        return {\n          key,\n          namespaces: isString(namespaces) ? [namespaces] : namespaces\n        };\n      }\n      const parts = key.split(nsSeparator);\n      if (nsSeparator !== keySeparator || nsSeparator === keySeparator && this.options.ns.indexOf(parts[0]) > -1) namespaces = parts.shift();\n      key = parts.join(keySeparator);\n    }\n    return {\n      key,\n      namespaces: isString(namespaces) ? [namespaces] : namespaces\n    };\n  }\n  translate(keys, o, lastKey) {\n    let opt = typeof o === 'object' ? {\n      ...o\n    } : o;\n    if (typeof opt !== 'object' && this.options.overloadTranslationOptionHandler) {\n      opt = this.options.overloadTranslationOptionHandler(arguments);\n    }\n    if (typeof options === 'object') opt = {\n      ...opt\n    };\n    if (!opt) opt = {};\n    if (keys == null) return '';\n    if (!Array.isArray(keys)) keys = [String(keys)];\n    const returnDetails = opt.returnDetails !== undefined ? opt.returnDetails : this.options.returnDetails;\n    const keySeparator = opt.keySeparator !== undefined ? opt.keySeparator : this.options.keySeparator;\n    const {\n      key,\n      namespaces\n    } = this.extractFromKey(keys[keys.length - 1], opt);\n    const namespace = namespaces[namespaces.length - 1];\n    let nsSeparator = opt.nsSeparator !== undefined ? opt.nsSeparator : this.options.nsSeparator;\n    if (nsSeparator === undefined) nsSeparator = ':';\n    const lng = opt.lng || this.language;\n    const appendNamespaceToCIMode = opt.appendNamespaceToCIMode || this.options.appendNamespaceToCIMode;\n    if (lng?.toLowerCase() === 'cimode') {\n      if (appendNamespaceToCIMode) {\n        if (returnDetails) {\n          return {\n            res: `${namespace}${nsSeparator}${key}`,\n            usedKey: key,\n            exactUsedKey: key,\n            usedLng: lng,\n            usedNS: namespace,\n            usedParams: this.getUsedParamsDetails(opt)\n          };\n        }\n        return `${namespace}${nsSeparator}${key}`;\n      }\n      if (returnDetails) {\n        return {\n          res: key,\n          usedKey: key,\n          exactUsedKey: key,\n          usedLng: lng,\n          usedNS: namespace,\n          usedParams: this.getUsedParamsDetails(opt)\n        };\n      }\n      return key;\n    }\n    const resolved = this.resolve(keys, opt);\n    let res = resolved?.res;\n    const resUsedKey = resolved?.usedKey || key;\n    const resExactUsedKey = resolved?.exactUsedKey || key;\n    const noObject = ['[object Number]', '[object Function]', '[object RegExp]'];\n    const joinArrays = opt.joinArrays !== undefined ? opt.joinArrays : this.options.joinArrays;\n    const handleAsObjectInI18nFormat = !this.i18nFormat || this.i18nFormat.handleAsObject;\n    const needsPluralHandling = opt.count !== undefined && !isString(opt.count);\n    const hasDefaultValue = Translator.hasDefaultValue(opt);\n    const defaultValueSuffix = needsPluralHandling ? this.pluralResolver.getSuffix(lng, opt.count, opt) : '';\n    const defaultValueSuffixOrdinalFallback = opt.ordinal && needsPluralHandling ? this.pluralResolver.getSuffix(lng, opt.count, {\n      ordinal: false\n    }) : '';\n    const needsZeroSuffixLookup = needsPluralHandling && !opt.ordinal && opt.count === 0;\n    const defaultValue = needsZeroSuffixLookup && opt[`defaultValue${this.options.pluralSeparator}zero`] || opt[`defaultValue${defaultValueSuffix}`] || opt[`defaultValue${defaultValueSuffixOrdinalFallback}`] || opt.defaultValue;\n    let resForObjHndl = res;\n    if (handleAsObjectInI18nFormat && !res && hasDefaultValue) {\n      resForObjHndl = defaultValue;\n    }\n    const handleAsObject = shouldHandleAsObject(resForObjHndl);\n    const resType = Object.prototype.toString.apply(resForObjHndl);\n    if (handleAsObjectInI18nFormat && resForObjHndl && handleAsObject && noObject.indexOf(resType) < 0 && !(isString(joinArrays) && Array.isArray(resForObjHndl))) {\n      if (!opt.returnObjects && !this.options.returnObjects) {\n        if (!this.options.returnedObjectHandler) {\n          this.logger.warn('accessing an object - but returnObjects options is not enabled!');\n        }\n        const r = this.options.returnedObjectHandler ? this.options.returnedObjectHandler(resUsedKey, resForObjHndl, {\n          ...opt,\n          ns: namespaces\n        }) : `key '${key} (${this.language})' returned an object instead of string.`;\n        if (returnDetails) {\n          resolved.res = r;\n          resolved.usedParams = this.getUsedParamsDetails(opt);\n          return resolved;\n        }\n        return r;\n      }\n      if (keySeparator) {\n        const resTypeIsArray = Array.isArray(resForObjHndl);\n        const copy = resTypeIsArray ? [] : {};\n        const newKeyToUse = resTypeIsArray ? resExactUsedKey : resUsedKey;\n        for (const m in resForObjHndl) {\n          if (Object.prototype.hasOwnProperty.call(resForObjHndl, m)) {\n            const deepKey = `${newKeyToUse}${keySeparator}${m}`;\n            if (hasDefaultValue && !res) {\n              copy[m] = this.translate(deepKey, {\n                ...opt,\n                defaultValue: shouldHandleAsObject(defaultValue) ? defaultValue[m] : undefined,\n                ...{\n                  joinArrays: false,\n                  ns: namespaces\n                }\n              });\n            } else {\n              copy[m] = this.translate(deepKey, {\n                ...opt,\n                ...{\n                  joinArrays: false,\n                  ns: namespaces\n                }\n              });\n            }\n            if (copy[m] === deepKey) copy[m] = resForObjHndl[m];\n          }\n        }\n        res = copy;\n      }\n    } else if (handleAsObjectInI18nFormat && isString(joinArrays) && Array.isArray(res)) {\n      res = res.join(joinArrays);\n      if (res) res = this.extendTranslation(res, keys, opt, lastKey);\n    } else {\n      let usedDefault = false;\n      let usedKey = false;\n      if (!this.isValidLookup(res) && hasDefaultValue) {\n        usedDefault = true;\n        res = defaultValue;\n      }\n      if (!this.isValidLookup(res)) {\n        usedKey = true;\n        res = key;\n      }\n      const missingKeyNoValueFallbackToKey = opt.missingKeyNoValueFallbackToKey || this.options.missingKeyNoValueFallbackToKey;\n      const resForMissing = missingKeyNoValueFallbackToKey && usedKey ? undefined : res;\n      const updateMissing = hasDefaultValue && defaultValue !== res && this.options.updateMissing;\n      if (usedKey || usedDefault || updateMissing) {\n        this.logger.log(updateMissing ? 'updateKey' : 'missingKey', lng, namespace, key, updateMissing ? defaultValue : res);\n        if (keySeparator) {\n          const fk = this.resolve(key, {\n            ...opt,\n            keySeparator: false\n          });\n          if (fk && fk.res) this.logger.warn('Seems the loaded translations were in flat JSON format instead of nested. Either set keySeparator: false on init or make sure your translations are published in nested format.');\n        }\n        let lngs = [];\n        const fallbackLngs = this.languageUtils.getFallbackCodes(this.options.fallbackLng, opt.lng || this.language);\n        if (this.options.saveMissingTo === 'fallback' && fallbackLngs && fallbackLngs[0]) {\n          for (let i = 0; i < fallbackLngs.length; i++) {\n            lngs.push(fallbackLngs[i]);\n          }\n        } else if (this.options.saveMissingTo === 'all') {\n          lngs = this.languageUtils.toResolveHierarchy(opt.lng || this.language);\n        } else {\n          lngs.push(opt.lng || this.language);\n        }\n        const send = (l, k, specificDefaultValue) => {\n          const defaultForMissing = hasDefaultValue && specificDefaultValue !== res ? specificDefaultValue : resForMissing;\n          if (this.options.missingKeyHandler) {\n            this.options.missingKeyHandler(l, namespace, k, defaultForMissing, updateMissing, opt);\n          } else if (this.backendConnector?.saveMissing) {\n            this.backendConnector.saveMissing(l, namespace, k, defaultForMissing, updateMissing, opt);\n          }\n          this.emit('missingKey', l, namespace, k, res);\n        };\n        if (this.options.saveMissing) {\n          if (this.options.saveMissingPlurals && needsPluralHandling) {\n            lngs.forEach(language => {\n              const suffixes = this.pluralResolver.getSuffixes(language, opt);\n              if (needsZeroSuffixLookup && opt[`defaultValue${this.options.pluralSeparator}zero`] && suffixes.indexOf(`${this.options.pluralSeparator}zero`) < 0) {\n                suffixes.push(`${this.options.pluralSeparator}zero`);\n              }\n              suffixes.forEach(suffix => {\n                send([language], key + suffix, opt[`defaultValue${suffix}`] || defaultValue);\n              });\n            });\n          } else {\n            send(lngs, key, defaultValue);\n          }\n        }\n      }\n      res = this.extendTranslation(res, keys, opt, resolved, lastKey);\n      if (usedKey && res === key && this.options.appendNamespaceToMissingKey) {\n        res = `${namespace}${nsSeparator}${key}`;\n      }\n      if ((usedKey || usedDefault) && this.options.parseMissingKeyHandler) {\n        res = this.options.parseMissingKeyHandler(this.options.appendNamespaceToMissingKey ? `${namespace}${nsSeparator}${key}` : key, usedDefault ? res : undefined, opt);\n      }\n    }\n    if (returnDetails) {\n      resolved.res = res;\n      resolved.usedParams = this.getUsedParamsDetails(opt);\n      return resolved;\n    }\n    return res;\n  }\n  extendTranslation(res, key, opt, resolved, lastKey) {\n    if (this.i18nFormat?.parse) {\n      res = this.i18nFormat.parse(res, {\n        ...this.options.interpolation.defaultVariables,\n        ...opt\n      }, opt.lng || this.language || resolved.usedLng, resolved.usedNS, resolved.usedKey, {\n        resolved\n      });\n    } else if (!opt.skipInterpolation) {\n      if (opt.interpolation) this.interpolator.init({\n        ...opt,\n        ...{\n          interpolation: {\n            ...this.options.interpolation,\n            ...opt.interpolation\n          }\n        }\n      });\n      const skipOnVariables = isString(res) && (opt?.interpolation?.skipOnVariables !== undefined ? opt.interpolation.skipOnVariables : this.options.interpolation.skipOnVariables);\n      let nestBef;\n      if (skipOnVariables) {\n        const nb = res.match(this.interpolator.nestingRegexp);\n        nestBef = nb && nb.length;\n      }\n      let data = opt.replace && !isString(opt.replace) ? opt.replace : opt;\n      if (this.options.interpolation.defaultVariables) data = {\n        ...this.options.interpolation.defaultVariables,\n        ...data\n      };\n      res = this.interpolator.interpolate(res, data, opt.lng || this.language || resolved.usedLng, opt);\n      if (skipOnVariables) {\n        const na = res.match(this.interpolator.nestingRegexp);\n        const nestAft = na && na.length;\n        if (nestBef < nestAft) opt.nest = false;\n      }\n      if (!opt.lng && resolved && resolved.res) opt.lng = this.language || resolved.usedLng;\n      if (opt.nest !== false) res = this.interpolator.nest(res, (...args) => {\n        if (lastKey?.[0] === args[0] && !opt.context) {\n          this.logger.warn(`It seems you are nesting recursively key: ${args[0]} in key: ${key[0]}`);\n          return null;\n        }\n        return this.translate(...args, key);\n      }, opt);\n      if (opt.interpolation) this.interpolator.reset();\n    }\n    const postProcess = opt.postProcess || this.options.postProcess;\n    const postProcessorNames = isString(postProcess) ? [postProcess] : postProcess;\n    if (res != null && postProcessorNames?.length && opt.applyPostProcessor !== false) {\n      res = postProcessor.handle(postProcessorNames, res, key, this.options && this.options.postProcessPassResolved ? {\n        i18nResolved: {\n          ...resolved,\n          usedParams: this.getUsedParamsDetails(opt)\n        },\n        ...opt\n      } : opt, this);\n    }\n    return res;\n  }\n  resolve(keys, opt = {}) {\n    let found;\n    let usedKey;\n    let exactUsedKey;\n    let usedLng;\n    let usedNS;\n    if (isString(keys)) keys = [keys];\n    keys.forEach(k => {\n      if (this.isValidLookup(found)) return;\n      const extracted = this.extractFromKey(k, opt);\n      const key = extracted.key;\n      usedKey = key;\n      let namespaces = extracted.namespaces;\n      if (this.options.fallbackNS) namespaces = namespaces.concat(this.options.fallbackNS);\n      const needsPluralHandling = opt.count !== undefined && !isString(opt.count);\n      const needsZeroSuffixLookup = needsPluralHandling && !opt.ordinal && opt.count === 0;\n      const needsContextHandling = opt.context !== undefined && (isString(opt.context) || typeof opt.context === 'number') && opt.context !== '';\n      const codes = opt.lngs ? opt.lngs : this.languageUtils.toResolveHierarchy(opt.lng || this.language, opt.fallbackLng);\n      namespaces.forEach(ns => {\n        if (this.isValidLookup(found)) return;\n        usedNS = ns;\n        if (!checkedLoadedFor[`${codes[0]}-${ns}`] && this.utils?.hasLoadedNamespace && !this.utils?.hasLoadedNamespace(usedNS)) {\n          checkedLoadedFor[`${codes[0]}-${ns}`] = true;\n          this.logger.warn(`key \"${usedKey}\" for languages \"${codes.join(', ')}\" won't get resolved as namespace \"${usedNS}\" was not yet loaded`, 'This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!');\n        }\n        codes.forEach(code => {\n          if (this.isValidLookup(found)) return;\n          usedLng = code;\n          const finalKeys = [key];\n          if (this.i18nFormat?.addLookupKeys) {\n            this.i18nFormat.addLookupKeys(finalKeys, key, code, ns, opt);\n          } else {\n            let pluralSuffix;\n            if (needsPluralHandling) pluralSuffix = this.pluralResolver.getSuffix(code, opt.count, opt);\n            const zeroSuffix = `${this.options.pluralSeparator}zero`;\n            const ordinalPrefix = `${this.options.pluralSeparator}ordinal${this.options.pluralSeparator}`;\n            if (needsPluralHandling) {\n              if (opt.ordinal && pluralSuffix.indexOf(ordinalPrefix) === 0) {\n                finalKeys.push(key + pluralSuffix.replace(ordinalPrefix, this.options.pluralSeparator));\n              }\n              finalKeys.push(key + pluralSuffix);\n              if (needsZeroSuffixLookup) {\n                finalKeys.push(key + zeroSuffix);\n              }\n            }\n            if (needsContextHandling) {\n              const contextKey = `${key}${this.options.contextSeparator || '_'}${opt.context}`;\n              finalKeys.push(contextKey);\n              if (needsPluralHandling) {\n                if (opt.ordinal && pluralSuffix.indexOf(ordinalPrefix) === 0) {\n                  finalKeys.push(contextKey + pluralSuffix.replace(ordinalPrefix, this.options.pluralSeparator));\n                }\n                finalKeys.push(contextKey + pluralSuffix);\n                if (needsZeroSuffixLookup) {\n                  finalKeys.push(contextKey + zeroSuffix);\n                }\n              }\n            }\n          }\n          let possibleKey;\n          while (possibleKey = finalKeys.pop()) {\n            if (!this.isValidLookup(found)) {\n              exactUsedKey = possibleKey;\n              found = this.getResource(code, ns, possibleKey, opt);\n            }\n          }\n        });\n      });\n    });\n    return {\n      res: found,\n      usedKey,\n      exactUsedKey,\n      usedLng,\n      usedNS\n    };\n  }\n  isValidLookup(res) {\n    return res !== undefined && !(!this.options.returnNull && res === null) && !(!this.options.returnEmptyString && res === '');\n  }\n  getResource(code, ns, key, options = {}) {\n    if (this.i18nFormat?.getResource) return this.i18nFormat.getResource(code, ns, key, options);\n    return this.resourceStore.getResource(code, ns, key, options);\n  }\n  getUsedParamsDetails(options = {}) {\n    const optionsKeys = ['defaultValue', 'ordinal', 'context', 'replace', 'lng', 'lngs', 'fallbackLng', 'ns', 'keySeparator', 'nsSeparator', 'returnObjects', 'returnDetails', 'joinArrays', 'postProcess', 'interpolation'];\n    const useOptionsReplaceForData = options.replace && !isString(options.replace);\n    let data = useOptionsReplaceForData ? options.replace : options;\n    if (useOptionsReplaceForData && typeof options.count !== 'undefined') {\n      data.count = options.count;\n    }\n    if (this.options.interpolation.defaultVariables) {\n      data = {\n        ...this.options.interpolation.defaultVariables,\n        ...data\n      };\n    }\n    if (!useOptionsReplaceForData) {\n      data = {\n        ...data\n      };\n      for (const key of optionsKeys) {\n        delete data[key];\n      }\n    }\n    return data;\n  }\n  static hasDefaultValue(options) {\n    const prefix = 'defaultValue';\n    for (const option in options) {\n      if (Object.prototype.hasOwnProperty.call(options, option) && prefix === option.substring(0, prefix.length) && undefined !== options[option]) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\nclass LanguageUtil {\n  constructor(options) {\n    this.options = options;\n    this.supportedLngs = this.options.supportedLngs || false;\n    this.logger = baseLogger.create('languageUtils');\n  }\n  getScriptPartFromCode(code) {\n    code = getCleanedCode(code);\n    if (!code || code.indexOf('-') < 0) return null;\n    const p = code.split('-');\n    if (p.length === 2) return null;\n    p.pop();\n    if (p[p.length - 1].toLowerCase() === 'x') return null;\n    return this.formatLanguageCode(p.join('-'));\n  }\n  getLanguagePartFromCode(code) {\n    code = getCleanedCode(code);\n    if (!code || code.indexOf('-') < 0) return code;\n    const p = code.split('-');\n    return this.formatLanguageCode(p[0]);\n  }\n  formatLanguageCode(code) {\n    if (isString(code) && code.indexOf('-') > -1) {\n      let formattedCode;\n      try {\n        formattedCode = Intl.getCanonicalLocales(code)[0];\n      } catch (e) {}\n      if (formattedCode && this.options.lowerCaseLng) {\n        formattedCode = formattedCode.toLowerCase();\n      }\n      if (formattedCode) return formattedCode;\n      if (this.options.lowerCaseLng) {\n        return code.toLowerCase();\n      }\n      return code;\n    }\n    return this.options.cleanCode || this.options.lowerCaseLng ? code.toLowerCase() : code;\n  }\n  isSupportedCode(code) {\n    if (this.options.load === 'languageOnly' || this.options.nonExplicitSupportedLngs) {\n      code = this.getLanguagePartFromCode(code);\n    }\n    return !this.supportedLngs || !this.supportedLngs.length || this.supportedLngs.indexOf(code) > -1;\n  }\n  getBestMatchFromCodes(codes) {\n    if (!codes) return null;\n    let found;\n    codes.forEach(code => {\n      if (found) return;\n      const cleanedLng = this.formatLanguageCode(code);\n      if (!this.options.supportedLngs || this.isSupportedCode(cleanedLng)) found = cleanedLng;\n    });\n    if (!found && this.options.supportedLngs) {\n      codes.forEach(code => {\n        if (found) return;\n        const lngScOnly = this.getScriptPartFromCode(code);\n        if (this.isSupportedCode(lngScOnly)) return found = lngScOnly;\n        const lngOnly = this.getLanguagePartFromCode(code);\n        if (this.isSupportedCode(lngOnly)) return found = lngOnly;\n        found = this.options.supportedLngs.find(supportedLng => {\n          if (supportedLng === lngOnly) return supportedLng;\n          if (supportedLng.indexOf('-') < 0 && lngOnly.indexOf('-') < 0) return;\n          if (supportedLng.indexOf('-') > 0 && lngOnly.indexOf('-') < 0 && supportedLng.substring(0, supportedLng.indexOf('-')) === lngOnly) return supportedLng;\n          if (supportedLng.indexOf(lngOnly) === 0 && lngOnly.length > 1) return supportedLng;\n        });\n      });\n    }\n    if (!found) found = this.getFallbackCodes(this.options.fallbackLng)[0];\n    return found;\n  }\n  getFallbackCodes(fallbacks, code) {\n    if (!fallbacks) return [];\n    if (typeof fallbacks === 'function') fallbacks = fallbacks(code);\n    if (isString(fallbacks)) fallbacks = [fallbacks];\n    if (Array.isArray(fallbacks)) return fallbacks;\n    if (!code) return fallbacks.default || [];\n    let found = fallbacks[code];\n    if (!found) found = fallbacks[this.getScriptPartFromCode(code)];\n    if (!found) found = fallbacks[this.formatLanguageCode(code)];\n    if (!found) found = fallbacks[this.getLanguagePartFromCode(code)];\n    if (!found) found = fallbacks.default;\n    return found || [];\n  }\n  toResolveHierarchy(code, fallbackCode) {\n    const fallbackCodes = this.getFallbackCodes((fallbackCode === false ? [] : fallbackCode) || this.options.fallbackLng || [], code);\n    const codes = [];\n    const addCode = c => {\n      if (!c) return;\n      if (this.isSupportedCode(c)) {\n        codes.push(c);\n      } else {\n        this.logger.warn(`rejecting language code not found in supportedLngs: ${c}`);\n      }\n    };\n    if (isString(code) && (code.indexOf('-') > -1 || code.indexOf('_') > -1)) {\n      if (this.options.load !== 'languageOnly') addCode(this.formatLanguageCode(code));\n      if (this.options.load !== 'languageOnly' && this.options.load !== 'currentOnly') addCode(this.getScriptPartFromCode(code));\n      if (this.options.load !== 'currentOnly') addCode(this.getLanguagePartFromCode(code));\n    } else if (isString(code)) {\n      addCode(this.formatLanguageCode(code));\n    }\n    fallbackCodes.forEach(fc => {\n      if (codes.indexOf(fc) < 0) addCode(this.formatLanguageCode(fc));\n    });\n    return codes;\n  }\n}\n\nconst suffixesOrder = {\n  zero: 0,\n  one: 1,\n  two: 2,\n  few: 3,\n  many: 4,\n  other: 5\n};\nconst dummyRule = {\n  select: count => count === 1 ? 'one' : 'other',\n  resolvedOptions: () => ({\n    pluralCategories: ['one', 'other']\n  })\n};\nclass PluralResolver {\n  constructor(languageUtils, options = {}) {\n    this.languageUtils = languageUtils;\n    this.options = options;\n    this.logger = baseLogger.create('pluralResolver');\n    this.pluralRulesCache = {};\n  }\n  addRule(lng, obj) {\n    this.rules[lng] = obj;\n  }\n  clearCache() {\n    this.pluralRulesCache = {};\n  }\n  getRule(code, options = {}) {\n    const cleanedCode = getCleanedCode(code === 'dev' ? 'en' : code);\n    const type = options.ordinal ? 'ordinal' : 'cardinal';\n    const cacheKey = JSON.stringify({\n      cleanedCode,\n      type\n    });\n    if (cacheKey in this.pluralRulesCache) {\n      return this.pluralRulesCache[cacheKey];\n    }\n    let rule;\n    try {\n      rule = new Intl.PluralRules(cleanedCode, {\n        type\n      });\n    } catch (err) {\n      if (!Intl) {\n        this.logger.error('No Intl support, please use an Intl polyfill!');\n        return dummyRule;\n      }\n      if (!code.match(/-|_/)) return dummyRule;\n      const lngPart = this.languageUtils.getLanguagePartFromCode(code);\n      rule = this.getRule(lngPart, options);\n    }\n    this.pluralRulesCache[cacheKey] = rule;\n    return rule;\n  }\n  needsPlural(code, options = {}) {\n    let rule = this.getRule(code, options);\n    if (!rule) rule = this.getRule('dev', options);\n    return rule?.resolvedOptions().pluralCategories.length > 1;\n  }\n  getPluralFormsOfKey(code, key, options = {}) {\n    return this.getSuffixes(code, options).map(suffix => `${key}${suffix}`);\n  }\n  getSuffixes(code, options = {}) {\n    let rule = this.getRule(code, options);\n    if (!rule) rule = this.getRule('dev', options);\n    if (!rule) return [];\n    return rule.resolvedOptions().pluralCategories.sort((pluralCategory1, pluralCategory2) => suffixesOrder[pluralCategory1] - suffixesOrder[pluralCategory2]).map(pluralCategory => `${this.options.prepend}${options.ordinal ? `ordinal${this.options.prepend}` : ''}${pluralCategory}`);\n  }\n  getSuffix(code, count, options = {}) {\n    const rule = this.getRule(code, options);\n    if (rule) {\n      return `${this.options.prepend}${options.ordinal ? `ordinal${this.options.prepend}` : ''}${rule.select(count)}`;\n    }\n    this.logger.warn(`no plural rule found for: ${code}`);\n    return this.getSuffix('dev', count, options);\n  }\n}\n\nconst deepFindWithDefaults = (data, defaultData, key, keySeparator = '.', ignoreJSONStructure = true) => {\n  let path = getPathWithDefaults(data, defaultData, key);\n  if (!path && ignoreJSONStructure && isString(key)) {\n    path = deepFind(data, key, keySeparator);\n    if (path === undefined) path = deepFind(defaultData, key, keySeparator);\n  }\n  return path;\n};\nconst regexSafe = val => val.replace(/\\$/g, '$$$$');\nclass Interpolator {\n  constructor(options = {}) {\n    this.logger = baseLogger.create('interpolator');\n    this.options = options;\n    this.format = options?.interpolation?.format || (value => value);\n    this.init(options);\n  }\n  init(options = {}) {\n    if (!options.interpolation) options.interpolation = {\n      escapeValue: true\n    };\n    const {\n      escape: escape$1,\n      escapeValue,\n      useRawValueToEscape,\n      prefix,\n      prefixEscaped,\n      suffix,\n      suffixEscaped,\n      formatSeparator,\n      unescapeSuffix,\n      unescapePrefix,\n      nestingPrefix,\n      nestingPrefixEscaped,\n      nestingSuffix,\n      nestingSuffixEscaped,\n      nestingOptionsSeparator,\n      maxReplaces,\n      alwaysFormat\n    } = options.interpolation;\n    this.escape = escape$1 !== undefined ? escape$1 : escape;\n    this.escapeValue = escapeValue !== undefined ? escapeValue : true;\n    this.useRawValueToEscape = useRawValueToEscape !== undefined ? useRawValueToEscape : false;\n    this.prefix = prefix ? regexEscape(prefix) : prefixEscaped || '{{';\n    this.suffix = suffix ? regexEscape(suffix) : suffixEscaped || '}}';\n    this.formatSeparator = formatSeparator || ',';\n    this.unescapePrefix = unescapeSuffix ? '' : unescapePrefix || '-';\n    this.unescapeSuffix = this.unescapePrefix ? '' : unescapeSuffix || '';\n    this.nestingPrefix = nestingPrefix ? regexEscape(nestingPrefix) : nestingPrefixEscaped || regexEscape('$t(');\n    this.nestingSuffix = nestingSuffix ? regexEscape(nestingSuffix) : nestingSuffixEscaped || regexEscape(')');\n    this.nestingOptionsSeparator = nestingOptionsSeparator || ',';\n    this.maxReplaces = maxReplaces || 1000;\n    this.alwaysFormat = alwaysFormat !== undefined ? alwaysFormat : false;\n    this.resetRegExp();\n  }\n  reset() {\n    if (this.options) this.init(this.options);\n  }\n  resetRegExp() {\n    const getOrResetRegExp = (existingRegExp, pattern) => {\n      if (existingRegExp?.source === pattern) {\n        existingRegExp.lastIndex = 0;\n        return existingRegExp;\n      }\n      return new RegExp(pattern, 'g');\n    };\n    this.regexp = getOrResetRegExp(this.regexp, `${this.prefix}(.+?)${this.suffix}`);\n    this.regexpUnescape = getOrResetRegExp(this.regexpUnescape, `${this.prefix}${this.unescapePrefix}(.+?)${this.unescapeSuffix}${this.suffix}`);\n    this.nestingRegexp = getOrResetRegExp(this.nestingRegexp, `${this.nestingPrefix}((?:[^()\"']+|\"[^\"]*\"|'[^']*'|\\\\((?:[^()]|\"[^\"]*\"|'[^']*')*\\\\))*?)${this.nestingSuffix}`);\n  }\n  interpolate(str, data, lng, options) {\n    let match;\n    let value;\n    let replaces;\n    const defaultData = this.options && this.options.interpolation && this.options.interpolation.defaultVariables || {};\n    const handleFormat = key => {\n      if (key.indexOf(this.formatSeparator) < 0) {\n        const path = deepFindWithDefaults(data, defaultData, key, this.options.keySeparator, this.options.ignoreJSONStructure);\n        return this.alwaysFormat ? this.format(path, undefined, lng, {\n          ...options,\n          ...data,\n          interpolationkey: key\n        }) : path;\n      }\n      const p = key.split(this.formatSeparator);\n      const k = p.shift().trim();\n      const f = p.join(this.formatSeparator).trim();\n      return this.format(deepFindWithDefaults(data, defaultData, k, this.options.keySeparator, this.options.ignoreJSONStructure), f, lng, {\n        ...options,\n        ...data,\n        interpolationkey: k\n      });\n    };\n    this.resetRegExp();\n    const missingInterpolationHandler = options?.missingInterpolationHandler || this.options.missingInterpolationHandler;\n    const skipOnVariables = options?.interpolation?.skipOnVariables !== undefined ? options.interpolation.skipOnVariables : this.options.interpolation.skipOnVariables;\n    const todos = [{\n      regex: this.regexpUnescape,\n      safeValue: val => regexSafe(val)\n    }, {\n      regex: this.regexp,\n      safeValue: val => this.escapeValue ? regexSafe(this.escape(val)) : regexSafe(val)\n    }];\n    todos.forEach(todo => {\n      replaces = 0;\n      while (match = todo.regex.exec(str)) {\n        const matchedVar = match[1].trim();\n        value = handleFormat(matchedVar);\n        if (value === undefined) {\n          if (typeof missingInterpolationHandler === 'function') {\n            const temp = missingInterpolationHandler(str, match, options);\n            value = isString(temp) ? temp : '';\n          } else if (options && Object.prototype.hasOwnProperty.call(options, matchedVar)) {\n            value = '';\n          } else if (skipOnVariables) {\n            value = match[0];\n            continue;\n          } else {\n            this.logger.warn(`missed to pass in variable ${matchedVar} for interpolating ${str}`);\n            value = '';\n          }\n        } else if (!isString(value) && !this.useRawValueToEscape) {\n          value = makeString(value);\n        }\n        const safeValue = todo.safeValue(value);\n        str = str.replace(match[0], safeValue);\n        if (skipOnVariables) {\n          todo.regex.lastIndex += value.length;\n          todo.regex.lastIndex -= match[0].length;\n        } else {\n          todo.regex.lastIndex = 0;\n        }\n        replaces++;\n        if (replaces >= this.maxReplaces) {\n          break;\n        }\n      }\n    });\n    return str;\n  }\n  nest(str, fc, options = {}) {\n    let match;\n    let value;\n    let clonedOptions;\n    const handleHasOptions = (key, inheritedOptions) => {\n      const sep = this.nestingOptionsSeparator;\n      if (key.indexOf(sep) < 0) return key;\n      const c = key.split(new RegExp(`${sep}[ ]*{`));\n      let optionsString = `{${c[1]}`;\n      key = c[0];\n      optionsString = this.interpolate(optionsString, clonedOptions);\n      const matchedSingleQuotes = optionsString.match(/'/g);\n      const matchedDoubleQuotes = optionsString.match(/\"/g);\n      if ((matchedSingleQuotes?.length ?? 0) % 2 === 0 && !matchedDoubleQuotes || matchedDoubleQuotes.length % 2 !== 0) {\n        optionsString = optionsString.replace(/'/g, '\"');\n      }\n      try {\n        clonedOptions = JSON.parse(optionsString);\n        if (inheritedOptions) clonedOptions = {\n          ...inheritedOptions,\n          ...clonedOptions\n        };\n      } catch (e) {\n        this.logger.warn(`failed parsing options string in nesting for key ${key}`, e);\n        return `${key}${sep}${optionsString}`;\n      }\n      if (clonedOptions.defaultValue && clonedOptions.defaultValue.indexOf(this.prefix) > -1) delete clonedOptions.defaultValue;\n      return key;\n    };\n    while (match = this.nestingRegexp.exec(str)) {\n      let formatters = [];\n      clonedOptions = {\n        ...options\n      };\n      clonedOptions = clonedOptions.replace && !isString(clonedOptions.replace) ? clonedOptions.replace : clonedOptions;\n      clonedOptions.applyPostProcessor = false;\n      delete clonedOptions.defaultValue;\n      const keyEndIndex = /{.*}/.test(match[1]) ? match[1].lastIndexOf('}') + 1 : match[1].indexOf(this.formatSeparator);\n      if (keyEndIndex !== -1) {\n        formatters = match[1].slice(keyEndIndex).split(this.formatSeparator).map(elem => elem.trim()).filter(Boolean);\n        match[1] = match[1].slice(0, keyEndIndex);\n      }\n      value = fc(handleHasOptions.call(this, match[1].trim(), clonedOptions), clonedOptions);\n      if (value && match[0] === str && !isString(value)) return value;\n      if (!isString(value)) value = makeString(value);\n      if (!value) {\n        this.logger.warn(`missed to resolve ${match[1]} for nesting ${str}`);\n        value = '';\n      }\n      if (formatters.length) {\n        value = formatters.reduce((v, f) => this.format(v, f, options.lng, {\n          ...options,\n          interpolationkey: match[1].trim()\n        }), value.trim());\n      }\n      str = str.replace(match[0], value);\n      this.regexp.lastIndex = 0;\n    }\n    return str;\n  }\n}\n\nconst parseFormatStr = formatStr => {\n  let formatName = formatStr.toLowerCase().trim();\n  const formatOptions = {};\n  if (formatStr.indexOf('(') > -1) {\n    const p = formatStr.split('(');\n    formatName = p[0].toLowerCase().trim();\n    const optStr = p[1].substring(0, p[1].length - 1);\n    if (formatName === 'currency' && optStr.indexOf(':') < 0) {\n      if (!formatOptions.currency) formatOptions.currency = optStr.trim();\n    } else if (formatName === 'relativetime' && optStr.indexOf(':') < 0) {\n      if (!formatOptions.range) formatOptions.range = optStr.trim();\n    } else {\n      const opts = optStr.split(';');\n      opts.forEach(opt => {\n        if (opt) {\n          const [key, ...rest] = opt.split(':');\n          const val = rest.join(':').trim().replace(/^'+|'+$/g, '');\n          const trimmedKey = key.trim();\n          if (!formatOptions[trimmedKey]) formatOptions[trimmedKey] = val;\n          if (val === 'false') formatOptions[trimmedKey] = false;\n          if (val === 'true') formatOptions[trimmedKey] = true;\n          if (!isNaN(val)) formatOptions[trimmedKey] = parseInt(val, 10);\n        }\n      });\n    }\n  }\n  return {\n    formatName,\n    formatOptions\n  };\n};\nconst createCachedFormatter = fn => {\n  const cache = {};\n  return (v, l, o) => {\n    let optForCache = o;\n    if (o && o.interpolationkey && o.formatParams && o.formatParams[o.interpolationkey] && o[o.interpolationkey]) {\n      optForCache = {\n        ...optForCache,\n        [o.interpolationkey]: undefined\n      };\n    }\n    const key = l + JSON.stringify(optForCache);\n    let frm = cache[key];\n    if (!frm) {\n      frm = fn(getCleanedCode(l), o);\n      cache[key] = frm;\n    }\n    return frm(v);\n  };\n};\nconst createNonCachedFormatter = fn => (v, l, o) => fn(getCleanedCode(l), o)(v);\nclass Formatter {\n  constructor(options = {}) {\n    this.logger = baseLogger.create('formatter');\n    this.options = options;\n    this.init(options);\n  }\n  init(services, options = {\n    interpolation: {}\n  }) {\n    this.formatSeparator = options.interpolation.formatSeparator || ',';\n    const cf = options.cacheInBuiltFormats ? createCachedFormatter : createNonCachedFormatter;\n    this.formats = {\n      number: cf((lng, opt) => {\n        const formatter = new Intl.NumberFormat(lng, {\n          ...opt\n        });\n        return val => formatter.format(val);\n      }),\n      currency: cf((lng, opt) => {\n        const formatter = new Intl.NumberFormat(lng, {\n          ...opt,\n          style: 'currency'\n        });\n        return val => formatter.format(val);\n      }),\n      datetime: cf((lng, opt) => {\n        const formatter = new Intl.DateTimeFormat(lng, {\n          ...opt\n        });\n        return val => formatter.format(val);\n      }),\n      relativetime: cf((lng, opt) => {\n        const formatter = new Intl.RelativeTimeFormat(lng, {\n          ...opt\n        });\n        return val => formatter.format(val, opt.range || 'day');\n      }),\n      list: cf((lng, opt) => {\n        const formatter = new Intl.ListFormat(lng, {\n          ...opt\n        });\n        return val => formatter.format(val);\n      })\n    };\n  }\n  add(name, fc) {\n    this.formats[name.toLowerCase().trim()] = fc;\n  }\n  addCached(name, fc) {\n    this.formats[name.toLowerCase().trim()] = createCachedFormatter(fc);\n  }\n  format(value, format, lng, options = {}) {\n    const formats = format.split(this.formatSeparator);\n    if (formats.length > 1 && formats[0].indexOf('(') > 1 && formats[0].indexOf(')') < 0 && formats.find(f => f.indexOf(')') > -1)) {\n      const lastIndex = formats.findIndex(f => f.indexOf(')') > -1);\n      formats[0] = [formats[0], ...formats.splice(1, lastIndex)].join(this.formatSeparator);\n    }\n    const result = formats.reduce((mem, f) => {\n      const {\n        formatName,\n        formatOptions\n      } = parseFormatStr(f);\n      if (this.formats[formatName]) {\n        let formatted = mem;\n        try {\n          const valOptions = options?.formatParams?.[options.interpolationkey] || {};\n          const l = valOptions.locale || valOptions.lng || options.locale || options.lng || lng;\n          formatted = this.formats[formatName](mem, l, {\n            ...formatOptions,\n            ...options,\n            ...valOptions\n          });\n        } catch (error) {\n          this.logger.warn(error);\n        }\n        return formatted;\n      } else {\n        this.logger.warn(`there was no format function for ${formatName}`);\n      }\n      return mem;\n    }, value);\n    return result;\n  }\n}\n\nconst removePending = (q, name) => {\n  if (q.pending[name] !== undefined) {\n    delete q.pending[name];\n    q.pendingCount--;\n  }\n};\nclass Connector extends EventEmitter {\n  constructor(backend, store, services, options = {}) {\n    super();\n    this.backend = backend;\n    this.store = store;\n    this.services = services;\n    this.languageUtils = services.languageUtils;\n    this.options = options;\n    this.logger = baseLogger.create('backendConnector');\n    this.waitingReads = [];\n    this.maxParallelReads = options.maxParallelReads || 10;\n    this.readingCalls = 0;\n    this.maxRetries = options.maxRetries >= 0 ? options.maxRetries : 5;\n    this.retryTimeout = options.retryTimeout >= 1 ? options.retryTimeout : 350;\n    this.state = {};\n    this.queue = [];\n    this.backend?.init?.(services, options.backend, options);\n  }\n  queueLoad(languages, namespaces, options, callback) {\n    const toLoad = {};\n    const pending = {};\n    const toLoadLanguages = {};\n    const toLoadNamespaces = {};\n    languages.forEach(lng => {\n      let hasAllNamespaces = true;\n      namespaces.forEach(ns => {\n        const name = `${lng}|${ns}`;\n        if (!options.reload && this.store.hasResourceBundle(lng, ns)) {\n          this.state[name] = 2;\n        } else if (this.state[name] < 0) ; else if (this.state[name] === 1) {\n          if (pending[name] === undefined) pending[name] = true;\n        } else {\n          this.state[name] = 1;\n          hasAllNamespaces = false;\n          if (pending[name] === undefined) pending[name] = true;\n          if (toLoad[name] === undefined) toLoad[name] = true;\n          if (toLoadNamespaces[ns] === undefined) toLoadNamespaces[ns] = true;\n        }\n      });\n      if (!hasAllNamespaces) toLoadLanguages[lng] = true;\n    });\n    if (Object.keys(toLoad).length || Object.keys(pending).length) {\n      this.queue.push({\n        pending,\n        pendingCount: Object.keys(pending).length,\n        loaded: {},\n        errors: [],\n        callback\n      });\n    }\n    return {\n      toLoad: Object.keys(toLoad),\n      pending: Object.keys(pending),\n      toLoadLanguages: Object.keys(toLoadLanguages),\n      toLoadNamespaces: Object.keys(toLoadNamespaces)\n    };\n  }\n  loaded(name, err, data) {\n    const s = name.split('|');\n    const lng = s[0];\n    const ns = s[1];\n    if (err) this.emit('failedLoading', lng, ns, err);\n    if (!err && data) {\n      this.store.addResourceBundle(lng, ns, data, undefined, undefined, {\n        skipCopy: true\n      });\n    }\n    this.state[name] = err ? -1 : 2;\n    if (err && data) this.state[name] = 0;\n    const loaded = {};\n    this.queue.forEach(q => {\n      pushPath(q.loaded, [lng], ns);\n      removePending(q, name);\n      if (err) q.errors.push(err);\n      if (q.pendingCount === 0 && !q.done) {\n        Object.keys(q.loaded).forEach(l => {\n          if (!loaded[l]) loaded[l] = {};\n          const loadedKeys = q.loaded[l];\n          if (loadedKeys.length) {\n            loadedKeys.forEach(n => {\n              if (loaded[l][n] === undefined) loaded[l][n] = true;\n            });\n          }\n        });\n        q.done = true;\n        if (q.errors.length) {\n          q.callback(q.errors);\n        } else {\n          q.callback();\n        }\n      }\n    });\n    this.emit('loaded', loaded);\n    this.queue = this.queue.filter(q => !q.done);\n  }\n  read(lng, ns, fcName, tried = 0, wait = this.retryTimeout, callback) {\n    if (!lng.length) return callback(null, {});\n    if (this.readingCalls >= this.maxParallelReads) {\n      this.waitingReads.push({\n        lng,\n        ns,\n        fcName,\n        tried,\n        wait,\n        callback\n      });\n      return;\n    }\n    this.readingCalls++;\n    const resolver = (err, data) => {\n      this.readingCalls--;\n      if (this.waitingReads.length > 0) {\n        const next = this.waitingReads.shift();\n        this.read(next.lng, next.ns, next.fcName, next.tried, next.wait, next.callback);\n      }\n      if (err && data && tried < this.maxRetries) {\n        setTimeout(() => {\n          this.read.call(this, lng, ns, fcName, tried + 1, wait * 2, callback);\n        }, wait);\n        return;\n      }\n      callback(err, data);\n    };\n    const fc = this.backend[fcName].bind(this.backend);\n    if (fc.length === 2) {\n      try {\n        const r = fc(lng, ns);\n        if (r && typeof r.then === 'function') {\n          r.then(data => resolver(null, data)).catch(resolver);\n        } else {\n          resolver(null, r);\n        }\n      } catch (err) {\n        resolver(err);\n      }\n      return;\n    }\n    return fc(lng, ns, resolver);\n  }\n  prepareLoading(languages, namespaces, options = {}, callback) {\n    if (!this.backend) {\n      this.logger.warn('No backend was added via i18next.use. Will not load resources.');\n      return callback && callback();\n    }\n    if (isString(languages)) languages = this.languageUtils.toResolveHierarchy(languages);\n    if (isString(namespaces)) namespaces = [namespaces];\n    const toLoad = this.queueLoad(languages, namespaces, options, callback);\n    if (!toLoad.toLoad.length) {\n      if (!toLoad.pending.length) callback();\n      return null;\n    }\n    toLoad.toLoad.forEach(name => {\n      this.loadOne(name);\n    });\n  }\n  load(languages, namespaces, callback) {\n    this.prepareLoading(languages, namespaces, {}, callback);\n  }\n  reload(languages, namespaces, callback) {\n    this.prepareLoading(languages, namespaces, {\n      reload: true\n    }, callback);\n  }\n  loadOne(name, prefix = '') {\n    const s = name.split('|');\n    const lng = s[0];\n    const ns = s[1];\n    this.read(lng, ns, 'read', undefined, undefined, (err, data) => {\n      if (err) this.logger.warn(`${prefix}loading namespace ${ns} for language ${lng} failed`, err);\n      if (!err && data) this.logger.log(`${prefix}loaded namespace ${ns} for language ${lng}`, data);\n      this.loaded(name, err, data);\n    });\n  }\n  saveMissing(languages, namespace, key, fallbackValue, isUpdate, options = {}, clb = () => {}) {\n    if (this.services?.utils?.hasLoadedNamespace && !this.services?.utils?.hasLoadedNamespace(namespace)) {\n      this.logger.warn(`did not save key \"${key}\" as the namespace \"${namespace}\" was not yet loaded`, 'This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!');\n      return;\n    }\n    if (key === undefined || key === null || key === '') return;\n    if (this.backend?.create) {\n      const opts = {\n        ...options,\n        isUpdate\n      };\n      const fc = this.backend.create.bind(this.backend);\n      if (fc.length < 6) {\n        try {\n          let r;\n          if (fc.length === 5) {\n            r = fc(languages, namespace, key, fallbackValue, opts);\n          } else {\n            r = fc(languages, namespace, key, fallbackValue);\n          }\n          if (r && typeof r.then === 'function') {\n            r.then(data => clb(null, data)).catch(clb);\n          } else {\n            clb(null, r);\n          }\n        } catch (err) {\n          clb(err);\n        }\n      } else {\n        fc(languages, namespace, key, fallbackValue, clb, opts);\n      }\n    }\n    if (!languages || !languages[0]) return;\n    this.store.addResource(languages[0], namespace, key, fallbackValue);\n  }\n}\n\nconst get = () => ({\n  debug: false,\n  initAsync: true,\n  ns: ['translation'],\n  defaultNS: ['translation'],\n  fallbackLng: ['dev'],\n  fallbackNS: false,\n  supportedLngs: false,\n  nonExplicitSupportedLngs: false,\n  load: 'all',\n  preload: false,\n  simplifyPluralSuffix: true,\n  keySeparator: '.',\n  nsSeparator: ':',\n  pluralSeparator: '_',\n  contextSeparator: '_',\n  partialBundledLanguages: false,\n  saveMissing: false,\n  updateMissing: false,\n  saveMissingTo: 'fallback',\n  saveMissingPlurals: true,\n  missingKeyHandler: false,\n  missingInterpolationHandler: false,\n  postProcess: false,\n  postProcessPassResolved: false,\n  returnNull: false,\n  returnEmptyString: true,\n  returnObjects: false,\n  joinArrays: false,\n  returnedObjectHandler: false,\n  parseMissingKeyHandler: false,\n  appendNamespaceToMissingKey: false,\n  appendNamespaceToCIMode: false,\n  overloadTranslationOptionHandler: args => {\n    let ret = {};\n    if (typeof args[1] === 'object') ret = args[1];\n    if (isString(args[1])) ret.defaultValue = args[1];\n    if (isString(args[2])) ret.tDescription = args[2];\n    if (typeof args[2] === 'object' || typeof args[3] === 'object') {\n      const options = args[3] || args[2];\n      Object.keys(options).forEach(key => {\n        ret[key] = options[key];\n      });\n    }\n    return ret;\n  },\n  interpolation: {\n    escapeValue: true,\n    format: value => value,\n    prefix: '{{',\n    suffix: '}}',\n    formatSeparator: ',',\n    unescapePrefix: '-',\n    nestingPrefix: '$t(',\n    nestingSuffix: ')',\n    nestingOptionsSeparator: ',',\n    maxReplaces: 1000,\n    skipOnVariables: true\n  },\n  cacheInBuiltFormats: true\n});\nconst transformOptions = options => {\n  if (isString(options.ns)) options.ns = [options.ns];\n  if (isString(options.fallbackLng)) options.fallbackLng = [options.fallbackLng];\n  if (isString(options.fallbackNS)) options.fallbackNS = [options.fallbackNS];\n  if (options.supportedLngs?.indexOf?.('cimode') < 0) {\n    options.supportedLngs = options.supportedLngs.concat(['cimode']);\n  }\n  if (typeof options.initImmediate === 'boolean') options.initAsync = options.initImmediate;\n  return options;\n};\n\nconst noop = () => {};\nconst bindMemberFunctions = inst => {\n  const mems = Object.getOwnPropertyNames(Object.getPrototypeOf(inst));\n  mems.forEach(mem => {\n    if (typeof inst[mem] === 'function') {\n      inst[mem] = inst[mem].bind(inst);\n    }\n  });\n};\nclass I18n extends EventEmitter {\n  constructor(options = {}, callback) {\n    super();\n    this.options = transformOptions(options);\n    this.services = {};\n    this.logger = baseLogger;\n    this.modules = {\n      external: []\n    };\n    bindMemberFunctions(this);\n    if (callback && !this.isInitialized && !options.isClone) {\n      if (!this.options.initAsync) {\n        this.init(options, callback);\n        return this;\n      }\n      setTimeout(() => {\n        this.init(options, callback);\n      }, 0);\n    }\n  }\n  init(options = {}, callback) {\n    this.isInitializing = true;\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n    if (options.defaultNS == null && options.ns) {\n      if (isString(options.ns)) {\n        options.defaultNS = options.ns;\n      } else if (options.ns.indexOf('translation') < 0) {\n        options.defaultNS = options.ns[0];\n      }\n    }\n    const defOpts = get();\n    this.options = {\n      ...defOpts,\n      ...this.options,\n      ...transformOptions(options)\n    };\n    this.options.interpolation = {\n      ...defOpts.interpolation,\n      ...this.options.interpolation\n    };\n    if (options.keySeparator !== undefined) {\n      this.options.userDefinedKeySeparator = options.keySeparator;\n    }\n    if (options.nsSeparator !== undefined) {\n      this.options.userDefinedNsSeparator = options.nsSeparator;\n    }\n    const createClassOnDemand = ClassOrObject => {\n      if (!ClassOrObject) return null;\n      if (typeof ClassOrObject === 'function') return new ClassOrObject();\n      return ClassOrObject;\n    };\n    if (!this.options.isClone) {\n      if (this.modules.logger) {\n        baseLogger.init(createClassOnDemand(this.modules.logger), this.options);\n      } else {\n        baseLogger.init(null, this.options);\n      }\n      let formatter;\n      if (this.modules.formatter) {\n        formatter = this.modules.formatter;\n      } else {\n        formatter = Formatter;\n      }\n      const lu = new LanguageUtil(this.options);\n      this.store = new ResourceStore(this.options.resources, this.options);\n      const s = this.services;\n      s.logger = baseLogger;\n      s.resourceStore = this.store;\n      s.languageUtils = lu;\n      s.pluralResolver = new PluralResolver(lu, {\n        prepend: this.options.pluralSeparator,\n        simplifyPluralSuffix: this.options.simplifyPluralSuffix\n      });\n      const usingLegacyFormatFunction = this.options.interpolation.format && this.options.interpolation.format !== defOpts.interpolation.format;\n      if (usingLegacyFormatFunction) {\n        this.logger.warn(`init: you are still using the legacy format function, please use the new approach: https://www.i18next.com/translation-function/formatting`);\n      }\n      if (formatter && (!this.options.interpolation.format || this.options.interpolation.format === defOpts.interpolation.format)) {\n        s.formatter = createClassOnDemand(formatter);\n        if (s.formatter.init) s.formatter.init(s, this.options);\n        this.options.interpolation.format = s.formatter.format.bind(s.formatter);\n      }\n      s.interpolator = new Interpolator(this.options);\n      s.utils = {\n        hasLoadedNamespace: this.hasLoadedNamespace.bind(this)\n      };\n      s.backendConnector = new Connector(createClassOnDemand(this.modules.backend), s.resourceStore, s, this.options);\n      s.backendConnector.on('*', (event, ...args) => {\n        this.emit(event, ...args);\n      });\n      if (this.modules.languageDetector) {\n        s.languageDetector = createClassOnDemand(this.modules.languageDetector);\n        if (s.languageDetector.init) s.languageDetector.init(s, this.options.detection, this.options);\n      }\n      if (this.modules.i18nFormat) {\n        s.i18nFormat = createClassOnDemand(this.modules.i18nFormat);\n        if (s.i18nFormat.init) s.i18nFormat.init(this);\n      }\n      this.translator = new Translator(this.services, this.options);\n      this.translator.on('*', (event, ...args) => {\n        this.emit(event, ...args);\n      });\n      this.modules.external.forEach(m => {\n        if (m.init) m.init(this);\n      });\n    }\n    this.format = this.options.interpolation.format;\n    if (!callback) callback = noop;\n    if (this.options.fallbackLng && !this.services.languageDetector && !this.options.lng) {\n      const codes = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);\n      if (codes.length > 0 && codes[0] !== 'dev') this.options.lng = codes[0];\n    }\n    if (!this.services.languageDetector && !this.options.lng) {\n      this.logger.warn('init: no languageDetector is used and no lng is defined');\n    }\n    const storeApi = ['getResource', 'hasResourceBundle', 'getResourceBundle', 'getDataByLanguage'];\n    storeApi.forEach(fcName => {\n      this[fcName] = (...args) => this.store[fcName](...args);\n    });\n    const storeApiChained = ['addResource', 'addResources', 'addResourceBundle', 'removeResourceBundle'];\n    storeApiChained.forEach(fcName => {\n      this[fcName] = (...args) => {\n        this.store[fcName](...args);\n        return this;\n      };\n    });\n    const deferred = defer();\n    const load = () => {\n      const finish = (err, t) => {\n        this.isInitializing = false;\n        if (this.isInitialized && !this.initializedStoreOnce) this.logger.warn('init: i18next is already initialized. You should call init just once!');\n        this.isInitialized = true;\n        if (!this.options.isClone) this.logger.log('initialized', this.options);\n        this.emit('initialized', this.options);\n        deferred.resolve(t);\n        callback(err, t);\n      };\n      if (this.languages && !this.isInitialized) return finish(null, this.t.bind(this));\n      this.changeLanguage(this.options.lng, finish);\n    };\n    if (this.options.resources || !this.options.initAsync) {\n      load();\n    } else {\n      setTimeout(load, 0);\n    }\n    return deferred;\n  }\n  loadResources(language, callback = noop) {\n    let usedCallback = callback;\n    const usedLng = isString(language) ? language : this.language;\n    if (typeof language === 'function') usedCallback = language;\n    if (!this.options.resources || this.options.partialBundledLanguages) {\n      if (usedLng?.toLowerCase() === 'cimode' && (!this.options.preload || this.options.preload.length === 0)) return usedCallback();\n      const toLoad = [];\n      const append = lng => {\n        if (!lng) return;\n        if (lng === 'cimode') return;\n        const lngs = this.services.languageUtils.toResolveHierarchy(lng);\n        lngs.forEach(l => {\n          if (l === 'cimode') return;\n          if (toLoad.indexOf(l) < 0) toLoad.push(l);\n        });\n      };\n      if (!usedLng) {\n        const fallbacks = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);\n        fallbacks.forEach(l => append(l));\n      } else {\n        append(usedLng);\n      }\n      this.options.preload?.forEach?.(l => append(l));\n      this.services.backendConnector.load(toLoad, this.options.ns, e => {\n        if (!e && !this.resolvedLanguage && this.language) this.setResolvedLanguage(this.language);\n        usedCallback(e);\n      });\n    } else {\n      usedCallback(null);\n    }\n  }\n  reloadResources(lngs, ns, callback) {\n    const deferred = defer();\n    if (typeof lngs === 'function') {\n      callback = lngs;\n      lngs = undefined;\n    }\n    if (typeof ns === 'function') {\n      callback = ns;\n      ns = undefined;\n    }\n    if (!lngs) lngs = this.languages;\n    if (!ns) ns = this.options.ns;\n    if (!callback) callback = noop;\n    this.services.backendConnector.reload(lngs, ns, err => {\n      deferred.resolve();\n      callback(err);\n    });\n    return deferred;\n  }\n  use(module) {\n    if (!module) throw new Error('You are passing an undefined module! Please check the object you are passing to i18next.use()');\n    if (!module.type) throw new Error('You are passing a wrong module! Please check the object you are passing to i18next.use()');\n    if (module.type === 'backend') {\n      this.modules.backend = module;\n    }\n    if (module.type === 'logger' || module.log && module.warn && module.error) {\n      this.modules.logger = module;\n    }\n    if (module.type === 'languageDetector') {\n      this.modules.languageDetector = module;\n    }\n    if (module.type === 'i18nFormat') {\n      this.modules.i18nFormat = module;\n    }\n    if (module.type === 'postProcessor') {\n      postProcessor.addPostProcessor(module);\n    }\n    if (module.type === 'formatter') {\n      this.modules.formatter = module;\n    }\n    if (module.type === '3rdParty') {\n      this.modules.external.push(module);\n    }\n    return this;\n  }\n  setResolvedLanguage(l) {\n    if (!l || !this.languages) return;\n    if (['cimode', 'dev'].indexOf(l) > -1) return;\n    for (let li = 0; li < this.languages.length; li++) {\n      const lngInLngs = this.languages[li];\n      if (['cimode', 'dev'].indexOf(lngInLngs) > -1) continue;\n      if (this.store.hasLanguageSomeTranslations(lngInLngs)) {\n        this.resolvedLanguage = lngInLngs;\n        break;\n      }\n    }\n    if (!this.resolvedLanguage && this.languages.indexOf(l) < 0 && this.store.hasLanguageSomeTranslations(l)) {\n      this.resolvedLanguage = l;\n      this.languages.unshift(l);\n    }\n  }\n  changeLanguage(lng, callback) {\n    this.isLanguageChangingTo = lng;\n    const deferred = defer();\n    this.emit('languageChanging', lng);\n    const setLngProps = l => {\n      this.language = l;\n      this.languages = this.services.languageUtils.toResolveHierarchy(l);\n      this.resolvedLanguage = undefined;\n      this.setResolvedLanguage(l);\n    };\n    const done = (err, l) => {\n      if (l) {\n        if (this.isLanguageChangingTo === lng) {\n          setLngProps(l);\n          this.translator.changeLanguage(l);\n          this.isLanguageChangingTo = undefined;\n          this.emit('languageChanged', l);\n          this.logger.log('languageChanged', l);\n        }\n      } else {\n        this.isLanguageChangingTo = undefined;\n      }\n      deferred.resolve((...args) => this.t(...args));\n      if (callback) callback(err, (...args) => this.t(...args));\n    };\n    const setLng = lngs => {\n      if (!lng && !lngs && this.services.languageDetector) lngs = [];\n      const fl = isString(lngs) ? lngs : lngs && lngs[0];\n      const l = this.store.hasLanguageSomeTranslations(fl) ? fl : this.services.languageUtils.getBestMatchFromCodes(isString(lngs) ? [lngs] : lngs);\n      if (l) {\n        if (!this.language) {\n          setLngProps(l);\n        }\n        if (!this.translator.language) this.translator.changeLanguage(l);\n        this.services.languageDetector?.cacheUserLanguage?.(l);\n      }\n      this.loadResources(l, err => {\n        done(err, l);\n      });\n    };\n    if (!lng && this.services.languageDetector && !this.services.languageDetector.async) {\n      setLng(this.services.languageDetector.detect());\n    } else if (!lng && this.services.languageDetector && this.services.languageDetector.async) {\n      if (this.services.languageDetector.detect.length === 0) {\n        this.services.languageDetector.detect().then(setLng);\n      } else {\n        this.services.languageDetector.detect(setLng);\n      }\n    } else {\n      setLng(lng);\n    }\n    return deferred;\n  }\n  getFixedT(lng, ns, keyPrefix) {\n    const fixedT = (key, opts, ...rest) => {\n      let o;\n      if (typeof opts !== 'object') {\n        o = this.options.overloadTranslationOptionHandler([key, opts].concat(rest));\n      } else {\n        o = {\n          ...opts\n        };\n      }\n      o.lng = o.lng || fixedT.lng;\n      o.lngs = o.lngs || fixedT.lngs;\n      o.ns = o.ns || fixedT.ns;\n      if (o.keyPrefix !== '') o.keyPrefix = o.keyPrefix || keyPrefix || fixedT.keyPrefix;\n      const keySeparator = this.options.keySeparator || '.';\n      let resultKey;\n      if (o.keyPrefix && Array.isArray(key)) {\n        resultKey = key.map(k => `${o.keyPrefix}${keySeparator}${k}`);\n      } else {\n        resultKey = o.keyPrefix ? `${o.keyPrefix}${keySeparator}${key}` : key;\n      }\n      return this.t(resultKey, o);\n    };\n    if (isString(lng)) {\n      fixedT.lng = lng;\n    } else {\n      fixedT.lngs = lng;\n    }\n    fixedT.ns = ns;\n    fixedT.keyPrefix = keyPrefix;\n    return fixedT;\n  }\n  t(...args) {\n    return this.translator?.translate(...args);\n  }\n  exists(...args) {\n    return this.translator?.exists(...args);\n  }\n  setDefaultNamespace(ns) {\n    this.options.defaultNS = ns;\n  }\n  hasLoadedNamespace(ns, options = {}) {\n    if (!this.isInitialized) {\n      this.logger.warn('hasLoadedNamespace: i18next was not initialized', this.languages);\n      return false;\n    }\n    if (!this.languages || !this.languages.length) {\n      this.logger.warn('hasLoadedNamespace: i18n.languages were undefined or empty', this.languages);\n      return false;\n    }\n    const lng = options.lng || this.resolvedLanguage || this.languages[0];\n    const fallbackLng = this.options ? this.options.fallbackLng : false;\n    const lastLng = this.languages[this.languages.length - 1];\n    if (lng.toLowerCase() === 'cimode') return true;\n    const loadNotPending = (l, n) => {\n      const loadState = this.services.backendConnector.state[`${l}|${n}`];\n      return loadState === -1 || loadState === 0 || loadState === 2;\n    };\n    if (options.precheck) {\n      const preResult = options.precheck(this, loadNotPending);\n      if (preResult !== undefined) return preResult;\n    }\n    if (this.hasResourceBundle(lng, ns)) return true;\n    if (!this.services.backendConnector.backend || this.options.resources && !this.options.partialBundledLanguages) return true;\n    if (loadNotPending(lng, ns) && (!fallbackLng || loadNotPending(lastLng, ns))) return true;\n    return false;\n  }\n  loadNamespaces(ns, callback) {\n    const deferred = defer();\n    if (!this.options.ns) {\n      if (callback) callback();\n      return Promise.resolve();\n    }\n    if (isString(ns)) ns = [ns];\n    ns.forEach(n => {\n      if (this.options.ns.indexOf(n) < 0) this.options.ns.push(n);\n    });\n    this.loadResources(err => {\n      deferred.resolve();\n      if (callback) callback(err);\n    });\n    return deferred;\n  }\n  loadLanguages(lngs, callback) {\n    const deferred = defer();\n    if (isString(lngs)) lngs = [lngs];\n    const preloaded = this.options.preload || [];\n    const newLngs = lngs.filter(lng => preloaded.indexOf(lng) < 0 && this.services.languageUtils.isSupportedCode(lng));\n    if (!newLngs.length) {\n      if (callback) callback();\n      return Promise.resolve();\n    }\n    this.options.preload = preloaded.concat(newLngs);\n    this.loadResources(err => {\n      deferred.resolve();\n      if (callback) callback(err);\n    });\n    return deferred;\n  }\n  dir(lng) {\n    if (!lng) lng = this.resolvedLanguage || (this.languages?.length > 0 ? this.languages[0] : this.language);\n    if (!lng) return 'rtl';\n    try {\n      const l = new Intl.Locale(lng);\n      if (l && l.getTextInfo) {\n        const ti = l.getTextInfo();\n        if (ti && ti.direction) return ti.direction;\n      }\n    } catch (e) {}\n    const rtlLngs = ['ar', 'shu', 'sqr', 'ssh', 'xaa', 'yhd', 'yud', 'aao', 'abh', 'abv', 'acm', 'acq', 'acw', 'acx', 'acy', 'adf', 'ads', 'aeb', 'aec', 'afb', 'ajp', 'apc', 'apd', 'arb', 'arq', 'ars', 'ary', 'arz', 'auz', 'avl', 'ayh', 'ayl', 'ayn', 'ayp', 'bbz', 'pga', 'he', 'iw', 'ps', 'pbt', 'pbu', 'pst', 'prp', 'prd', 'ug', 'ur', 'ydd', 'yds', 'yih', 'ji', 'yi', 'hbo', 'men', 'xmn', 'fa', 'jpr', 'peo', 'pes', 'prs', 'dv', 'sam', 'ckb'];\n    const languageUtils = this.services?.languageUtils || new LanguageUtil(get());\n    if (lng.toLowerCase().indexOf('-latn') > 1) return 'ltr';\n    return rtlLngs.indexOf(languageUtils.getLanguagePartFromCode(lng)) > -1 || lng.toLowerCase().indexOf('-arab') > 1 ? 'rtl' : 'ltr';\n  }\n  static createInstance(options = {}, callback) {\n    return new I18n(options, callback);\n  }\n  cloneInstance(options = {}, callback = noop) {\n    const forkResourceStore = options.forkResourceStore;\n    if (forkResourceStore) delete options.forkResourceStore;\n    const mergedOptions = {\n      ...this.options,\n      ...options,\n      ...{\n        isClone: true\n      }\n    };\n    const clone = new I18n(mergedOptions);\n    if (options.debug !== undefined || options.prefix !== undefined) {\n      clone.logger = clone.logger.clone(options);\n    }\n    const membersToCopy = ['store', 'services', 'language'];\n    membersToCopy.forEach(m => {\n      clone[m] = this[m];\n    });\n    clone.services = {\n      ...this.services\n    };\n    clone.services.utils = {\n      hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone)\n    };\n    if (forkResourceStore) {\n      const clonedData = Object.keys(this.store.data).reduce((prev, l) => {\n        prev[l] = {\n          ...this.store.data[l]\n        };\n        prev[l] = Object.keys(prev[l]).reduce((acc, n) => {\n          acc[n] = {\n            ...prev[l][n]\n          };\n          return acc;\n        }, prev[l]);\n        return prev;\n      }, {});\n      clone.store = new ResourceStore(clonedData, mergedOptions);\n      clone.services.resourceStore = clone.store;\n    }\n    clone.translator = new Translator(clone.services, mergedOptions);\n    clone.translator.on('*', (event, ...args) => {\n      clone.emit(event, ...args);\n    });\n    clone.init(mergedOptions, callback);\n    clone.translator.options = mergedOptions;\n    clone.translator.backendConnector.services.utils = {\n      hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone)\n    };\n    return clone;\n  }\n  toJSON() {\n    return {\n      options: this.options,\n      store: this.store,\n      language: this.language,\n      languages: this.languages,\n      resolvedLanguage: this.resolvedLanguage\n    };\n  }\n}\nconst instance = I18n.createInstance();\ninstance.createInstance = I18n.createInstance;\n\nconst createInstance = instance.createInstance;\nconst dir = instance.dir;\nconst init = instance.init;\nconst loadResources = instance.loadResources;\nconst reloadResources = instance.reloadResources;\nconst use = instance.use;\nconst changeLanguage = instance.changeLanguage;\nconst getFixedT = instance.getFixedT;\nconst t = instance.t;\nconst exists = instance.exists;\nconst setDefaultNamespace = instance.setDefaultNamespace;\nconst hasLoadedNamespace = instance.hasLoadedNamespace;\nconst loadNamespaces = instance.loadNamespaces;\nconst loadLanguages = instance.loadLanguages;\n\nexport { changeLanguage, createInstance, instance as default, dir, exists, getFixedT, hasLoadedNamespace, init, loadLanguages, loadNamespaces, loadResources, reloadResources, setDefaultNamespace, t, use };\n"],"names":["isString","obj","defer","res","rej","promise","Promise","resolve","reject","makeString","object","lastOfPathSeparatorRegExp","cleanKey","key","indexOf","replace","canNotTraverseDeeper","getLastOfPath","path","Empty","stack","split","stackIndex","length","Object","prototype","hasOwnProperty","call","k","setPath","newValue","e","p","slice","last","getPath","deepExtend","target","source","overwrite","prop","String","regexEscape","str","_entityMap","escape","data","s","chars","looksLikeObjectPathRegExpCache","constructor","capacity","this","regExpMap","Map","regExpQueue","getRegExp","pattern","regExpFromCache","get","regExpNew","RegExp","delete","shift","set","push","deepFind","keySeparator","tokens","current","i","next","nextPath","j","getCleanedCode","code","consoleLogger","type","log","args","output","warn","error","_a","_b","console","apply","Logger","concreteLogger","options","init","prefix","logger","debug","forward","deprecate","lvl","debugOnly","create","moduleName","clone","baseLogger","EventEmitter","observers","on","events","listener","forEach","event","numListeners","off","emit","Array","from","entries","observer","numTimesAdded","ResourceStore","ns","defaultNS","super","ignoreJSONStructure","addNamespaces","removeNamespaces","index","splice","getResource","lng","isArray","result","join","addResource","value","silent","concat","addResources","resources","m","addResourceBundle","deep","skipCopy","pack","JSON","parse","stringify","removeResourceBundle","hasResourceBundle","getResourceBundle","getDataByLanguage","hasLanguageSomeTranslations","keys","find","v","toJSON","postProcessor","processors","addPostProcessor","module","name","handle","translator","processor","process","checkedLoadedFor","shouldHandleAsObject","Translator","services","t","changeLanguage","language","exists","o","interpolation","opt","resolved","extractFromKey","nsSeparator","namespaces","wouldCheckForNsInKey","seemsNaturalLanguage","userDefinedKeySeparator","userDefinedNsSeparator","possibleChars","filter","c","r","map","matched","test","ki","substring","looksLikeObjectPath","match","interpolator","nestingRegexp","parts","translate","lastKey","overloadTranslationOptionHandler","arguments","returnDetails","namespace","appendNamespaceToCIMode","toLowerCase","usedKey","exactUsedKey","usedLng","usedNS","usedParams","getUsedParamsDetails","resUsedKey","resExactUsedKey","joinArrays","handleAsObjectInI18nFormat","i18nFormat","handleAsObject","needsPluralHandling","count","hasDefaultValue","defaultValueSuffix","pluralResolver","getSuffix","defaultValueSuffixOrdinalFallback","ordinal","needsZeroSuffixLookup","defaultValue","pluralSeparator","resForObjHndl","resType","toString","extendTranslation","usedDefault","isValidLookup","resForMissing","missingKeyNoValueFallbackToKey","updateMissing","fk","lngs","fallbackLngs","languageUtils","getFallbackCodes","fallbackLng","saveMissingTo","toResolveHierarchy","send","l","specificDefaultValue","defaultForMissing","missingKeyHandler","backendConnector","saveMissing","saveMissingPlurals","suffixes","getSuffixes","suffix","appendNamespaceToMissingKey","parseMissingKeyHandler","returnObjects","returnedObjectHandler","resTypeIsArray","copy","newKeyToUse","deepKey","defaultVariables","skipInterpolation","skipOnVariables","nestBef","nb","interpolate","na","nest","context","reset","postProcess","postProcessorNames","applyPostProcessor","postProcessPassResolved","i18nResolved","found","extracted","fallbackNS","needsContextHandling","codes","utils","hasLoadedNamespace","finalKeys","addLookupKeys","pluralSuffix","zeroSuffix","ordinalPrefix","contextKey","contextSeparator","possibleKey","pop","returnNull","returnEmptyString","resourceStore","optionsKeys","useOptionsReplaceForData","option","LanguageUtil","supportedLngs","getScriptPartFromCode","formatLanguageCode","getLanguagePartFromCode","formattedCode","Intl","getCanonicalLocales","lowerCaseLng","cleanCode","isSupportedCode","load","nonExplicitSupportedLngs","getBestMatchFromCodes","cleanedLng","lngScOnly","lngOnly","supportedLng","fallbacks","default","fallbackCode","fallbackCodes","addCode","fc","suffixesOrder","zero","one","two","few","many","other","dummyRule","select","resolvedOptions","pluralCategories","PluralResolver","pluralRulesCache","addRule","rules","clearCache","getRule","cleanedCode","cacheKey","rule","PluralRules","err","lngPart","needsPlural","getPluralFormsOfKey","sort","pluralCategory1","pluralCategory2","pluralCategory","prepend","deepFindWithDefaults","defaultData","getPathWithDefaults","regexSafe","val","Interpolator","format","escapeValue","escape$1","useRawValueToEscape","prefixEscaped","suffixEscaped","formatSeparator","unescapeSuffix","unescapePrefix","nestingPrefix","nestingPrefixEscaped","nestingSuffix","nestingSuffixEscaped","nestingOptionsSeparator","maxReplaces","alwaysFormat","resetRegExp","getOrResetRegExp","existingRegExp","lastIndex","regexp","regexpUnescape","replaces","handleFormat","interpolationkey","trim","f","missingInterpolationHandler","regex","safeValue","todo","exec","matchedVar","temp","clonedOptions","handleHasOptions","inheritedOptions","sep","optionsString","matchedSingleQuotes","matchedDoubleQuotes","formatters","keyEndIndex","lastIndexOf","elem","Boolean","reduce","createCachedFormatter","fn","cache","optForCache","formatParams","frm","createNonCachedFormatter","Formatter","cf","cacheInBuiltFormats","formats","number","formatter","NumberFormat","currency","style","datetime","DateTimeFormat","relativetime","RelativeTimeFormat","range","list","ListFormat","add","addCached","findIndex","mem","formatName","formatOptions","formatStr","optStr","rest","trimmedKey","isNaN","parseInt","parseFormatStr","formatted","valOptions","locale","Connector","backend","store","waitingReads","maxParallelReads","readingCalls","maxRetries","retryTimeout","state","queue","queueLoad","languages","callback","toLoad","pending","toLoadLanguages","toLoadNamespaces","hasAllNamespaces","reload","pendingCount","loaded","errors","q","pushPath","removePending","done","loadedKeys","n","read","fcName","tried","wait","resolver","setTimeout","bind","then","catch","prepareLoading","loadOne","fallbackValue","isUpdate","clb","_c","_d","_e","opts","initAsync","preload","simplifyPluralSuffix","partialBundledLanguages","ret","tDescription","transformOptions","initImmediate","noop","I18n","inst","modules","external","getOwnPropertyNames","getPrototypeOf","isInitialized","isClone","isInitializing","defOpts","createClassOnDemand","ClassOrObject","lu","languageDetector","detection","deferred","finish","initializedStoreOnce","loadResources","usedCallback","append","resolvedLanguage","setResolvedLanguage","reloadResources","use","Error","li","lngInLngs","unshift","isLanguageChangingTo","setLngProps","setLng","fl","cacheUserLanguage","async","detect","getFixedT","keyPrefix","fixedT","resultKey","setDefaultNamespace","lastLng","loadNotPending","loadState","precheck","preResult","loadNamespaces","loadLanguages","preloaded","newLngs","dir","Locale","getTextInfo","ti","direction","createInstance","cloneInstance","forkResourceStore","mergedOptions","clonedData","prev","acc","instance"],"mappings":"AAAA,MAAMA,EAAWC,GAAsB,iBAARA,EACzBC,EAAQ,KACZ,IAAIC,EACAC,EACJ,MAAMC,EAAU,IAAIC,QAAQ,CAACC,EAASC,KACpCL,EAAMI,EACNH,EAAMI,IAIR,OAFAH,EAAQE,QAAUJ,EAClBE,EAAQG,OAASJ,EACVC,GAEHI,EAAaC,GACH,MAAVA,EAAuB,GACpB,GAAKA,EAORC,EAA4B,OAC5BC,EAAWC,GAAOA,GAAOA,EAAIC,QAAQ,QAAS,EAAKD,EAAIE,QAAQJ,EAA2B,KAAOE,EACjGG,EAAuBN,IAAWA,GAAUV,EAASU,GACrDO,EAAgB,CAACP,EAAQQ,EAAMC,KACnC,MAAMC,EAASpB,EAASkB,GAAeA,EAAKG,MAAM,KAAlBH,EAChC,IAAII,EAAa,EACjB,KAAOA,EAAaF,EAAMG,OAAS,GAAG,CACpC,GAAIP,EAAqBN,GAAS,MAAO,CAAA,EACzC,MAAMG,EAAMD,EAASQ,EAAME,KACtBZ,EAAOG,IAAQM,IAAOT,EAAOG,GAAO,IAAIM,GAE3CT,EADEc,OAAOC,UAAUC,eAAeC,KAAKjB,EAAQG,GACtCH,EAAOG,GAEP,CAAA,IAETS,CACJ,CACA,OAAIN,EAAqBN,GAAgB,CAAA,EAClC,CACLT,IAAKS,EACLkB,EAAGhB,EAASQ,EAAME,MAGhBO,EAAU,CAACnB,EAAQQ,EAAMY,KAC7B,MAAM7B,IACJA,EAAA2B,EACAA,GACEX,EAAcP,EAAQQ,EAAMM,QAChC,QAAY,IAARvB,GAAqC,IAAhBiB,EAAKK,OAE5B,YADAtB,EAAI2B,GAAKE,GAGX,IAAIC,EAAIb,EAAKA,EAAKK,OAAS,GACvBS,EAAId,EAAKe,MAAM,EAAGf,EAAKK,OAAS,GAChCW,EAAOjB,EAAcP,EAAQsB,EAAGR,QACpC,UAAoB,IAAbU,EAAKjC,KAAqB+B,EAAET,QACjCQ,EAAI,GAAGC,EAAEA,EAAET,OAAS,MAAMQ,IAC1BC,EAAIA,EAAEC,MAAM,EAAGD,EAAET,OAAS,GAC1BW,EAAOjB,EAAcP,EAAQsB,EAAGR,SAC5B,MAAAU,OAAA,EAAAA,EAAMjC,WAA6C,IAA/BiC,EAAKjC,IAAI,GAAGiC,EAAKN,KAAKG,OAC5CG,EAAKjC,SAAM,GAGfiC,EAAKjC,IAAI,GAAGiC,EAAKN,KAAKG,KAAOD,GAUzBK,EAAU,CAACzB,EAAQQ,KACvB,MAAMjB,IACJA,EAAA2B,EACAA,GACEX,EAAcP,EAAQQ,GAC1B,GAAKjB,GACAuB,OAAOC,UAAUC,eAAeC,KAAK1B,EAAK2B,GAC/C,OAAO3B,EAAI2B,IASPQ,EAAa,CAACC,EAAQC,EAAQC,KAClC,IAAA,MAAWC,KAAQF,EACJ,cAATE,GAAiC,gBAATA,IACtBA,KAAQH,EACNrC,EAASqC,EAAOG,KAAUH,EAAOG,aAAiBC,QAAUzC,EAASsC,EAAOE,KAAUF,EAAOE,aAAiBC,OAC5GF,IAAWF,EAAOG,GAAQF,EAAOE,IAErCJ,EAAWC,EAAOG,GAAOF,EAAOE,GAAOD,GAGzCF,EAAOG,GAAQF,EAAOE,IAI5B,OAAOH,GAEHK,EAAcC,GAAOA,EAAI5B,QAAQ,sCAAuC,QAC9E,IAAI6B,EAAa,CACf,IAAK,QACL,IAAK,OACL,IAAK,OACL,IAAK,SACL,IAAK,QACL,IAAK,UAEP,MAAMC,EAASC,GACT9C,EAAS8C,GACJA,EAAK/B,QAAQ,aAAcgC,GAAKH,EAAWG,IAE7CD,EAsBT,MAAME,EAAQ,CAAC,IAAK,IAAK,IAAK,IAAK,KAC7BC,EAAiC,IArBvC,MACE,WAAAC,CAAYC,GACVC,KAAKD,SAAWA,EAChBC,KAAKC,cAAgBC,IACrBF,KAAKG,YAAc,EACrB,CACA,SAAAC,CAAUC,GACR,MAAMC,EAAkBN,KAAKC,UAAUM,IAAIF,GAC3C,QAAwB,IAApBC,EACF,OAAOA,EAET,MAAME,EAAY,IAAIC,OAAOJ,GAM7B,OALIL,KAAKG,YAAYhC,SAAW6B,KAAKD,UACnCC,KAAKC,UAAUS,OAAOV,KAAKG,YAAYQ,SAEzCX,KAAKC,UAAUW,IAAIP,EAASG,GAC5BR,KAAKG,YAAYU,KAAKR,GACfG,CACT,GAGqD,IAgBjDM,EAAW,CAACjE,EAAKiB,EAAMiD,EAAe,OAC1C,IAAKlE,EAAK,OACV,GAAIA,EAAIiB,GAAO,CACb,IAAKM,OAAOC,UAAUC,eAAeC,KAAK1B,EAAKiB,GAAO,OACtD,OAAOjB,EAAIiB,EACb,CACA,MAAMkD,EAASlD,EAAKG,MAAM8C,GAC1B,IAAIE,EAAUpE,EACd,IAAA,IAASqE,EAAI,EAAGA,EAAIF,EAAO7C,QAAS,CAClC,IAAK8C,GAA8B,iBAAZA,EACrB,OAEF,IAAIE,EACAC,EAAW,GACf,IAAA,IAASC,EAAIH,EAAGG,EAAIL,EAAO7C,SAAUkD,EAMnC,GALIA,IAAMH,IACRE,GAAYL,GAEdK,GAAYJ,EAAOK,GACnBF,EAAOF,EAAQG,QACF,IAATD,EAAoB,CACtB,GAAI,CAAC,SAAU,SAAU,WAAWzD,eAAeyD,IAAQ,GAAME,EAAIL,EAAO7C,OAAS,EACnF,SAEF+C,GAAKG,EAAIH,EAAI,EACb,KACF,CAEFD,EAAUE,CACZ,CACA,OAAOF,GAEHK,EAAiBC,GAAQ,MAAAA,OAAA,EAAAA,EAAM5D,QAAQ,IAAK,KAE5C6D,EAAgB,CACpBC,KAAM,SACN,GAAAC,CAAIC,GACF3B,KAAK4B,OAAO,MAAOD,EACrB,EACA,IAAAE,CAAKF,GACH3B,KAAK4B,OAAO,OAAQD,EACtB,EACA,KAAAG,CAAMH,GACJ3B,KAAK4B,OAAO,QAASD,EACvB,EACA,MAAAC,CAAOH,EAAME,GA3Mf,IAAAI,EAAAC,EA4MI,OAAAA,EAAA,OAAAD,EAAA,MAAAE,aAAA,EAAAA,QAAUR,SAAV,EAAAM,EAAiBG,QAAjBF,EAAAzD,KAAAwD,EAAyBE,QAASN,EACpC,GAEF,MAAMQ,EACJ,WAAArC,CAAYsC,EAAgBC,EAAU,IACpCrC,KAAKsC,KAAKF,EAAgBC,EAC5B,CACA,IAAAC,CAAKF,EAAgBC,EAAU,IAC7BrC,KAAKuC,OAASF,EAAQE,QAAU,WAChCvC,KAAKwC,OAASJ,GAAkBZ,EAChCxB,KAAKqC,QAAUA,EACfrC,KAAKyC,MAAQJ,EAAQI,KACvB,CACA,GAAAf,IAAOC,GACL,OAAO3B,KAAK0C,QAAQf,EAAM,MAAO,IAAI,EACvC,CACA,IAAAE,IAAQF,GACN,OAAO3B,KAAK0C,QAAQf,EAAM,OAAQ,IAAI,EACxC,CACA,KAAAG,IAASH,GACP,OAAO3B,KAAK0C,QAAQf,EAAM,QAAS,GACrC,CACA,SAAAgB,IAAahB,GACX,OAAO3B,KAAK0C,QAAQf,EAAM,OAAQ,wBAAwB,EAC5D,CACA,OAAAe,CAAQf,EAAMiB,EAAKL,EAAQM,GACzB,OAAIA,IAAc7C,KAAKyC,MAAc,MACjC7F,EAAS+E,EAAK,QAAU,GAAK,GAAGY,IAASvC,KAAKuC,UAAUZ,EAAK,MAC1D3B,KAAKwC,OAAOI,GAAKjB,GAC1B,CACA,MAAAmB,CAAOC,GACL,OAAO,IAAIZ,EAAOnC,KAAKwC,OAAQ,CAE3BD,OAAQ,GAAGvC,KAAKuC,UAAUQ,QAEzB/C,KAAKqC,SAEZ,CACA,KAAAW,CAAMX,GAGJ,OAFAA,EAAUA,GAAWrC,KAAKqC,SAClBE,OAASF,EAAQE,QAAUvC,KAAKuC,OACjC,IAAIJ,EAAOnC,KAAKwC,OAAQH,EACjC,EAEF,IAAIY,EAAa,IAAId,EAErB,MAAMe,EACJ,WAAApD,GACEE,KAAKmD,UAAY,CAAA,CACnB,CACA,EAAAC,CAAGC,EAAQC,GAMT,OALAD,EAAOpF,MAAM,KAAKsF,QAAQC,IACnBxD,KAAKmD,UAAUK,UAAaL,UAAUK,GAAS,IAAItD,KACxD,MAAMuD,EAAezD,KAAKmD,UAAUK,GAAOjD,IAAI+C,IAAa,EAC5DtD,KAAKmD,UAAUK,GAAO5C,IAAI0C,EAAUG,EAAe,KAE9CzD,IACT,CACA,GAAA0D,CAAIF,EAAOF,GACJtD,KAAKmD,UAAUK,KACfF,EAILtD,KAAKmD,UAAUK,GAAO9C,OAAO4C,UAHpBtD,KAAKmD,UAAUK,GAI1B,CACA,IAAAG,CAAKH,KAAU7B,GACb,GAAI3B,KAAKmD,UAAUK,GAAQ,CACVI,MAAMC,KAAK7D,KAAKmD,UAAUK,GAAOM,WACzCP,QAAQ,EAAEQ,EAAUC,MACzB,IAAA,IAAS9C,EAAI,EAAGA,EAAI8C,EAAe9C,IACjC6C,KAAYpC,IAGlB,CACA,GAAI3B,KAAKmD,UAAU,KAAM,CACRS,MAAMC,KAAK7D,KAAKmD,UAAU,KAAKW,WACvCP,QAAQ,EAAEQ,EAAUC,MACzB,IAAA,IAAS9C,EAAI,EAAGA,EAAI8C,EAAe9C,IACjC6C,EAAS7B,MAAM6B,EAAU,CAACP,KAAU7B,KAG1C,CACF,EAGF,MAAMsC,UAAsBf,EAC1B,WAAApD,CAAYJ,EAAM2C,EAAU,CAC1B6B,GAAI,CAAC,eACLC,UAAW,gBAEXC,QACApE,KAAKN,KAAOA,GAAQ,CAAA,EACpBM,KAAKqC,QAAUA,OACmB,IAA9BrC,KAAKqC,QAAQtB,eACff,KAAKqC,QAAQtB,aAAe,UAEW,IAArCf,KAAKqC,QAAQgC,sBACfrE,KAAKqC,QAAQgC,qBAAsB,EAEvC,CACA,aAAAC,CAAcJ,GACRlE,KAAKqC,QAAQ6B,GAAGxG,QAAQwG,GAAM,GAChClE,KAAKqC,QAAQ6B,GAAGrD,KAAKqD,EAEzB,CACA,gBAAAK,CAAiBL,GACf,MAAMM,EAAQxE,KAAKqC,QAAQ6B,GAAGxG,QAAQwG,GAClCM,GAAQ,GACVxE,KAAKqC,QAAQ6B,GAAGO,OAAOD,EAAO,EAElC,CACA,WAAAE,CAAYC,EAAKT,EAAIzG,EAAK4E,EAAU,CAAA,GA5TtC,IAAAN,EAAAC,EA6TI,MAAMjB,OAAwC,IAAzBsB,EAAQtB,aAA6BsB,EAAQtB,aAAef,KAAKqC,QAAQtB,aACxFsD,OAAsD,IAAhChC,EAAQgC,oBAAoChC,EAAQgC,oBAAsBrE,KAAKqC,QAAQgC,oBACnH,IAAIvG,EACA6G,EAAIjH,QAAQ,MAAO,EACrBI,EAAO6G,EAAI1G,MAAM,MAEjBH,EAAO,CAAC6G,EAAKT,GACTzG,IACEmG,MAAMgB,QAAQnH,GAChBK,EAAK+C,QAAQpD,GACJb,EAASa,IAAQsD,EAC1BjD,EAAK+C,QAAQpD,EAAIQ,MAAM8C,IAEvBjD,EAAK+C,KAAKpD,KAIhB,MAAMoH,EAAS9F,EAAQiB,KAAKN,KAAM5B,GAMlC,OALK+G,IAAWX,IAAOzG,GAAOkH,EAAIjH,QAAQ,MAAO,IAC/CiH,EAAM7G,EAAK,GACXoG,EAAKpG,EAAK,GACVL,EAAMK,EAAKe,MAAM,GAAGiG,KAAK,OAEvBD,GAAWR,GAAwBzH,EAASa,GACzCqD,EAAS,OAAAkB,EAAA,cAAKtC,WAAL,EAAAqC,EAAY4C,SAAZ,EAAA3C,EAAmBkC,GAAKzG,EAAKsD,GADgB8D,CAE/D,CACA,WAAAE,CAAYJ,EAAKT,EAAIzG,EAAKuH,EAAO3C,EAAU,CACzC4C,QAAQ,IAER,MAAMlE,OAAwC,IAAzBsB,EAAQtB,aAA6BsB,EAAQtB,aAAef,KAAKqC,QAAQtB,aAC9F,IAAIjD,EAAO,CAAC6G,EAAKT,GACbzG,MAAYK,EAAKoH,OAAOnE,EAAetD,EAAIQ,MAAM8C,GAAgBtD,IACjEkH,EAAIjH,QAAQ,MAAO,IACrBI,EAAO6G,EAAI1G,MAAM,KACjB+G,EAAQd,EACRA,EAAKpG,EAAK,IAEZkC,KAAKsE,cAAcJ,GACnBzF,EAAQuB,KAAKN,KAAM5B,EAAMkH,GACpB3C,EAAQ4C,QAAQjF,KAAK2D,KAAK,QAASgB,EAAKT,EAAIzG,EAAKuH,EACxD,CACA,YAAAG,CAAaR,EAAKT,EAAIkB,EAAW/C,EAAU,CACzC4C,QAAQ,IAER,IAAA,MAAWI,KAAKD,GACVxI,EAASwI,EAAUC,KAAOzB,MAAMgB,QAAQQ,EAAUC,WAAUN,YAAYJ,EAAKT,EAAImB,EAAGD,EAAUC,GAAI,CACpGJ,QAAQ,IAGP5C,EAAQ4C,QAAQjF,KAAK2D,KAAK,QAASgB,EAAKT,EAAIkB,EACnD,CACA,iBAAAE,CAAkBX,EAAKT,EAAIkB,EAAWG,EAAMpG,EAAWkD,EAAU,CAC/D4C,QAAQ,EACRO,UAAU,IAEV,IAAI1H,EAAO,CAAC6G,EAAKT,GACbS,EAAIjH,QAAQ,MAAO,IACrBI,EAAO6G,EAAI1G,MAAM,KACjBsH,EAAOH,EACPA,EAAYlB,EACZA,EAAKpG,EAAK,IAEZkC,KAAKsE,cAAcJ,GACnB,IAAIuB,EAAO1G,EAAQiB,KAAKN,KAAM5B,IAAS,CAAA,EAClCuE,EAAQmD,WAAUJ,EAAYM,KAAKC,MAAMD,KAAKE,UAAUR,KACzDG,EACFvG,EAAWyG,EAAML,EAAWjG,GAE5BsG,EAAO,IACFA,KACAL,GAGP3G,EAAQuB,KAAKN,KAAM5B,EAAM2H,GACpBpD,EAAQ4C,QAAQjF,KAAK2D,KAAK,QAASgB,EAAKT,EAAIkB,EACnD,CACA,oBAAAS,CAAqBlB,EAAKT,GACpBlE,KAAK8F,kBAAkBnB,EAAKT,WACvBlE,KAAKN,KAAKiF,GAAKT,GAExBlE,KAAKuE,iBAAiBL,GACtBlE,KAAK2D,KAAK,UAAWgB,EAAKT,EAC5B,CACA,iBAAA4B,CAAkBnB,EAAKT,GACrB,YAAqC,IAA9BlE,KAAK0E,YAAYC,EAAKT,EAC/B,CACA,iBAAA6B,CAAkBpB,EAAKT,GAErB,OADKA,IAAIA,EAAKlE,KAAKqC,QAAQ8B,WACpBnE,KAAK0E,YAAYC,EAAKT,EAC/B,CACA,iBAAA8B,CAAkBrB,GAChB,OAAO3E,KAAKN,KAAKiF,EACnB,CACA,2BAAAsB,CAA4BtB,GAC1B,MAAMjF,EAAOM,KAAKgG,kBAAkBrB,GAEpC,SADUjF,GAAQtB,OAAO8H,KAAKxG,IAAS,IAC5ByG,QAAUzG,EAAK0G,IAAMhI,OAAO8H,KAAKxG,EAAK0G,IAAIjI,OAAS,EAChE,CACA,MAAAkI,GACE,OAAOrG,KAAKN,IACd,EAGF,IAAI4G,EAAgB,CAClBC,WAAY,CAAA,EACZ,gBAAAC,CAAiBC,GACfzG,KAAKuG,WAAWE,EAAOC,MAAQD,CACjC,EACA,MAAAE,CAAOJ,EAAYvB,EAAOvH,EAAK4E,EAASuE,GAItC,OAHAL,EAAWhD,QAAQsD,IA1avB,IAAA9E,EA2aMiD,GAAQ,OAAAjD,EAAA/B,KAAKuG,WAAWM,aAAYC,QAAQ9B,EAAOvH,EAAK4E,EAASuE,KAAe5B,IAE3EA,CACT,GAGF,MAAM+B,EAAmB,CAAA,EACnBC,EAAuBjK,IAAQH,EAASG,IAAuB,kBAARA,GAAoC,iBAARA,EACzF,MAAMkK,UAAmB/D,EACvB,WAAApD,CAAYoH,EAAU7E,EAAU,IAparB,IAAI1C,EAAGwH,EAqahB/C,QAraazE,EAsayGuH,EAtatGC,EAsagHnH,KAA3H,CAAC,gBAAiB,gBAAiB,iBAAkB,eAAgB,mBAAoB,aAAc,SAra5GuD,QAAQ8B,IACJ1F,EAAE0F,OAAMA,GAAK1F,EAAE0F,MAqanBrF,KAAKqC,QAAUA,OACmB,IAA9BrC,KAAKqC,QAAQtB,eACff,KAAKqC,QAAQtB,aAAe,KAE9Bf,KAAKwC,OAASS,EAAWH,OAAO,aAClC,CACA,cAAAsE,CAAezC,GACTA,SAAU0C,SAAW1C,EAC3B,CACA,MAAA2C,CAAO7J,EAAK8J,EAAI,CACdC,cAAe,CAAA,IAEf,MAAMC,EAAM,IACPF,GAEL,GAAW,MAAP9J,EAAa,OAAO,EACxB,MAAMiK,EAAW1H,KAAK7C,QAAQM,EAAKgK,GACnC,YAAyB,WAAlBC,WAAU3K,IACnB,CACA,cAAA4K,CAAelK,EAAKgK,GAClB,IAAIG,OAAkC,IAApBH,EAAIG,YAA4BH,EAAIG,YAAc5H,KAAKqC,QAAQuF,iBAC7D,IAAhBA,IAA2BA,EAAc,KAC7C,MAAM7G,OAAoC,IAArB0G,EAAI1G,aAA6B0G,EAAI1G,aAAef,KAAKqC,QAAQtB,aACtF,IAAI8G,EAAaJ,EAAIvD,IAAMlE,KAAKqC,QAAQ8B,WAAa,GACrD,MAAM2D,EAAuBF,GAAenK,EAAIC,QAAQkK,IAAe,EACjEG,IAAwB/H,KAAKqC,QAAQ2F,yBAA4BP,EAAI1G,cAAiBf,KAAKqC,QAAQ4F,wBAA2BR,EAAIG,aAjUhH,EAACnK,EAAKmK,EAAa7G,KAC7C6G,EAAcA,GAAe,GAC7B7G,EAAeA,GAAgB,GAC/B,MAAMmH,EAAgBtI,EAAMuI,OAAOC,GAAKR,EAAYlK,QAAQ0K,GAAK,GAAKrH,EAAarD,QAAQ0K,GAAK,GAChG,GAA6B,IAAzBF,EAAc/J,OAAc,OAAO,EACvC,MAAMkK,EAAIxI,EAA+BO,UAAU,IAAI8H,EAAcI,IAAIF,GAAW,MAANA,EAAY,MAAQA,GAAGtD,KAAK,SAC1G,IAAIyD,GAAWF,EAAEG,KAAK/K,GACtB,IAAK8K,EAAS,CACZ,MAAME,EAAKhL,EAAIC,QAAQqD,GACnB0H,EAAK,IAAMJ,EAAEG,KAAK/K,EAAIiL,UAAU,EAAGD,MACrCF,GAAU,EAEd,CACA,OAAOA,GAoTmJI,CAAoBlL,EAAKmK,EAAa7G,IAC9L,GAAI+G,IAAyBC,EAAsB,CACjD,MAAM1C,EAAI5H,EAAImL,MAAM5I,KAAK6I,aAAaC,eACtC,GAAIzD,GAAKA,EAAElH,OAAS,EAClB,MAAO,CACLV,MACAoK,WAAYjL,EAASiL,GAAc,CAACA,GAAcA,GAGtD,MAAMkB,EAAQtL,EAAIQ,MAAM2J,IACpBA,IAAgB7G,GAAgB6G,IAAgB7G,GAAgBf,KAAKqC,QAAQ6B,GAAGxG,QAAQqL,EAAM,KAAM,KAAIlB,EAAakB,EAAMpI,SAC/HlD,EAAMsL,EAAMjE,KAAK/D,EACnB,CACA,MAAO,CACLtD,MACAoK,WAAYjL,EAASiL,GAAc,CAACA,GAAcA,EAEtD,CACA,SAAAmB,CAAU9C,EAAMqB,EAAG0B,GACjB,IAAIxB,EAAmB,iBAANF,EAAiB,IAC7BA,GACDA,EAQJ,GAPmB,iBAARE,GAAoBzH,KAAKqC,QAAQ6G,mCAC1CzB,EAAMzH,KAAKqC,QAAQ6G,iCAAiCC,YAE/B,iBAAZ9G,UAAsBoF,EAAM,IAClCA,IAEAA,IAAKA,EAAM,CAAA,GACJ,MAARvB,EAAc,MAAO,GACpBtC,MAAMgB,QAAQsB,KAAOA,EAAO,CAAC7G,OAAO6G,KACzC,MAAMkD,OAAsC,IAAtB3B,EAAI2B,cAA8B3B,EAAI2B,cAAgBpJ,KAAKqC,QAAQ+G,cACnFrI,OAAoC,IAArB0G,EAAI1G,aAA6B0G,EAAI1G,aAAef,KAAKqC,QAAQtB,cAChFtD,IACJA,EAAAoK,WACAA,GACE7H,KAAK2H,eAAezB,EAAKA,EAAK/H,OAAS,GAAIsJ,GACzC4B,EAAYxB,EAAWA,EAAW1J,OAAS,GACjD,IAAIyJ,OAAkC,IAApBH,EAAIG,YAA4BH,EAAIG,YAAc5H,KAAKqC,QAAQuF,iBAC7D,IAAhBA,IAA2BA,EAAc,KAC7C,MAAMjD,EAAM8C,EAAI9C,KAAO3E,KAAKqH,SACtBiC,EAA0B7B,EAAI6B,yBAA2BtJ,KAAKqC,QAAQiH,wBAC5E,GAA2B,YAAvB,MAAA3E,OAAA,EAAAA,EAAK4E,eACP,OAAID,EACEF,EACK,CACLrM,IAAK,GAAGsM,IAAYzB,IAAcnK,IAClC+L,QAAS/L,EACTgM,aAAchM,EACdiM,QAAS/E,EACTgF,OAAQN,EACRO,WAAY5J,KAAK6J,qBAAqBpC,IAGnC,GAAG4B,IAAYzB,IAAcnK,IAElC2L,EACK,CACLrM,IAAKU,EACL+L,QAAS/L,EACTgM,aAAchM,EACdiM,QAAS/E,EACTgF,OAAQN,EACRO,WAAY5J,KAAK6J,qBAAqBpC,IAGnChK,EAET,MAAMiK,EAAW1H,KAAK7C,QAAQ+I,EAAMuB,GACpC,IAAI1K,EAAM,MAAA2K,OAAA,EAAAA,EAAU3K,IACpB,MAAM+M,SAAapC,WAAU8B,UAAW/L,EAClCsM,SAAkBrC,WAAU+B,eAAgBhM,EAE5CuM,OAAgC,IAAnBvC,EAAIuC,WAA2BvC,EAAIuC,WAAahK,KAAKqC,QAAQ2H,WAC1EC,GAA8BjK,KAAKkK,YAAclK,KAAKkK,WAAWC,eACjEC,OAAoC,IAAd3C,EAAI4C,QAAwBzN,EAAS6K,EAAI4C,OAC/DC,EAAkBrD,EAAWqD,gBAAgB7C,GAC7C8C,EAAqBH,EAAsBpK,KAAKwK,eAAeC,UAAU9F,EAAK8C,EAAI4C,MAAO5C,GAAO,GAChGiD,EAAoCjD,EAAIkD,SAAWP,EAAsBpK,KAAKwK,eAAeC,UAAU9F,EAAK8C,EAAI4C,MAAO,CAC3HM,SAAS,IACN,GACCC,EAAwBR,IAAwB3C,EAAIkD,SAAyB,IAAdlD,EAAI4C,MACnEQ,EAAeD,GAAyBnD,EAAI,eAAezH,KAAKqC,QAAQyI,wBAA0BrD,EAAI,eAAe8C,MAAyB9C,EAAI,eAAeiD,MAAwCjD,EAAIoD,aACnN,IAAIE,EAAgBhO,EAChBkN,IAA+BlN,GAAOuN,IACxCS,EAAgBF,GAElB,MAAMV,EAAiBnD,EAAqB+D,GACtCC,EAAU5M,OAAOC,UAAU4M,SAAS/I,MAAM6I,GAChD,KAAId,GAA8Bc,GAAiBZ,GAjBlC,CAAC,kBAAmB,oBAAqB,mBAiBoBzM,QAAQsN,GAAW,IAAOpO,EAASoN,IAAepG,MAAMgB,QAAQmG,GA8C9I,GAAWd,GAA8BrN,EAASoN,IAAepG,MAAMgB,QAAQ7H,GAC7EA,EAAMA,EAAI+H,KAAKkF,GACXjN,IAAKA,EAAMiD,KAAKkL,kBAAkBnO,EAAKmJ,EAAMuB,EAAKwB,QACjD,CACL,IAAIkC,GAAc,EACd3B,GAAU,GACTxJ,KAAKoL,cAAcrO,IAAQuN,IAC9Ba,GAAc,EACdpO,EAAM8N,GAEH7K,KAAKoL,cAAcrO,KACtByM,GAAU,EACVzM,EAAMU,GAER,MACM4N,GADiC5D,EAAI6D,gCAAkCtL,KAAKqC,QAAQiJ,iCAClC9B,OAAU,EAAYzM,EACxEwO,EAAgBjB,GAAmBO,IAAiB9N,GAAOiD,KAAKqC,QAAQkJ,cAC9E,GAAI/B,GAAW2B,GAAeI,EAAe,CAE3C,GADAvL,KAAKwC,OAAOd,IAAI6J,EAAgB,YAAc,aAAc5G,EAAK0E,EAAW5L,EAAK8N,EAAgBV,EAAe9N,GAC5GgE,EAAc,CAChB,MAAMyK,EAAKxL,KAAK7C,QAAQM,EAAK,IACxBgK,EACH1G,cAAc,IAEZyK,GAAMA,EAAGzO,KAAKiD,KAAKwC,OAAOX,KAAK,kLACrC,CACA,IAAI4J,EAAO,GACX,MAAMC,EAAe1L,KAAK2L,cAAcC,iBAAiB5L,KAAKqC,QAAQwJ,YAAapE,EAAI9C,KAAO3E,KAAKqH,UACnG,GAAmC,aAA/BrH,KAAKqC,QAAQyJ,eAAgCJ,GAAgBA,EAAa,GAC5E,IAAA,IAASxK,EAAI,EAAGA,EAAIwK,EAAavN,OAAQ+C,IACvCuK,EAAK5K,KAAK6K,EAAaxK,QAEe,QAA/BlB,KAAKqC,QAAQyJ,cACtBL,EAAOzL,KAAK2L,cAAcI,mBAAmBtE,EAAI9C,KAAO3E,KAAKqH,UAE7DoE,EAAK5K,KAAK4G,EAAI9C,KAAO3E,KAAKqH,UAE5B,MAAM2E,EAAO,CAACC,EAAGzN,EAAG0N,KA5nB5B,IAAAnK,EA6nBU,MAAMoK,EAAoB7B,GAAmB4B,IAAyBnP,EAAMmP,EAAuBb,EAC/FrL,KAAKqC,QAAQ+J,kBACfpM,KAAKqC,QAAQ+J,kBAAkBH,EAAG5C,EAAW7K,EAAG2N,EAAmBZ,EAAe9D,IACzE,OAAA1F,EAAA/B,KAAKqM,uBAAL,EAAAtK,EAAuBuK,cAChCtM,KAAKqM,iBAAiBC,YAAYL,EAAG5C,EAAW7K,EAAG2N,EAAmBZ,EAAe9D,GAEvFzH,KAAK2D,KAAK,aAAcsI,EAAG5C,EAAW7K,EAAGzB,IAEvCiD,KAAKqC,QAAQiK,cACXtM,KAAKqC,QAAQkK,oBAAsBnC,EACrCqB,EAAKlI,QAAQ8D,IACX,MAAMmF,EAAWxM,KAAKwK,eAAeiC,YAAYpF,EAAUI,GACvDmD,GAAyBnD,EAAI,eAAezH,KAAKqC,QAAQyI,wBAA0B0B,EAAS9O,QAAQ,GAAGsC,KAAKqC,QAAQyI,uBAAyB,GAC/I0B,EAAS3L,KAAK,GAAGb,KAAKqC,QAAQyI,uBAEhC0B,EAASjJ,QAAQmJ,IACfV,EAAK,CAAC3E,GAAW5J,EAAMiP,EAAQjF,EAAI,eAAeiF,MAAa7B,OAInEmB,EAAKP,EAAMhO,EAAKoN,GAGtB,CACA9N,EAAMiD,KAAKkL,kBAAkBnO,EAAKmJ,EAAMuB,EAAKC,EAAUuB,GACnDO,GAAWzM,IAAQU,GAAOuC,KAAKqC,QAAQsK,8BACzC5P,EAAM,GAAGsM,IAAYzB,IAAcnK,MAEhC+L,GAAW2B,IAAgBnL,KAAKqC,QAAQuK,yBAC3C7P,EAAMiD,KAAKqC,QAAQuK,uBAAuB5M,KAAKqC,QAAQsK,4BAA8B,GAAGtD,IAAYzB,IAAcnK,IAAQA,EAAK0N,EAAcpO,OAAM,EAAW0K,GAElK,KAnH+J,CAC7J,IAAKA,EAAIoF,gBAAkB7M,KAAKqC,QAAQwK,cAAe,CAChD7M,KAAKqC,QAAQyK,uBAChB9M,KAAKwC,OAAOX,KAAK,mEAEnB,MAAMwG,EAAIrI,KAAKqC,QAAQyK,sBAAwB9M,KAAKqC,QAAQyK,sBAAsBhD,EAAYiB,EAAe,IACxGtD,EACHvD,GAAI2D,IACD,QAAQpK,MAAQuC,KAAKqH,mDAC1B,OAAI+B,GACF1B,EAAS3K,IAAMsL,EACfX,EAASkC,WAAa5J,KAAK6J,qBAAqBpC,GACzCC,GAEFW,CACT,CACA,GAAItH,EAAc,CAChB,MAAMgM,EAAiBnJ,MAAMgB,QAAQmG,GAC/BiC,EAAOD,EAAiB,GAAK,CAAA,EAC7BE,EAAcF,EAAiBhD,EAAkBD,EACvD,IAAA,MAAWzE,KAAK0F,EACd,GAAI3M,OAAOC,UAAUC,eAAeC,KAAKwM,EAAe1F,GAAI,CAC1D,MAAM6H,EAAU,GAAGD,IAAclM,IAAesE,IAE9C2H,EAAK3H,GADHiF,IAAoBvN,EACZiD,KAAKgJ,UAAUkE,EAAS,IAC7BzF,EACHoD,aAAc7D,EAAqB6D,GAAgBA,EAAaxF,QAAK,EAEnE2E,YAAY,EACZ9F,GAAI2D,IAIE7H,KAAKgJ,UAAUkE,EAAS,IAC7BzF,EAEDuC,YAAY,EACZ9F,GAAI2D,IAINmF,EAAK3H,KAAO6H,IAASF,EAAK3H,GAAK0F,EAAc1F,GACnD,CAEFtI,EAAMiQ,CACR,CACF,CAsEA,OAAI5D,GACF1B,EAAS3K,IAAMA,EACf2K,EAASkC,WAAa5J,KAAK6J,qBAAqBpC,GACzCC,GAEF3K,CACT,CACA,iBAAAmO,CAAkBnO,EAAKU,EAAKgK,EAAKC,EAAUuB,GApqB7C,IAAAlH,EAAAC,EAqqBI,GAAI,OAAAD,EAAA/B,KAAKkK,iBAAL,EAAAnI,EAAiB4D,MACnB5I,EAAMiD,KAAKkK,WAAWvE,MAAM5I,EAAK,IAC5BiD,KAAKqC,QAAQmF,cAAc2F,oBAC3B1F,GACFA,EAAI9C,KAAO3E,KAAKqH,UAAYK,EAASgC,QAAShC,EAASiC,OAAQjC,EAAS8B,QAAS,CAClF9B,kBAEJ,IAAYD,EAAI2F,kBAAmB,CAC7B3F,EAAID,eAAexH,KAAK6I,aAAavG,KAAK,IACzCmF,EAEDD,cAAe,IACVxH,KAAKqC,QAAQmF,iBACbC,EAAID,iBAIb,MAAM6F,EAAkBzQ,EAASG,UAAiD,KAAxC,OAAAiF,mBAAKwF,oBAAL,EAAAxF,EAAoBqL,iBAAgC5F,EAAID,cAAc6F,gBAAkBrN,KAAKqC,QAAQmF,cAAc6F,iBAC7J,IAAIC,EACJ,GAAID,EAAiB,CACnB,MAAME,EAAKxQ,EAAI6L,MAAM5I,KAAK6I,aAAaC,eACvCwE,EAAUC,GAAMA,EAAGpP,MACrB,CACA,IAAIuB,EAAO+H,EAAI9J,UAAYf,EAAS6K,EAAI9J,SAAW8J,EAAI9J,QAAU8J,EAMjE,GALIzH,KAAKqC,QAAQmF,cAAc2F,mBAAkBzN,EAAO,IACnDM,KAAKqC,QAAQmF,cAAc2F,oBAC3BzN,IAEL3C,EAAMiD,KAAK6I,aAAa2E,YAAYzQ,EAAK2C,EAAM+H,EAAI9C,KAAO3E,KAAKqH,UAAYK,EAASgC,QAASjC,GACzF4F,EAAiB,CACnB,MAAMI,EAAK1Q,EAAI6L,MAAM5I,KAAK6I,aAAaC,eAEnCwE,GADYG,GAAMA,EAAGtP,UACFsJ,EAAIiG,MAAO,EACpC,EACKjG,EAAI9C,KAAO+C,GAAYA,EAAS3K,MAAK0K,EAAI9C,IAAM3E,KAAKqH,UAAYK,EAASgC,UAC7D,IAAbjC,EAAIiG,OAAgB3Q,EAAMiD,KAAK6I,aAAa6E,KAAK3Q,EAAK,IAAI4E,WACxDsH,WAAU,MAAOtH,EAAK,IAAO8F,EAAIkG,QAI9B3N,KAAKgJ,aAAarH,EAAMlE,IAH7BuC,KAAKwC,OAAOX,KAAK,6CAA6CF,EAAK,cAAclE,EAAI,MAC9E,MAGRgK,IACCA,EAAID,eAAexH,KAAK6I,aAAa+E,OAC3C,CACA,MAAMC,EAAcpG,EAAIoG,aAAe7N,KAAKqC,QAAQwL,YAC9CC,EAAqBlR,EAASiR,GAAe,CAACA,GAAeA,EAUnE,OATW,MAAP9Q,IAAe,MAAA+Q,OAAA,EAAAA,EAAoB3P,UAAqC,IAA3BsJ,EAAIsG,qBACnDhR,EAAMuJ,EAAcK,OAAOmH,EAAoB/Q,EAAKU,EAAKuC,KAAKqC,SAAWrC,KAAKqC,QAAQ2L,wBAA0B,CAC9GC,aAAc,IACTvG,EACHkC,WAAY5J,KAAK6J,qBAAqBpC,OAErCA,GACDA,EAAKzH,OAEJjD,CACT,CACA,OAAAI,CAAQ+I,EAAMuB,EAAM,IAClB,IAAIyG,EACA1E,EACAC,EACAC,EACAC,EAgEJ,OA/DI/M,EAASsJ,KAAOA,EAAO,CAACA,IAC5BA,EAAK3C,QAAQ/E,IACX,GAAIwB,KAAKoL,cAAc8C,GAAQ,OAC/B,MAAMC,EAAYnO,KAAK2H,eAAenJ,EAAGiJ,GACnChK,EAAM0Q,EAAU1Q,IACtB+L,EAAU/L,EACV,IAAIoK,EAAasG,EAAUtG,WACvB7H,KAAKqC,QAAQ+L,aAAYvG,EAAaA,EAAW3C,OAAOlF,KAAKqC,QAAQ+L,aACzE,MAAMhE,OAAoC,IAAd3C,EAAI4C,QAAwBzN,EAAS6K,EAAI4C,OAC/DO,EAAwBR,IAAwB3C,EAAIkD,SAAyB,IAAdlD,EAAI4C,MACnEgE,OAAuC,IAAhB5G,EAAIkG,UAA0B/Q,EAAS6K,EAAIkG,UAAmC,iBAAhBlG,EAAIkG,UAAyC,KAAhBlG,EAAIkG,QACtHW,EAAQ7G,EAAIgE,KAAOhE,EAAIgE,KAAOzL,KAAK2L,cAAcI,mBAAmBtE,EAAI9C,KAAO3E,KAAKqH,SAAUI,EAAIoE,aACxGhE,EAAWtE,QAAQW,IAhvBzB,IAAAnC,EAAAC,EAivBYhC,KAAKoL,cAAc8C,KACvBvE,EAASzF,EACJ6C,EAAiB,GAAGuH,EAAM,MAAMpK,QAAS,OAAAnC,EAAA/B,KAAKuO,gBAAOC,sBAAuB,OAAAxM,OAAKuM,YAAL,EAAAvM,EAAYwM,mBAAmB7E,MAC9G5C,EAAiB,GAAGuH,EAAM,MAAMpK,MAAQ,EACxClE,KAAKwC,OAAOX,KAAK,QAAQ2H,qBAA2B8E,EAAMxJ,KAAK,2CAA2C6E,wBAA8B,6NAE1I2E,EAAM/K,QAAQhC,IAvvBtB,IAAAQ,EAwvBU,GAAI/B,KAAKoL,cAAc8C,GAAQ,OAC/BxE,EAAUnI,EACV,MAAMkN,EAAY,CAAChR,GACnB,GAAI,OAAAsE,EAAA/B,KAAKkK,iBAAL,EAAAnI,EAAiB2M,cACnB1O,KAAKkK,WAAWwE,cAAcD,EAAWhR,EAAK8D,EAAM2C,EAAIuD,OACnD,CACL,IAAIkH,EACAvE,MAAoCpK,KAAKwK,eAAeC,UAAUlJ,EAAMkG,EAAI4C,MAAO5C,IACvF,MAAMmH,EAAa,GAAG5O,KAAKqC,QAAQyI,sBAC7B+D,EAAgB,GAAG7O,KAAKqC,QAAQyI,yBAAyB9K,KAAKqC,QAAQyI,kBAU5E,GATIV,IACE3C,EAAIkD,SAAmD,IAAxCgE,EAAajR,QAAQmR,IACtCJ,EAAU5N,KAAKpD,EAAMkR,EAAahR,QAAQkR,EAAe7O,KAAKqC,QAAQyI,kBAExE2D,EAAU5N,KAAKpD,EAAMkR,GACjB/D,GACF6D,EAAU5N,KAAKpD,EAAMmR,IAGrBP,EAAsB,CACxB,MAAMS,EAAa,GAAGrR,IAAMuC,KAAKqC,QAAQ0M,kBAAoB,MAAMtH,EAAIkG,UACvEc,EAAU5N,KAAKiO,GACX1E,IACE3C,EAAIkD,SAAmD,IAAxCgE,EAAajR,QAAQmR,IACtCJ,EAAU5N,KAAKiO,EAAaH,EAAahR,QAAQkR,EAAe7O,KAAKqC,QAAQyI,kBAE/E2D,EAAU5N,KAAKiO,EAAaH,GACxB/D,GACF6D,EAAU5N,KAAKiO,EAAaF,GAGlC,CACF,CACA,IAAII,EACJ,KAAOA,EAAcP,EAAUQ,OACxBjP,KAAKoL,cAAc8C,KACtBzE,EAAeuF,EACfd,EAAQlO,KAAK0E,YAAYnD,EAAM2C,EAAI8K,EAAavH,WAMnD,CACL1K,IAAKmR,EACL1E,UACAC,eACAC,UACAC,SAEJ,CACA,aAAAyB,CAAcrO,GACZ,aAAe,IAARA,IAAwBiD,KAAKqC,QAAQ6M,YAAsB,OAARnS,IAAoBiD,KAAKqC,QAAQ8M,mBAA6B,KAARpS,EAClH,CACA,WAAA2H,CAAYnD,EAAM2C,EAAIzG,EAAK4E,EAAU,CAAA,GA9yBvC,IAAAN,EA+yBI,OAAI,OAAAA,EAAA/B,KAAKkK,iBAAL,EAAAnI,EAAiB2C,aAAoB1E,KAAKkK,WAAWxF,YAAYnD,EAAM2C,EAAIzG,EAAK4E,GAC7ErC,KAAKoP,cAAc1K,YAAYnD,EAAM2C,EAAIzG,EAAK4E,EACvD,CACA,oBAAAwH,CAAqBxH,EAAU,IAC7B,MAAMgN,EAAc,CAAC,eAAgB,UAAW,UAAW,UAAW,MAAO,OAAQ,cAAe,KAAM,eAAgB,cAAe,gBAAiB,gBAAiB,aAAc,cAAe,iBAClMC,EAA2BjN,EAAQ1E,UAAYf,EAASyF,EAAQ1E,SACtE,IAAI+B,EAAO4P,EAA2BjN,EAAQ1E,QAAU0E,EAUxD,GATIiN,QAAqD,IAAlBjN,EAAQgI,QAC7C3K,EAAK2K,MAAQhI,EAAQgI,OAEnBrK,KAAKqC,QAAQmF,cAAc2F,mBAC7BzN,EAAO,IACFM,KAAKqC,QAAQmF,cAAc2F,oBAC3BzN,KAGF4P,EAA0B,CAC7B5P,EAAO,IACFA,GAEL,IAAA,MAAWjC,KAAO4R,SACT3P,EAAKjC,EAEhB,CACA,OAAOiC,CACT,CACA,sBAAO4K,CAAgBjI,GACrB,MAAME,EAAS,eACf,IAAA,MAAWgN,KAAUlN,EACnB,GAAIjE,OAAOC,UAAUC,eAAeC,KAAK8D,EAASkN,IAAWhN,IAAWgN,EAAO7G,UAAU,EAAGnG,UAAkB,IAAcF,EAAQkN,GAClI,OAAO,EAGX,OAAO,CACT,EAGF,MAAMC,EACJ,WAAA1P,CAAYuC,GACVrC,KAAKqC,QAAUA,EACfrC,KAAKyP,cAAgBzP,KAAKqC,QAAQoN,gBAAiB,EACnDzP,KAAKwC,OAASS,EAAWH,OAAO,gBAClC,CACA,qBAAA4M,CAAsBnO,GAEpB,KADAA,EAAOD,EAAeC,KACTA,EAAK7D,QAAQ,KAAO,EAAG,OAAO,KAC3C,MAAMkB,EAAI2C,EAAKtD,MAAM,KACrB,OAAiB,IAAbW,EAAET,OAAqB,MAC3BS,EAAEqQ,MACoC,MAAlCrQ,EAAEA,EAAET,OAAS,GAAGoL,cAA8B,KAC3CvJ,KAAK2P,mBAAmB/Q,EAAEkG,KAAK,MACxC,CACA,uBAAA8K,CAAwBrO,GAEtB,KADAA,EAAOD,EAAeC,KACTA,EAAK7D,QAAQ,KAAO,EAAG,OAAO6D,EAC3C,MAAM3C,EAAI2C,EAAKtD,MAAM,KACrB,OAAO+B,KAAK2P,mBAAmB/Q,EAAE,GACnC,CACA,kBAAA+Q,CAAmBpO,GACjB,GAAI3E,EAAS2E,IAASA,EAAK7D,QAAQ,MAAO,EAAI,CAC5C,IAAImS,EACJ,IACEA,EAAgBC,KAAKC,oBAAoBxO,GAAM,EACjD,OAAS5C,GAAI,CAIb,OAHIkR,GAAiB7P,KAAKqC,QAAQ2N,eAChCH,EAAgBA,EAActG,eAE5BsG,IACA7P,KAAKqC,QAAQ2N,aACRzO,EAAKgI,cAEPhI,EACT,CACA,OAAOvB,KAAKqC,QAAQ4N,WAAajQ,KAAKqC,QAAQ2N,aAAezO,EAAKgI,cAAgBhI,CACpF,CACA,eAAA2O,CAAgB3O,GAId,OAH0B,iBAAtBvB,KAAKqC,QAAQ8N,MAA2BnQ,KAAKqC,QAAQ+N,4BACvD7O,EAAOvB,KAAK4P,wBAAwBrO,KAE9BvB,KAAKyP,gBAAkBzP,KAAKyP,cAActR,QAAU6B,KAAKyP,cAAc/R,QAAQ6D,IAAQ,CACjG,CACA,qBAAA8O,CAAsB/B,GACpB,IAAKA,EAAO,OAAO,KACnB,IAAIJ,EAsBJ,OArBAI,EAAM/K,QAAQhC,IACZ,GAAI2M,EAAO,OACX,MAAMoC,EAAatQ,KAAK2P,mBAAmBpO,GACtCvB,KAAKqC,QAAQoN,gBAAiBzP,KAAKkQ,gBAAgBI,KAAapC,EAAQoC,MAE1EpC,GAASlO,KAAKqC,QAAQoN,eACzBnB,EAAM/K,QAAQhC,IACZ,GAAI2M,EAAO,OACX,MAAMqC,EAAYvQ,KAAK0P,sBAAsBnO,GAC7C,GAAIvB,KAAKkQ,gBAAgBK,UAAmBrC,EAAQqC,EACpD,MAAMC,EAAUxQ,KAAK4P,wBAAwBrO,GAC7C,GAAIvB,KAAKkQ,gBAAgBM,UAAiBtC,EAAQsC,EAClDtC,EAAQlO,KAAKqC,QAAQoN,cAActJ,KAAKsK,GAClCA,IAAiBD,EAAgBC,EACjCA,EAAa/S,QAAQ,KAAO,GAAK8S,EAAQ9S,QAAQ,KAAO,OAA5D,EACI+S,EAAa/S,QAAQ,KAAO,GAAK8S,EAAQ9S,QAAQ,KAAO,GAAK+S,EAAa/H,UAAU,EAAG+H,EAAa/S,QAAQ,QAAU8S,GACpF,IAAlCC,EAAa/S,QAAQ8S,IAAkBA,EAAQrS,OAAS,EAD8EsS,OAC1I,KAIDvC,IAAOA,EAAQlO,KAAK4L,iBAAiB5L,KAAKqC,QAAQwJ,aAAa,IAC7DqC,CACT,CACA,gBAAAtC,CAAiB8E,EAAWnP,GAC1B,IAAKmP,EAAW,MAAO,GAGvB,GAFyB,mBAAdA,IAA0BA,EAAYA,EAAUnP,IACvD3E,EAAS8T,KAAYA,EAAY,CAACA,IAClC9M,MAAMgB,QAAQ8L,GAAY,OAAOA,EACrC,IAAKnP,EAAM,OAAOmP,EAAUC,SAAW,GACvC,IAAIzC,EAAQwC,EAAUnP,GAKtB,OAJK2M,IAAOA,EAAQwC,EAAU1Q,KAAK0P,sBAAsBnO,KACpD2M,IAAOA,EAAQwC,EAAU1Q,KAAK2P,mBAAmBpO,KACjD2M,IAAOA,EAAQwC,EAAU1Q,KAAK4P,wBAAwBrO,KACtD2M,IAAOA,EAAQwC,EAAUC,SACvBzC,GAAS,EAClB,CACA,kBAAAnC,CAAmBxK,EAAMqP,GACvB,MAAMC,EAAgB7Q,KAAK4L,mBAAmC,IAAjBgF,EAAyB,GAAKA,IAAiB5Q,KAAKqC,QAAQwJ,aAAe,GAAItK,GACtH+M,EAAQ,GACRwC,EAAU1I,IACTA,IACDpI,KAAKkQ,gBAAgB9H,GACvBkG,EAAMzN,KAAKuH,GAEXpI,KAAKwC,OAAOX,KAAK,uDAAuDuG,OAa5E,OAVIxL,EAAS2E,KAAUA,EAAK7D,QAAQ,MAAO,GAAM6D,EAAK7D,QAAQ,MAAO,IACzC,iBAAtBsC,KAAKqC,QAAQ8N,QAAiCnQ,KAAK2P,mBAAmBpO,IAChD,iBAAtBvB,KAAKqC,QAAQ8N,MAAiD,gBAAtBnQ,KAAKqC,QAAQ8N,MAAwBW,EAAQ9Q,KAAK0P,sBAAsBnO,IAC1F,gBAAtBvB,KAAKqC,QAAQ8N,QAAgCnQ,KAAK4P,wBAAwBrO,KACrE3E,EAAS2E,IAClBuP,EAAQ9Q,KAAK2P,mBAAmBpO,IAElCsP,EAActN,QAAQwN,IAChBzC,EAAM5Q,QAAQqT,GAAM,GAAGD,EAAQ9Q,KAAK2P,mBAAmBoB,MAEtDzC,CACT,EAGF,MAAM0C,EAAgB,CACpBC,KAAM,EACNC,IAAK,EACLC,IAAK,EACLC,IAAK,EACLC,KAAM,EACNC,MAAO,GAEHC,EAAY,CAChBC,OAAQnH,GAAmB,IAAVA,EAAc,MAAQ,QACvCoH,gBAAiB,KAAA,CACfC,iBAAkB,CAAC,MAAO,YAG9B,MAAMC,EACJ,WAAA7R,CAAY6L,EAAetJ,EAAU,IACnCrC,KAAK2L,cAAgBA,EACrB3L,KAAKqC,QAAUA,EACfrC,KAAKwC,OAASS,EAAWH,OAAO,kBAChC9C,KAAK4R,iBAAmB,CAAA,CAC1B,CACA,OAAAC,CAAQlN,EAAK9H,GACXmD,KAAK8R,MAAMnN,GAAO9H,CACpB,CACA,UAAAkV,GACE/R,KAAK4R,iBAAmB,CAAA,CAC1B,CACA,OAAAI,CAAQzQ,EAAMc,EAAU,IACtB,MAAM4P,EAAc3Q,EAAwB,QAATC,EAAiB,KAAOA,GACrDE,EAAOY,EAAQsI,QAAU,UAAY,WACrCuH,EAAWxM,KAAKE,UAAU,CAC9BqM,cACAxQ,SAEF,GAAIyQ,KAAYlS,KAAK4R,iBACnB,OAAO5R,KAAK4R,iBAAiBM,GAE/B,IAAIC,EACJ,IACEA,EAAO,IAAIrC,KAAKsC,YAAYH,EAAa,CACvCxQ,QAEJ,OAAS4Q,GACP,IAAKvC,KAEH,OADA9P,KAAKwC,OAAOV,MAAM,iDACXyP,EAET,IAAKhQ,EAAKqH,MAAM,OAAQ,OAAO2I,EAC/B,MAAMe,EAAUtS,KAAK2L,cAAciE,wBAAwBrO,GAC3D4Q,EAAOnS,KAAKgS,QAAQM,EAASjQ,EAC/B,CAEA,OADArC,KAAK4R,iBAAiBM,GAAYC,EAC3BA,CACT,CACA,WAAAI,CAAYhR,EAAMc,EAAU,IAC1B,IAAI8P,EAAOnS,KAAKgS,QAAQzQ,EAAMc,GAE9B,OADK8P,IAAMA,EAAOnS,KAAKgS,QAAQ,MAAO3P,KAC/B,MAAA8P,OAAA,EAAAA,EAAMV,kBAAkBC,iBAAiBvT,QAAS,CAC3D,CACA,mBAAAqU,CAAoBjR,EAAM9D,EAAK4E,EAAU,CAAA,GACvC,OAAOrC,KAAKyM,YAAYlL,EAAMc,GAASiG,IAAIoE,GAAU,GAAGjP,IAAMiP,IAChE,CACA,WAAAD,CAAYlL,EAAMc,EAAU,IAC1B,IAAI8P,EAAOnS,KAAKgS,QAAQzQ,EAAMc,GAE9B,OADK8P,IAAMA,EAAOnS,KAAKgS,QAAQ,MAAO3P,IACjC8P,EACEA,EAAKV,kBAAkBC,iBAAiBe,KAAK,CAACC,EAAiBC,IAAoB3B,EAAc0B,GAAmB1B,EAAc2B,IAAkBrK,IAAIsK,GAAkB,GAAG5S,KAAKqC,QAAQwQ,UAAUxQ,EAAQsI,QAAU,UAAU3K,KAAKqC,QAAQwQ,UAAY,KAAKD,KADnP,EAEpB,CACA,SAAAnI,CAAUlJ,EAAM8I,EAAOhI,EAAU,CAAA,GAC/B,MAAM8P,EAAOnS,KAAKgS,QAAQzQ,EAAMc,GAChC,OAAI8P,EACK,GAAGnS,KAAKqC,QAAQwQ,UAAUxQ,EAAQsI,QAAU,UAAU3K,KAAKqC,QAAQwQ,UAAY,KAAKV,EAAKX,OAAOnH,MAEzGrK,KAAKwC,OAAOX,KAAK,6BAA6BN,KACvCvB,KAAKyK,UAAU,MAAOJ,EAAOhI,GACtC,EAGF,MAAMyQ,EAAuB,CAACpT,EAAMqT,EAAatV,EAAKsD,EAAe,IAAKsD,GAAsB,KAC9F,IAAIvG,EA57BsB,EAAC4B,EAAMqT,EAAatV,KAC9C,MAAMuH,EAAQjG,EAAQW,EAAMjC,GAC5B,YAAc,IAAVuH,EACKA,EAEFjG,EAAQgU,EAAatV,IAu7BjBuV,CAAoBtT,EAAMqT,EAAatV,GAKlD,OAJKK,GAAQuG,GAAuBzH,EAASa,KAC3CK,EAAOgD,EAASpB,EAAMjC,EAAKsD,QACd,IAATjD,IAAoBA,EAAOgD,EAASiS,EAAatV,EAAKsD,KAErDjD,GAEHmV,EAAYC,GAAOA,EAAIvV,QAAQ,MAAO,QAC5C,MAAMwV,EACJ,WAAArT,CAAYuC,EAAU,IAxhCxB,IAAAN,EAyhCI/B,KAAKwC,OAASS,EAAWH,OAAO,gBAChC9C,KAAKqC,QAAUA,EACfrC,KAAKoT,QAAS,OAAArR,EAAA,MAAAM,OAAA,EAAAA,EAASmF,oBAAT,EAAAzF,EAAwBqR,UAAWpO,GAASA,GAC1DhF,KAAKsC,KAAKD,EACZ,CACA,IAAAC,CAAKD,EAAU,IACRA,EAAQmF,gBAAenF,EAAQmF,cAAgB,CAClD6L,aAAa,IAEf,MACE5T,OAAQ6T,EAAAD,YACRA,EAAAE,oBACAA,EAAAhR,OACAA,EAAAiR,cACAA,EAAA9G,OACAA,EAAA+G,cACAA,EAAAC,gBACAA,EAAAC,eACAA,EAAAC,eACAA,EAAAC,cACAA,EAAAC,qBACAA,EAAAC,cACAA,EAAAC,qBACAA,EAAAC,wBACAA,EAAAC,YACAA,EAAAC,aACAA,GACE9R,EAAQmF,cACZxH,KAAKP,YAAsB,IAAb6T,EAAyBA,EAAW7T,EAClDO,KAAKqT,iBAA8B,IAAhBA,GAA4BA,EAC/CrT,KAAKuT,yBAA8C,IAAxBA,GAAoCA,EAC/DvT,KAAKuC,OAASA,EAASjD,EAAYiD,GAAUiR,GAAiB,KAC9DxT,KAAK0M,OAASA,EAASpN,EAAYoN,GAAU+G,GAAiB,KAC9DzT,KAAK0T,gBAAkBA,GAAmB,IAC1C1T,KAAK4T,eAAiBD,EAAiB,GAAKC,GAAkB,IAC9D5T,KAAK2T,eAAiB3T,KAAK4T,eAAiB,GAAKD,GAAkB,GACnE3T,KAAK6T,cAAgBA,EAAgBvU,EAAYuU,GAAiBC,GAAwBxU,EAAY,OACtGU,KAAK+T,cAAgBA,EAAgBzU,EAAYyU,GAAiBC,GAAwB1U,EAAY,KACtGU,KAAKiU,wBAA0BA,GAA2B,IAC1DjU,KAAKkU,YAAcA,GAAe,IAClClU,KAAKmU,kBAAgC,IAAjBA,GAA6BA,EACjDnU,KAAKoU,aACP,CACA,KAAAxG,GACM5N,KAAKqC,SAASrC,KAAKsC,KAAKtC,KAAKqC,QACnC,CACA,WAAA+R,GACE,MAAMC,EAAmB,CAACC,EAAgBjU,KACpC,MAAAiU,OAAA,EAAAA,EAAgBpV,UAAWmB,GAC7BiU,EAAeC,UAAY,EACpBD,GAEF,IAAI7T,OAAOJ,EAAS,KAE7BL,KAAKwU,OAASH,EAAiBrU,KAAKwU,OAAQ,GAAGxU,KAAKuC,cAAcvC,KAAK0M,UACvE1M,KAAKyU,eAAiBJ,EAAiBrU,KAAKyU,eAAgB,GAAGzU,KAAKuC,SAASvC,KAAK4T,sBAAsB5T,KAAK2T,iBAAiB3T,KAAK0M,UACnI1M,KAAK8I,cAAgBuL,EAAiBrU,KAAK8I,cAAe,GAAG9I,KAAK6T,iFAAiF7T,KAAK+T,gBAC1J,CACA,WAAAvG,CAAYjO,EAAKG,EAAMiF,EAAKtC,GAnlC9B,IAAAN,EAolCI,IAAI6G,EACA5D,EACA0P,EACJ,MAAM3B,EAAc/S,KAAKqC,SAAWrC,KAAKqC,QAAQmF,eAAiBxH,KAAKqC,QAAQmF,cAAc2F,kBAAoB,CAAA,EAC3GwH,EAAelX,IACnB,GAAIA,EAAIC,QAAQsC,KAAK0T,iBAAmB,EAAG,CACzC,MAAM5V,EAAOgV,EAAqBpT,EAAMqT,EAAatV,EAAKuC,KAAKqC,QAAQtB,aAAcf,KAAKqC,QAAQgC,qBAClG,OAAOrE,KAAKmU,aAAenU,KAAKoT,OAAOtV,OAAM,EAAW6G,EAAK,IACxDtC,KACA3C,EACHkV,iBAAkBnX,IACfK,CACP,CACA,MAAMc,EAAInB,EAAIQ,MAAM+B,KAAK0T,iBACnBlV,EAAII,EAAE+B,QAAQkU,OACdC,EAAIlW,EAAEkG,KAAK9E,KAAK0T,iBAAiBmB,OACvC,OAAO7U,KAAKoT,OAAON,EAAqBpT,EAAMqT,EAAavU,EAAGwB,KAAKqC,QAAQtB,aAAcf,KAAKqC,QAAQgC,qBAAsByQ,EAAGnQ,EAAK,IAC/HtC,KACA3C,EACHkV,iBAAkBpW,KAGtBwB,KAAKoU,cACL,MAAMW,GAA8B,MAAA1S,OAAA,EAAAA,EAAS0S,8BAA+B/U,KAAKqC,QAAQ0S,4BACnF1H,OAA8D,KAA5C,OAAAtL,EAAA,MAAAM,OAAA,EAAAA,EAASmF,oBAAT,EAAAzF,EAAwBsL,iBAAgChL,EAAQmF,cAAc6F,gBAAkBrN,KAAKqC,QAAQmF,cAAc6F,gBA2CnJ,MA1Cc,CAAC,CACb2H,MAAOhV,KAAKyU,eACZQ,UAAW/B,GAAOD,EAAUC,IAC3B,CACD8B,MAAOhV,KAAKwU,OACZS,UAAW/B,GAAOlT,KAAKqT,YAAcJ,EAAUjT,KAAKP,OAAOyT,IAAQD,EAAUC,KAEzE3P,QAAQ2R,IAEZ,IADAR,EAAW,EACJ9L,EAAQsM,EAAKF,MAAMG,KAAK5V,IAAM,CACnC,MAAM6V,EAAaxM,EAAM,GAAGiM,OAE5B,GADA7P,EAAQ2P,EAAaS,QACP,IAAVpQ,EACF,GAA2C,mBAAhC+P,EAA4C,CACrD,MAAMM,EAAON,EAA4BxV,EAAKqJ,EAAOvG,GACrD2C,EAAQpI,EAASyY,GAAQA,EAAO,EAClC,MAAA,GAAWhT,GAAWjE,OAAOC,UAAUC,eAAeC,KAAK8D,EAAS+S,GAClEpQ,EAAQ,WACCqI,EAAiB,CAC1BrI,EAAQ4D,EAAM,GACd,QACF,CACE5I,KAAKwC,OAAOX,KAAK,8BAA8BuT,uBAAgC7V,KAC/EyF,EAAQ,EACV,MACUpI,EAASoI,IAAWhF,KAAKuT,sBACnCvO,EAAQ3H,EAAW2H,IAErB,MAAMiQ,EAAYC,EAAKD,UAAUjQ,GASjC,GARAzF,EAAMA,EAAI5B,QAAQiL,EAAM,GAAIqM,GACxB5H,GACF6H,EAAKF,MAAMT,WAAavP,EAAM7G,OAC9B+W,EAAKF,MAAMT,WAAa3L,EAAM,GAAGzK,QAEjC+W,EAAKF,MAAMT,UAAY,EAEzBG,IACIA,GAAY1U,KAAKkU,YACnB,KAEJ,IAEK3U,CACT,CACA,IAAAmO,CAAKnO,EAAKwR,EAAI1O,EAAU,CAAA,GACtB,IAAIuG,EACA5D,EACAsQ,EACJ,MAAMC,EAAmB,CAAC9X,EAAK+X,KAC7B,MAAMC,EAAMzV,KAAKiU,wBACjB,GAAIxW,EAAIC,QAAQ+X,GAAO,EAAG,OAAOhY,EACjC,MAAM2K,EAAI3K,EAAIQ,MAAM,IAAIwC,OAAO,GAAGgV,WAClC,IAAIC,EAAgB,IAAItN,EAAE,KAC1B3K,EAAM2K,EAAE,GACRsN,EAAgB1V,KAAKwN,YAAYkI,EAAeJ,GAChD,MAAMK,EAAsBD,EAAc9M,MAAM,MAC1CgN,EAAsBF,EAAc9M,MAAM,SAC3C,MAAA+M,OAAA,EAAAA,EAAqBxX,SAAU,GAAK,GAAM,IAAMyX,GAAuBA,EAAoBzX,OAAS,GAAM,KAC7GuX,EAAgBA,EAAc/X,QAAQ,KAAM,MAE9C,IACE2X,EAAgB5P,KAAKC,MAAM+P,GACvBF,IAAkBF,EAAgB,IACjCE,KACAF,GAEP,OAAS3W,GAEP,OADAqB,KAAKwC,OAAOX,KAAK,oDAAoDpE,IAAOkB,GACrE,GAAGlB,IAAMgY,IAAMC,GACxB,CAEA,OADIJ,EAAczK,cAAgByK,EAAczK,aAAanN,QAAQsC,KAAKuC,SAAU,UAAW+S,EAAczK,aACtGpN,GAET,KAAOmL,EAAQ5I,KAAK8I,cAAcqM,KAAK5V,IAAM,CAC3C,IAAIsW,EAAa,GACjBP,EAAgB,IACXjT,GAELiT,EAAgBA,EAAc3X,UAAYf,EAAS0Y,EAAc3X,SAAW2X,EAAc3X,QAAU2X,EACpGA,EAAcvH,oBAAqB,SAC5BuH,EAAczK,aACrB,MAAMiL,EAAc,OAAOtN,KAAKI,EAAM,IAAMA,EAAM,GAAGmN,YAAY,KAAO,EAAInN,EAAM,GAAGlL,QAAQsC,KAAK0T,iBAMlG,IALoB,IAAhBoC,IACFD,EAAajN,EAAM,GAAG/J,MAAMiX,GAAa7X,MAAM+B,KAAK0T,iBAAiBpL,IAAI0N,GAAQA,EAAKnB,QAAQ1M,OAAO8N,SACrGrN,EAAM,GAAKA,EAAM,GAAG/J,MAAM,EAAGiX,IAE/B9Q,EAAQ+L,EAAGwE,EAAiBhX,KAAKyB,KAAM4I,EAAM,GAAGiM,OAAQS,GAAgBA,GACpEtQ,GAAS4D,EAAM,KAAOrJ,IAAQ3C,EAASoI,GAAQ,OAAOA,EACrDpI,EAASoI,KAAQA,EAAQ3H,EAAW2H,IACpCA,IACHhF,KAAKwC,OAAOX,KAAK,qBAAqB+G,EAAM,kBAAkBrJ,KAC9DyF,EAAQ,IAEN6Q,EAAW1X,SACb6G,EAAQ6Q,EAAWK,OAAO,CAAC9P,EAAG0O,IAAM9U,KAAKoT,OAAOhN,EAAG0O,EAAGzS,EAAQsC,IAAK,IAC9DtC,EACHuS,iBAAkBhM,EAAM,GAAGiM,SACzB7P,EAAM6P,SAEZtV,EAAMA,EAAI5B,QAAQiL,EAAM,GAAI5D,GAC5BhF,KAAKwU,OAAOD,UAAY,CAC1B,CACA,OAAOhV,CACT,EAGF,MA+BM4W,EAAwBC,IAC5B,MAAMC,EAAQ,CAAA,EACd,MAAO,CAACjQ,EAAG6F,EAAG1E,KACZ,IAAI+O,EAAc/O,EACdA,GAAKA,EAAEqN,kBAAoBrN,EAAEgP,cAAgBhP,EAAEgP,aAAahP,EAAEqN,mBAAqBrN,EAAEA,EAAEqN,oBACzF0B,EAAc,IACTA,EACH,CAAC/O,EAAEqN,uBAAmB,IAG1B,MAAMnX,EAAMwO,EAAIvG,KAAKE,UAAU0Q,GAC/B,IAAIE,EAAMH,EAAM5Y,GAKhB,OAJK+Y,IACHA,EAAMJ,EAAG9U,EAAe2K,GAAI1E,GAC5B8O,EAAM5Y,GAAO+Y,GAERA,EAAIpQ,KAGTqQ,EAA2BL,GAAM,CAAChQ,EAAG6F,EAAG1E,IAAM6O,EAAG9U,EAAe2K,GAAI1E,EAAtB6O,CAAyBhQ,GAC7E,MAAMsQ,EACJ,WAAA5W,CAAYuC,EAAU,IACpBrC,KAAKwC,OAASS,EAAWH,OAAO,aAChC9C,KAAKqC,QAAUA,EACfrC,KAAKsC,KAAKD,EACZ,CACA,IAAAC,CAAK4E,EAAU7E,EAAU,CACvBmF,cAAe,CAAA,IAEfxH,KAAK0T,gBAAkBrR,EAAQmF,cAAckM,iBAAmB,IAChE,MAAMiD,EAAKtU,EAAQuU,oBAAsBT,EAAwBM,EACjEzW,KAAK6W,QAAU,CACbC,OAAQH,EAAG,CAAChS,EAAK8C,KACf,MAAMsP,EAAY,IAAIjH,KAAKkH,aAAarS,EAAK,IACxC8C,IAEL,OAAOyL,GAAO6D,EAAU3D,OAAOF,KAEjC+D,SAAUN,EAAG,CAAChS,EAAK8C,KACjB,MAAMsP,EAAY,IAAIjH,KAAKkH,aAAarS,EAAK,IACxC8C,EACHyP,MAAO,aAET,OAAOhE,GAAO6D,EAAU3D,OAAOF,KAEjCiE,SAAUR,EAAG,CAAChS,EAAK8C,KACjB,MAAMsP,EAAY,IAAIjH,KAAKsH,eAAezS,EAAK,IAC1C8C,IAEL,OAAOyL,GAAO6D,EAAU3D,OAAOF,KAEjCmE,aAAcV,EAAG,CAAChS,EAAK8C,KACrB,MAAMsP,EAAY,IAAIjH,KAAKwH,mBAAmB3S,EAAK,IAC9C8C,IAEL,UAAcsP,EAAU3D,OAAOF,EAAKzL,EAAI8P,OAAS,SAEnDC,KAAMb,EAAG,CAAChS,EAAK8C,KACb,MAAMsP,EAAY,IAAIjH,KAAK2H,WAAW9S,EAAK,IACtC8C,IAEL,OAAOyL,GAAO6D,EAAU3D,OAAOF,KAGrC,CACA,GAAAwE,CAAIhR,EAAMqK,GACR/Q,KAAK6W,QAAQnQ,EAAK6C,cAAcsL,QAAU9D,CAC5C,CACA,SAAA4G,CAAUjR,EAAMqK,GACd/Q,KAAK6W,QAAQnQ,EAAK6C,cAAcsL,QAAUsB,EAAsBpF,EAClE,CACA,MAAAqC,CAAOpO,EAAOoO,EAAQzO,EAAKtC,EAAU,CAAA,GACnC,MAAMwU,EAAUzD,EAAOnV,MAAM+B,KAAK0T,iBAClC,GAAImD,EAAQ1Y,OAAS,GAAK0Y,EAAQ,GAAGnZ,QAAQ,KAAO,GAAKmZ,EAAQ,GAAGnZ,QAAQ,KAAO,GAAKmZ,EAAQ1Q,KAAK2O,GAAKA,EAAEpX,QAAQ,MAAO,GAAK,CAC9H,MAAM6W,EAAYsC,EAAQe,UAAU9C,GAAKA,EAAEpX,QAAQ,MAAO,GAC1DmZ,EAAQ,GAAK,CAACA,EAAQ,MAAOA,EAAQpS,OAAO,EAAG8P,IAAYzP,KAAK9E,KAAK0T,gBACvE,CAyBA,OAxBemD,EAAQX,OAAO,CAAC2B,EAAK/C,KAn0CxC,IAAA/S,EAo0CM,MAAM+V,WACJA,EAAAC,cACAA,GA/Ge,CAAAC,IACrB,IAAIF,EAAaE,EAAUzO,cAAcsL,OACzC,MAAMkD,EAAgB,CAAA,EACtB,GAAIC,EAAUta,QAAQ,MAAO,EAAI,CAC/B,MAAMkB,EAAIoZ,EAAU/Z,MAAM,KAC1B6Z,EAAalZ,EAAE,GAAG2K,cAAcsL,OAChC,MAAMoD,EAASrZ,EAAE,GAAG8J,UAAU,EAAG9J,EAAE,GAAGT,OAAS,GAC5B,aAAf2Z,GAA6BG,EAAOva,QAAQ,KAAO,EAChDqa,EAAcd,WAAUc,EAAcd,SAAWgB,EAAOpD,QACrC,iBAAfiD,GAAiCG,EAAOva,QAAQ,KAAO,EAC3Dqa,EAAcR,QAAOQ,EAAcR,MAAQU,EAAOpD,QAE1CoD,EAAOha,MAAM,KACrBsF,QAAQkE,IACX,GAAIA,EAAK,CACP,MAAOhK,KAAQya,GAAQzQ,EAAIxJ,MAAM,KAC3BiV,EAAMgF,EAAKpT,KAAK,KAAK+P,OAAOlX,QAAQ,WAAY,IAChDwa,EAAa1a,EAAIoX,OAClBkD,EAAcI,KAAaJ,EAAcI,GAAcjF,GAChD,UAARA,IAAiB6E,EAAcI,IAAc,GACrC,SAARjF,IAAgB6E,EAAcI,IAAc,GAC3CC,MAAMlF,OAAoBiF,GAAcE,SAASnF,EAAK,IAC7D,GAGN,CACA,MAAO,CACL4E,aACAC,kBAoFMO,CAAexD,GACnB,GAAI9U,KAAK6W,QAAQiB,GAAa,CAC5B,IAAIS,EAAYV,EAChB,IACE,MAAMW,GAAa,OAAAzW,EAAA,MAAAM,OAAA,EAAAA,EAASkU,mBAAT,EAAAxU,EAAwBM,EAAQuS,oBAAqB,CAAA,EAClE3I,EAAIuM,EAAWC,QAAUD,EAAW7T,KAAOtC,EAAQoW,QAAUpW,EAAQsC,KAAOA,EAClF4T,EAAYvY,KAAK6W,QAAQiB,GAAYD,EAAK5L,EAAG,IACxC8L,KACA1V,KACAmW,GAEP,OAAS1W,GACP9B,KAAKwC,OAAOX,KAAKC,EACnB,CACA,OAAOyW,CACT,CAGA,OAFEvY,KAAKwC,OAAOX,KAAK,oCAAoCiW,KAEhDD,GACN7S,EAEL,EASF,MAAM0T,UAAkBxV,EACtB,WAAApD,CAAY6Y,EAASC,EAAO1R,EAAU7E,EAAU,CAAA,GAt2ClD,IAAAN,EAAAC,EAu2CIoC,QACApE,KAAK2Y,QAAUA,EACf3Y,KAAK4Y,MAAQA,EACb5Y,KAAKkH,SAAWA,EAChBlH,KAAK2L,cAAgBzE,EAASyE,cAC9B3L,KAAKqC,QAAUA,EACfrC,KAAKwC,OAASS,EAAWH,OAAO,oBAChC9C,KAAK6Y,aAAe,GACpB7Y,KAAK8Y,iBAAmBzW,EAAQyW,kBAAoB,GACpD9Y,KAAK+Y,aAAe,EACpB/Y,KAAKgZ,WAAa3W,EAAQ2W,YAAc,EAAI3W,EAAQ2W,WAAa,EACjEhZ,KAAKiZ,aAAe5W,EAAQ4W,cAAgB,EAAI5W,EAAQ4W,aAAe,IACvEjZ,KAAKkZ,MAAQ,CAAA,EACblZ,KAAKmZ,MAAQ,GACb,OAAAnX,EAAA,OAAAD,EAAA/B,KAAK2Y,cAAL,EAAA5W,EAAcO,OAAdN,EAAAzD,KAAAwD,EAAqBmF,EAAU7E,EAAQsW,QAAStW,EAClD,CACA,SAAA+W,CAAUC,EAAWxR,EAAYxF,EAASiX,GACxC,MAAMC,EAAS,CAAA,EACTC,EAAU,CAAA,EACVC,EAAkB,CAAA,EAClBC,EAAmB,CAAA,EA4BzB,OA3BAL,EAAU9V,QAAQoB,IAChB,IAAIgV,GAAmB,EACvB9R,EAAWtE,QAAQW,IACjB,MAAMwC,EAAO,GAAG/B,KAAOT,KAClB7B,EAAQuX,QAAU5Z,KAAK4Y,MAAM9S,kBAAkBnB,EAAKT,GACvDlE,KAAKkZ,MAAMxS,GAAQ,EACV1G,KAAKkZ,MAAMxS,GAAQ,IAAmC,IAArB1G,KAAKkZ,MAAMxS,QAC/B,IAAlB8S,EAAQ9S,KAAqB8S,EAAQ9S,IAAQ,IAEjD1G,KAAKkZ,MAAMxS,GAAQ,EACnBiT,GAAmB,OACG,IAAlBH,EAAQ9S,KAAqB8S,EAAQ9S,IAAQ,QAC5B,IAAjB6S,EAAO7S,KAAqB6S,EAAO7S,IAAQ,QAClB,IAAzBgT,EAAiBxV,KAAmBwV,EAAiBxV,IAAM,OAG9DyV,IAAkBF,EAAgB9U,IAAO,MAE5CvG,OAAO8H,KAAKqT,GAAQpb,QAAUC,OAAO8H,KAAKsT,GAASrb,SACrD6B,KAAKmZ,MAAMtY,KAAK,CACd2Y,UACAK,aAAczb,OAAO8H,KAAKsT,GAASrb,OACnC2b,OAAQ,CAAA,EACRC,OAAQ,GACRT,aAGG,CACLC,OAAQnb,OAAO8H,KAAKqT,GACpBC,QAASpb,OAAO8H,KAAKsT,GACrBC,gBAAiBrb,OAAO8H,KAAKuT,GAC7BC,iBAAkBtb,OAAO8H,KAAKwT,GAElC,CACA,MAAAI,CAAOpT,EAAM2L,EAAK3S,GAChB,MAAMC,EAAI+G,EAAKzI,MAAM,KACf0G,EAAMhF,EAAE,GACRuE,EAAKvE,EAAE,GACT0S,GAAKrS,KAAK2D,KAAK,gBAAiBgB,EAAKT,EAAImO,IACxCA,GAAO3S,GACVM,KAAK4Y,MAAMtT,kBAAkBX,EAAKT,EAAIxE,OAAM,OAAW,EAAW,CAChE8F,UAAU,IAGdxF,KAAKkZ,MAAMxS,GAAQ2L,GAAM,EAAK,EAC1BA,GAAO3S,IAAMM,KAAKkZ,MAAMxS,GAAQ,GACpC,MAAMoT,EAAS,CAAA,EACf9Z,KAAKmZ,MAAM5V,QAAQyW,IAz2CN,EAAC1c,EAAQQ,EAAMY,KAC9B,MAAM7B,IACJA,EAAA2B,EACAA,GACEX,EAAcP,EAAQQ,EAAMM,QAChCvB,EAAI2B,GAAK3B,EAAI2B,IAAM,GACnB3B,EAAI2B,GAAGqC,KAAKnC,IAo2CRub,CAASD,EAAEF,OAAQ,CAACnV,GAAMT,GA7EV,EAAC8V,EAAGtT,UACA,IAApBsT,EAAER,QAAQ9S,YACLsT,EAAER,QAAQ9S,GACjBsT,EAAEH,iBA2EAK,CAAcF,EAAGtT,GACb2L,GAAK2H,EAAED,OAAOlZ,KAAKwR,GACA,IAAnB2H,EAAEH,cAAuBG,EAAEG,OAC7B/b,OAAO8H,KAAK8T,EAAEF,QAAQvW,QAAQ0I,IACvB6N,EAAO7N,KAAI6N,EAAO7N,GAAK,CAAA,GAC5B,MAAMmO,EAAaJ,EAAEF,OAAO7N,GACxBmO,EAAWjc,QACbic,EAAW7W,QAAQ8W,SACI,IAAjBP,EAAO7N,GAAGoO,KAAkBP,EAAO7N,GAAGoO,IAAK,OAIrDL,EAAEG,MAAO,EACLH,EAAED,OAAO5b,OACX6b,EAAEV,SAASU,EAAED,QAEbC,EAAEV,cAIRtZ,KAAK2D,KAAK,SAAUmW,GACpB9Z,KAAKmZ,MAAQnZ,KAAKmZ,MAAMhR,OAAO6R,IAAMA,EAAEG,KACzC,CACA,IAAAG,CAAK3V,EAAKT,EAAIqW,EAAQC,EAAQ,EAAGC,EAAOza,KAAKiZ,aAAcK,GACzD,IAAK3U,EAAIxG,cAAemb,EAAS,KAAM,CAAA,GACvC,GAAItZ,KAAK+Y,cAAgB/Y,KAAK8Y,iBAS5B,YARA9Y,KAAK6Y,aAAahY,KAAK,CACrB8D,MACAT,KACAqW,SACAC,QACAC,OACAnB,aAIJtZ,KAAK+Y,eACL,MAAM2B,EAAW,CAACrI,EAAK3S,KAErB,GADAM,KAAK+Y,eACD/Y,KAAK6Y,aAAa1a,OAAS,EAAG,CAChC,MAAMgD,EAAOnB,KAAK6Y,aAAalY,QAC/BX,KAAKsa,KAAKnZ,EAAKwD,IAAKxD,EAAK+C,GAAI/C,EAAKoZ,OAAQpZ,EAAKqZ,MAAOrZ,EAAKsZ,KAAMtZ,EAAKmY,SACxE,CACIjH,GAAO3S,GAAQ8a,EAAQxa,KAAKgZ,WAC9B2B,WAAW,KACT3a,KAAKsa,KAAK/b,KAAKyB,KAAM2E,EAAKT,EAAIqW,EAAQC,EAAQ,EAAU,EAAPC,EAAUnB,IAC1DmB,GAGLnB,EAASjH,EAAK3S,IAEVqR,EAAK/Q,KAAK2Y,QAAQ4B,GAAQK,KAAK5a,KAAK2Y,SAC1C,GAAkB,IAAd5H,EAAG5S,OAaP,OAAO4S,EAAGpM,EAAKT,EAAIwW,GAZjB,IACE,MAAMrS,EAAI0I,EAAGpM,EAAKT,GACdmE,GAAuB,mBAAXA,EAAEwS,KAChBxS,EAAEwS,QAAaH,EAAS,KAAMhb,IAAOob,MAAMJ,GAE3CA,EAAS,KAAMrS,EAEnB,OAASgK,GACPqI,EAASrI,EACX,CAIJ,CACA,cAAA0I,CAAe1B,EAAWxR,EAAYxF,EAAU,CAAA,EAAIiX,GAClD,IAAKtZ,KAAK2Y,QAER,OADA3Y,KAAKwC,OAAOX,KAAK,kEACVyX,GAAYA,IAEjB1c,EAASyc,OAAwBrZ,KAAK2L,cAAcI,mBAAmBsN,IACvEzc,EAASiL,KAAaA,EAAa,CAACA,IACxC,MAAM0R,EAASvZ,KAAKoZ,UAAUC,EAAWxR,EAAYxF,EAASiX,GAC9D,IAAKC,EAAOA,OAAOpb,OAEjB,OADKob,EAAOC,QAAQrb,QAAQmb,IACrB,KAETC,EAAOA,OAAOhW,QAAQmD,IACpB1G,KAAKgb,QAAQtU,IAEjB,CACA,IAAAyJ,CAAKkJ,EAAWxR,EAAYyR,GAC1BtZ,KAAK+a,eAAe1B,EAAWxR,EAAY,CAAA,EAAIyR,EACjD,CACA,MAAAM,CAAOP,EAAWxR,EAAYyR,GAC5BtZ,KAAK+a,eAAe1B,EAAWxR,EAAY,CACzC+R,QAAQ,GACPN,EACL,CACA,OAAA0B,CAAQtU,EAAMnE,EAAS,IACrB,MAAM5C,EAAI+G,EAAKzI,MAAM,KACf0G,EAAMhF,EAAE,GACRuE,EAAKvE,EAAE,GACbK,KAAKsa,KAAK3V,EAAKT,EAAI,YAAQ,OAAW,EAAW,CAACmO,EAAK3S,KACjD2S,GAAKrS,KAAKwC,OAAOX,KAAK,GAAGU,sBAA2B2B,kBAAmBS,WAAc0N,IACpFA,GAAO3S,GAAMM,KAAKwC,OAAOd,IAAI,GAAGa,qBAA0B2B,kBAAmBS,IAAOjF,GACzFM,KAAK8Z,OAAOpT,EAAM2L,EAAK3S,IAE3B,CACA,WAAA4M,CAAY+M,EAAWhQ,EAAW5L,EAAKwd,EAAeC,EAAU7Y,EAAU,CAAA,EAAI8Y,EAAM,QAlhDtF,IAAApZ,EAAAC,EAAAoZ,EAAAC,EAAAC,EAmhDI,KAAI,OAAAtZ,EAAA,OAAAD,EAAA/B,KAAKkH,eAAL,EAAAnF,EAAewM,YAAf,EAAAvM,EAAsBwM,sBAAuB,OAAA6M,EAAA,OAAAD,EAAApb,KAAKkH,eAAL,EAAAkU,EAAe7M,YAAf,EAAA8M,EAAsB7M,mBAAmBnF,KAI1F,GAAI5L,SAA6C,KAARA,EAAzC,CACA,GAAI,OAAA6d,EAAAtb,KAAK2Y,cAAL,EAAA2C,EAAcxY,OAAQ,CACxB,MAAMyY,EAAO,IACRlZ,EACH6Y,YAEInK,EAAK/Q,KAAK2Y,QAAQ7V,OAAO8X,KAAK5a,KAAK2Y,SACzC,GAAI5H,EAAG5S,OAAS,EACd,IACE,IAAIkK,EAEFA,EADgB,IAAd0I,EAAG5S,OACD4S,EAAGsI,EAAWhQ,EAAW5L,EAAKwd,EAAeM,GAE7CxK,EAAGsI,EAAWhQ,EAAW5L,EAAKwd,GAEhC5S,GAAuB,mBAAXA,EAAEwS,KAChBxS,EAAEwS,QAAaM,EAAI,KAAMzb,IAAOob,MAAMK,GAEtCA,EAAI,KAAM9S,EAEd,OAASgK,GACP8I,EAAI9I,EACN,MAEAtB,EAAGsI,EAAWhQ,EAAW5L,EAAKwd,EAAeE,EAAKI,EAEtD,CACKlC,GAAcA,EAAU,IAC7BrZ,KAAK4Y,MAAM7T,YAAYsU,EAAU,GAAIhQ,EAAW5L,EAAKwd,EA5BA,OAHnDjb,KAAKwC,OAAOX,KAAK,qBAAqBpE,wBAA0B4L,wBAAiC,2NAgCrG,EAGF,MAAM9I,EAAM,KAAA,CACVkC,OAAO,EACP+Y,WAAW,EACXtX,GAAI,CAAC,eACLC,UAAW,CAAC,eACZ0H,YAAa,CAAC,OACduC,YAAY,EACZqB,eAAe,EACfW,0BAA0B,EAC1BD,KAAM,MACNsL,SAAS,EACTC,sBAAsB,EACtB3a,aAAc,IACd6G,YAAa,IACbkD,gBAAiB,IACjBiE,iBAAkB,IAClB4M,yBAAyB,EACzBrP,aAAa,EACbf,eAAe,EACfO,cAAe,WACfS,oBAAoB,EACpBH,mBAAmB,EACnB2I,6BAA6B,EAC7BlH,aAAa,EACbG,yBAAyB,EACzBkB,YAAY,EACZC,mBAAmB,EACnBtC,eAAe,EACf7C,YAAY,EACZ8C,uBAAuB,EACvBF,wBAAwB,EACxBD,6BAA6B,EAC7BrD,yBAAyB,EACzBJ,iCAAkCvH,IAChC,IAAIia,EAAM,CAAA,EAIV,GAHuB,iBAAZja,EAAK,KAAiBia,EAAMja,EAAK,IACxC/E,EAAS+E,EAAK,MAAKia,EAAI/Q,aAAelJ,EAAK,IAC3C/E,EAAS+E,EAAK,MAAKia,EAAIC,aAAela,EAAK,IACxB,iBAAZA,EAAK,IAAsC,iBAAZA,EAAK,GAAiB,CAC9D,MAAMU,EAAUV,EAAK,IAAMA,EAAK,GAChCvD,OAAO8H,KAAK7D,GAASkB,QAAQ9F,IAC3Bme,EAAIne,GAAO4E,EAAQ5E,IAEvB,CACA,OAAOme,GAETpU,cAAe,CACb6L,aAAa,EACbD,OAAQpO,GAASA,EACjBzC,OAAQ,KACRmK,OAAQ,KACRgH,gBAAiB,IACjBE,eAAgB,IAChBC,cAAe,MACfE,cAAe,IACfE,wBAAyB,IACzBC,YAAa,IACb7G,iBAAiB,GAEnBuJ,qBAAqB,IAEjBkF,EAAmBzZ,IApnDzB,IAAAN,EAAAC,EA4nDE,OAPIpF,EAASyF,EAAQ6B,MAAK7B,EAAQ6B,GAAK,CAAC7B,EAAQ6B,KAC5CtH,EAASyF,EAAQwJ,eAAcxJ,EAAQwJ,YAAc,CAACxJ,EAAQwJ,cAC9DjP,EAASyF,EAAQ+L,cAAa/L,EAAQ+L,WAAa,CAAC/L,EAAQ+L,cAC5D,OAAApM,EAAA,SAAAK,EAAQoN,wBAAe/R,cAAvB,EAAAsE,EAAAzD,KAAAwD,EAAiC,WAAY,IAC/CM,EAAQoN,cAAgBpN,EAAQoN,cAAcvK,OAAO,CAAC,YAEnB,kBAA1B7C,EAAQ0Z,gBAA6B1Z,EAAQmZ,UAAYnZ,EAAQ0Z,eACrE1Z,GAGH2Z,EAAO,OASb,MAAMC,UAAa/Y,EACjB,WAAApD,CAAYuC,EAAU,CAAA,EAAIiX,GATA,IAAA4C,EAkBxB,GARA9X,QACApE,KAAKqC,QAAUyZ,EAAiBzZ,GAChCrC,KAAKkH,SAAW,CAAA,EAChBlH,KAAKwC,OAASS,EACdjD,KAAKmc,QAAU,CACbC,SAAU,IAfYF,EAiBJlc,KAhBT5B,OAAOie,oBAAoBje,OAAOke,eAAeJ,IACzD3Y,QAAQsU,IACc,mBAAdqE,EAAKrE,KACdqE,EAAKrE,GAAOqE,EAAKrE,GAAK+C,KAAKsB,MAczB5C,IAAatZ,KAAKuc,gBAAkBla,EAAQma,QAAS,CACvD,IAAKxc,KAAKqC,QAAQmZ,UAEhB,OADAxb,KAAKsC,KAAKD,EAASiX,GACZtZ,KAET2a,WAAW,KACT3a,KAAKsC,KAAKD,EAASiX,IAClB,EACL,CACF,CACA,IAAAhX,CAAKD,EAAU,CAAA,EAAIiX,GACjBtZ,KAAKyc,gBAAiB,EACC,mBAAZpa,IACTiX,EAAWjX,EACXA,EAAU,CAAA,GAEa,MAArBA,EAAQ8B,WAAqB9B,EAAQ6B,KACnCtH,EAASyF,EAAQ6B,IACnB7B,EAAQ8B,UAAY9B,EAAQ6B,GACnB7B,EAAQ6B,GAAGxG,QAAQ,eAAiB,IAC7C2E,EAAQ8B,UAAY9B,EAAQ6B,GAAG,KAGnC,MAAMwY,EAAUnc,IAChBP,KAAKqC,QAAU,IACVqa,KACA1c,KAAKqC,WACLyZ,EAAiBzZ,IAEtBrC,KAAKqC,QAAQmF,cAAgB,IACxBkV,EAAQlV,iBACRxH,KAAKqC,QAAQmF,oBAEW,IAAzBnF,EAAQtB,eACVf,KAAKqC,QAAQ2F,wBAA0B3F,EAAQtB,mBAErB,IAAxBsB,EAAQuF,cACV5H,KAAKqC,QAAQ4F,uBAAyB5F,EAAQuF,aAEhD,MAAM+U,EAAsBC,GACrBA,EACwB,mBAAlBA,EAAqC,IAAIA,EAC7CA,EAFoB,KAI7B,IAAK5c,KAAKqC,QAAQma,QAAS,CAMzB,IAAIzF,EALA/W,KAAKmc,QAAQ3Z,OACfS,EAAWX,KAAKqa,EAAoB3c,KAAKmc,QAAQ3Z,QAASxC,KAAKqC,SAE/DY,EAAWX,KAAK,KAAMtC,KAAKqC,SAI3B0U,EADE/W,KAAKmc,QAAQpF,UACH/W,KAAKmc,QAAQpF,UAEbL,EAEd,MAAMmG,EAAK,IAAIrN,EAAaxP,KAAKqC,SACjCrC,KAAK4Y,MAAQ,IAAI3U,EAAcjE,KAAKqC,QAAQ+C,UAAWpF,KAAKqC,SAC5D,MAAM1C,EAAIK,KAAKkH,SACfvH,EAAE6C,OAASS,EACXtD,EAAEyP,cAAgBpP,KAAK4Y,MACvBjZ,EAAEgM,cAAgBkR,EAClBld,EAAE6K,eAAiB,IAAImH,EAAekL,EAAI,CACxChK,QAAS7S,KAAKqC,QAAQyI,gBACtB4Q,qBAAsB1b,KAAKqC,QAAQqZ,uBAEH1b,KAAKqC,QAAQmF,cAAc4L,QAAUpT,KAAKqC,QAAQmF,cAAc4L,SAAWsJ,EAAQlV,cAAc4L,QAEjIpT,KAAKwC,OAAOX,KAAK,+IAEfkV,GAAe/W,KAAKqC,QAAQmF,cAAc4L,QAAUpT,KAAKqC,QAAQmF,cAAc4L,SAAWsJ,EAAQlV,cAAc4L,SAClHzT,EAAEoX,UAAY4F,EAAoB5F,GAC9BpX,EAAEoX,UAAUzU,MAAM3C,EAAEoX,UAAUzU,KAAK3C,EAAGK,KAAKqC,SAC/CrC,KAAKqC,QAAQmF,cAAc4L,OAASzT,EAAEoX,UAAU3D,OAAOwH,KAAKjb,EAAEoX,YAEhEpX,EAAEkJ,aAAe,IAAIsK,EAAanT,KAAKqC,SACvC1C,EAAE4O,MAAQ,CACRC,mBAAoBxO,KAAKwO,mBAAmBoM,KAAK5a,OAEnDL,EAAE0M,iBAAmB,IAAIqM,EAAUiE,EAAoB3c,KAAKmc,QAAQxD,SAAUhZ,EAAEyP,cAAezP,EAAGK,KAAKqC,SACvG1C,EAAE0M,iBAAiBjJ,GAAG,IAAK,CAACI,KAAU7B,KACpC3B,KAAK2D,KAAKH,KAAU7B,KAElB3B,KAAKmc,QAAQW,mBACfnd,EAAEmd,iBAAmBH,EAAoB3c,KAAKmc,QAAQW,kBAClDnd,EAAEmd,iBAAiBxa,MAAM3C,EAAEmd,iBAAiBxa,KAAK3C,EAAGK,KAAKqC,QAAQ0a,UAAW/c,KAAKqC,UAEnFrC,KAAKmc,QAAQjS,aACfvK,EAAEuK,WAAayS,EAAoB3c,KAAKmc,QAAQjS,YAC5CvK,EAAEuK,WAAW5H,MAAM3C,EAAEuK,WAAW5H,KAAKtC,OAE3CA,KAAK4G,WAAa,IAAIK,EAAWjH,KAAKkH,SAAUlH,KAAKqC,SACrDrC,KAAK4G,WAAWxD,GAAG,IAAK,CAACI,KAAU7B,KACjC3B,KAAK2D,KAAKH,KAAU7B,KAEtB3B,KAAKmc,QAAQC,SAAS7Y,QAAQ8B,IACxBA,EAAE/C,MAAM+C,EAAE/C,KAAKtC,OAEvB,CAGA,GAFAA,KAAKoT,OAASpT,KAAKqC,QAAQmF,cAAc4L,OACpCkG,IAAUA,EAAW0C,GACtBhc,KAAKqC,QAAQwJ,cAAgB7L,KAAKkH,SAAS4V,mBAAqB9c,KAAKqC,QAAQsC,IAAK,CACpF,MAAM2J,EAAQtO,KAAKkH,SAASyE,cAAcC,iBAAiB5L,KAAKqC,QAAQwJ,aACpEyC,EAAMnQ,OAAS,GAAkB,QAAbmQ,EAAM,KAActO,KAAKqC,QAAQsC,IAAM2J,EAAM,GACvE,CACKtO,KAAKkH,SAAS4V,kBAAqB9c,KAAKqC,QAAQsC,KACnD3E,KAAKwC,OAAOX,KAAK,2DAEF,CAAC,cAAe,oBAAqB,oBAAqB,qBAClE0B,QAAQgX,IACfva,KAAKua,GAAU,IAAI5Y,IAAS3B,KAAK4Y,MAAM2B,MAAW5Y,KAE5B,CAAC,cAAe,eAAgB,oBAAqB,wBAC7D4B,QAAQgX,IACtBva,KAAKua,GAAU,IAAI5Y,KACjB3B,KAAK4Y,MAAM2B,MAAW5Y,GACf3B,QAGX,MAAMgd,EAAWlgB,IACXqT,EAAO,KACX,MAAM8M,EAAS,CAAC5K,EAAKlL,KACnBnH,KAAKyc,gBAAiB,EAClBzc,KAAKuc,gBAAkBvc,KAAKkd,sBAAsBld,KAAKwC,OAAOX,KAAK,yEACvE7B,KAAKuc,eAAgB,EAChBvc,KAAKqC,QAAQma,cAAcha,OAAOd,IAAI,cAAe1B,KAAKqC,SAC/DrC,KAAK2D,KAAK,cAAe3D,KAAKqC,SAC9B2a,EAAS7f,QAAQgK,GACjBmS,EAASjH,EAAKlL,IAEhB,GAAInH,KAAKqZ,YAAcrZ,KAAKuc,cAAe,OAAOU,EAAO,KAAMjd,KAAKmH,EAAEyT,KAAK5a,OAC3EA,KAAKoH,eAAepH,KAAKqC,QAAQsC,IAAKsY,IAOxC,OALIjd,KAAKqC,QAAQ+C,YAAcpF,KAAKqC,QAAQmZ,UAC1CrL,IAEAwK,WAAWxK,EAAM,GAEZ6M,CACT,CACA,aAAAG,CAAc9V,EAAUiS,EAAW0C,GA9xDrC,IAAAja,EAAAC,EA+xDI,IAAIob,EAAe9D,EACnB,MAAM5P,EAAU9M,EAASyK,GAAYA,EAAWrH,KAAKqH,SAErD,GADwB,mBAAbA,IAAyB+V,EAAe/V,IAC9CrH,KAAKqC,QAAQ+C,WAAapF,KAAKqC,QAAQsZ,wBAAyB,CACnE,GAA+B,YAA3B,MAAAjS,OAAA,EAAAA,EAASH,kBAAgCvJ,KAAKqC,QAAQoZ,SAA2C,IAAhCzb,KAAKqC,QAAQoZ,QAAQtd,eAAsBif,IAChH,MAAM7D,EAAS,GACT8D,EAAS1Y,IACb,IAAKA,EAAK,OACV,GAAY,WAARA,EAAkB,OACT3E,KAAKkH,SAASyE,cAAcI,mBAAmBpH,GACvDpB,QAAQ0I,IACD,WAANA,GACAsN,EAAO7b,QAAQuO,GAAK,GAAGsN,EAAO1Y,KAAKoL,MAG3C,GAAKvC,EAIH2T,EAAO3T,OAJK,CACM1J,KAAKkH,SAASyE,cAAcC,iBAAiB5L,KAAKqC,QAAQwJ,aAClEtI,QAAQ0I,GAAKoR,EAAOpR,GAChC,CAGA,OAAAjK,EAAA,OAAAD,EAAA/B,KAAKqC,QAAQoZ,cAAb,EAAA1Z,EAAsBwB,UAAtBvB,EAAAzD,KAAAwD,EAAgCkK,GAAKoR,EAAOpR,IAC5CjM,KAAKkH,SAASmF,iBAAiB8D,KAAKoJ,EAAQvZ,KAAKqC,QAAQ6B,GAAIvF,IACtDA,GAAMqB,KAAKsd,mBAAoBtd,KAAKqH,UAAUrH,KAAKud,oBAAoBvd,KAAKqH,UACjF+V,EAAaze,IAEjB,MACEye,EAAa,KAEjB,CACA,eAAAI,CAAgB/R,EAAMvH,EAAIoV,GACxB,MAAM0D,EAAWlgB,IAgBjB,MAfoB,mBAAT2O,IACT6N,EAAW7N,EACXA,OAAO,GAES,mBAAPvH,IACToV,EAAWpV,EACXA,OAAK,GAEFuH,IAAMA,EAAOzL,KAAKqZ,WAClBnV,IAAIA,EAAKlE,KAAKqC,QAAQ6B,IACtBoV,IAAUA,EAAW0C,GAC1Bhc,KAAKkH,SAASmF,iBAAiBuN,OAAOnO,EAAMvH,EAAImO,IAC9C2K,EAAS7f,UACTmc,EAASjH,KAEJ2K,CACT,CACA,GAAAS,CAAIhX,GACF,IAAKA,EAAQ,MAAM,IAAIiX,MAAM,iGAC7B,IAAKjX,EAAOhF,KAAM,MAAM,IAAIic,MAAM,4FAsBlC,MArBoB,YAAhBjX,EAAOhF,OACTzB,KAAKmc,QAAQxD,QAAUlS,IAEL,WAAhBA,EAAOhF,MAAqBgF,EAAO/E,KAAO+E,EAAO5E,MAAQ4E,EAAO3E,SAClE9B,KAAKmc,QAAQ3Z,OAASiE,GAEJ,qBAAhBA,EAAOhF,OACTzB,KAAKmc,QAAQW,iBAAmBrW,GAEd,eAAhBA,EAAOhF,OACTzB,KAAKmc,QAAQjS,WAAazD,GAER,kBAAhBA,EAAOhF,MACT6E,EAAcE,iBAAiBC,GAEb,cAAhBA,EAAOhF,OACTzB,KAAKmc,QAAQpF,UAAYtQ,GAEP,aAAhBA,EAAOhF,MACTzB,KAAKmc,QAAQC,SAASvb,KAAK4F,GAEtBzG,IACT,CACA,mBAAAud,CAAoBtR,GAClB,GAAKA,GAAMjM,KAAKqZ,aACZ,CAAC,SAAU,OAAO3b,QAAQuO,IAAK,GAAnC,CACA,IAAA,IAAS0R,EAAK,EAAGA,EAAK3d,KAAKqZ,UAAUlb,OAAQwf,IAAM,CACjD,MAAMC,EAAY5d,KAAKqZ,UAAUsE,GACjC,KAAI,CAAC,SAAU,OAAOjgB,QAAQkgB,IAAa,IACvC5d,KAAK4Y,MAAM3S,4BAA4B2X,GAAY,CACrD5d,KAAKsd,iBAAmBM,EACxB,KACF,CACF,EACK5d,KAAKsd,kBAAoBtd,KAAKqZ,UAAU3b,QAAQuO,GAAK,GAAKjM,KAAK4Y,MAAM3S,4BAA4BgG,KACpGjM,KAAKsd,iBAAmBrR,EACxBjM,KAAKqZ,UAAUwE,QAAQ5R,GAXc,CAazC,CACA,cAAA7E,CAAezC,EAAK2U,GAClBtZ,KAAK8d,qBAAuBnZ,EAC5B,MAAMqY,EAAWlgB,IACjBkD,KAAK2D,KAAK,mBAAoBgB,GAC9B,MAAMoZ,EAAc9R,IAClBjM,KAAKqH,SAAW4E,EAChBjM,KAAKqZ,UAAYrZ,KAAKkH,SAASyE,cAAcI,mBAAmBE,GAChEjM,KAAKsd,sBAAmB,EACxBtd,KAAKud,oBAAoBtR,IAErBkO,EAAO,CAAC9H,EAAKpG,KACbA,EACEjM,KAAK8d,uBAAyBnZ,IAChCoZ,EAAY9R,GACZjM,KAAK4G,WAAWQ,eAAe6E,GAC/BjM,KAAK8d,0BAAuB,EAC5B9d,KAAK2D,KAAK,kBAAmBsI,GAC7BjM,KAAKwC,OAAOd,IAAI,kBAAmBuK,IAGrCjM,KAAK8d,0BAAuB,EAE9Bd,EAAS7f,QAAQ,IAAIwE,IAAS3B,KAAKmH,KAAKxF,IACpC2X,KAAmBjH,EAAK,IAAI1Q,IAAS3B,KAAKmH,KAAKxF,KAE/Cqc,EAASvS,IAn5DnB,IAAA1J,EAAAC,EAo5DW2C,GAAQ8G,IAAQzL,KAAKkH,SAAS4V,qBAAyB,IAC5D,MAAMmB,EAAKrhB,EAAS6O,GAAQA,EAAOA,GAAQA,EAAK,GAC1CQ,EAAIjM,KAAK4Y,MAAM3S,4BAA4BgY,GAAMA,EAAKje,KAAKkH,SAASyE,cAAc0E,sBAAsBzT,EAAS6O,GAAQ,CAACA,GAAQA,GACpIQ,IACGjM,KAAKqH,UACR0W,EAAY9R,GAETjM,KAAK4G,WAAWS,UAAUrH,KAAK4G,WAAWQ,eAAe6E,GAC9D,OAAAjK,EAAA,OAAAD,EAAA/B,KAAKkH,SAAS4V,uBAAd,EAAA/a,EAAgCmc,oBAAhClc,EAAAzD,KAAAwD,EAAoDkK,IAEtDjM,KAAKmd,cAAclR,EAAGoG,IACpB8H,EAAK9H,EAAKpG,MAcd,OAXKtH,IAAO3E,KAAKkH,SAAS4V,kBAAqB9c,KAAKkH,SAAS4V,iBAAiBqB,OAElExZ,GAAO3E,KAAKkH,SAAS4V,kBAAoB9c,KAAKkH,SAAS4V,iBAAiBqB,MAC7B,IAAjDne,KAAKkH,SAAS4V,iBAAiBsB,OAAOjgB,OACxC6B,KAAKkH,SAAS4V,iBAAiBsB,SAASvD,KAAKmD,GAE7Che,KAAKkH,SAAS4V,iBAAiBsB,OAAOJ,GAGxCA,EAAOrZ,GARPqZ,EAAOhe,KAAKkH,SAAS4V,iBAAiBsB,UAUjCpB,CACT,CACA,SAAAqB,CAAU1Z,EAAKT,EAAIoa,GACjB,MAAMC,EAAS,CAAC9gB,EAAK8d,KAASrD,KAC5B,IAAI3Q,EAEFA,EADkB,iBAATgU,EACLvb,KAAKqC,QAAQ6G,iCAAiC,CAACzL,EAAK8d,GAAMrW,OAAOgT,IAEjE,IACCqD,GAGPhU,EAAE5C,IAAM4C,EAAE5C,KAAO4Z,EAAO5Z,IACxB4C,EAAEkE,KAAOlE,EAAEkE,MAAQ8S,EAAO9S,KAC1BlE,EAAErD,GAAKqD,EAAErD,IAAMqa,EAAOra,GACF,KAAhBqD,EAAE+W,YAAkB/W,EAAE+W,UAAY/W,EAAE+W,WAAaA,GAAaC,EAAOD,WACzE,MAAMvd,EAAef,KAAKqC,QAAQtB,cAAgB,IAClD,IAAIyd,EAMJ,OAJEA,EADEjX,EAAE+W,WAAa1a,MAAMgB,QAAQnH,GACnBA,EAAI6K,IAAI9J,GAAK,GAAG+I,EAAE+W,YAAYvd,IAAevC,KAE7C+I,EAAE+W,UAAY,GAAG/W,EAAE+W,YAAYvd,IAAetD,IAAQA,EAE7DuC,KAAKmH,EAAEqX,EAAWjX,IAS3B,OAPI3K,EAAS+H,GACX4Z,EAAO5Z,IAAMA,EAEb4Z,EAAO9S,KAAO9G,EAEhB4Z,EAAOra,GAAKA,EACZqa,EAAOD,UAAYA,EACZC,CACT,CACA,CAAApX,IAAKxF,GA/8DP,IAAAI,EAg9DI,OAAO,OAAAA,EAAA/B,KAAK4G,iBAAL,EAAA7E,EAAiBiH,aAAarH,EACvC,CACA,MAAA2F,IAAU3F,GAl9DZ,IAAAI,EAm9DI,OAAO,OAAAA,EAAA/B,KAAK4G,iBAAL,EAAA7E,EAAiBuF,UAAU3F,EACpC,CACA,mBAAA8c,CAAoBva,GAClBlE,KAAKqC,QAAQ8B,UAAYD,CAC3B,CACA,kBAAAsK,CAAmBtK,EAAI7B,EAAU,IAC/B,IAAKrC,KAAKuc,cAER,OADAvc,KAAKwC,OAAOX,KAAK,kDAAmD7B,KAAKqZ,YAClE,EAET,IAAKrZ,KAAKqZ,YAAcrZ,KAAKqZ,UAAUlb,OAErC,OADA6B,KAAKwC,OAAOX,KAAK,6DAA8D7B,KAAKqZ,YAC7E,EAET,MAAM1U,EAAMtC,EAAQsC,KAAO3E,KAAKsd,kBAAoBtd,KAAKqZ,UAAU,GAC7DxN,IAAc7L,KAAKqC,SAAUrC,KAAKqC,QAAQwJ,YAC1C6S,EAAU1e,KAAKqZ,UAAUrZ,KAAKqZ,UAAUlb,OAAS,GACvD,GAA0B,WAAtBwG,EAAI4E,cAA4B,OAAO,EAC3C,MAAMoV,EAAiB,CAAC1S,EAAGoO,KACzB,MAAMuE,EAAY5e,KAAKkH,SAASmF,iBAAiB6M,MAAM,GAAGjN,KAAKoO,KAC/D,OAAqB,IAAduE,GAAkC,IAAdA,GAAiC,IAAdA,GAEhD,GAAIvc,EAAQwc,SAAU,CACpB,MAAMC,EAAYzc,EAAQwc,SAAS7e,KAAM2e,GACzC,QAAkB,IAAdG,EAAyB,OAAOA,CACtC,CACA,QAAI9e,KAAK8F,kBAAkBnB,EAAKT,OAC3BlE,KAAKkH,SAASmF,iBAAiBsM,WAAW3Y,KAAKqC,QAAQ+C,WAAcpF,KAAKqC,QAAQsZ,8BACnFgD,EAAeha,EAAKT,IAAS2H,IAAe8S,EAAeD,EAASxa,IAE1E,CACA,cAAA6a,CAAe7a,EAAIoV,GACjB,MAAM0D,EAAWlgB,IACjB,OAAKkD,KAAKqC,QAAQ6B,IAIdtH,EAASsH,KAAKA,EAAK,CAACA,IACxBA,EAAGX,QAAQ8W,IACLra,KAAKqC,QAAQ6B,GAAGxG,QAAQ2c,GAAK,GAAGra,KAAKqC,QAAQ6B,GAAGrD,KAAKwZ,KAE3Dra,KAAKmd,cAAc9K,IACjB2K,EAAS7f,UACLmc,KAAmBjH,KAElB2K,IAXD1D,GAAUA,IACPpc,QAAQC,UAWnB,CACA,aAAA6hB,CAAcvT,EAAM6N,GAClB,MAAM0D,EAAWlgB,IACbF,EAAS6O,KAAOA,EAAO,CAACA,IAC5B,MAAMwT,EAAYjf,KAAKqC,QAAQoZ,SAAW,GACpCyD,EAAUzT,EAAKtD,OAAOxD,GAAOsa,EAAUvhB,QAAQiH,GAAO,GAAK3E,KAAKkH,SAASyE,cAAcuE,gBAAgBvL,IAC7G,OAAKua,EAAQ/gB,QAIb6B,KAAKqC,QAAQoZ,QAAUwD,EAAU/Z,OAAOga,GACxClf,KAAKmd,cAAc9K,IACjB2K,EAAS7f,UACLmc,KAAmBjH,KAElB2K,IARD1D,GAAUA,IACPpc,QAAQC,UAQnB,CACA,GAAAgiB,CAAIxa,GAlhEN,IAAA5C,EAAAC,EAohEI,GADK2C,IAAKA,EAAM3E,KAAKsd,oBAAqB,OAAAvb,EAAA/B,KAAKqZ,gBAAL,EAAAtX,EAAgB5D,QAAS,EAAI6B,KAAKqZ,UAAU,GAAKrZ,KAAKqH,YAC3F1C,EAAK,MAAO,MACjB,IACE,MAAMsH,EAAI,IAAI6D,KAAKsP,OAAOza,GAC1B,GAAIsH,GAAKA,EAAEoT,YAAa,CACtB,MAAMC,EAAKrT,EAAEoT,cACb,GAAIC,GAAMA,EAAGC,UAAW,OAAOD,EAAGC,SACpC,CACF,OAAS5gB,GAAI,CACb,MACMgN,GAAgB,OAAA3J,OAAKkF,eAAL,EAAAlF,EAAe2J,gBAAiB,IAAI6D,EAAajP,KACvE,OAAIoE,EAAI4E,cAAc7L,QAAQ,SAAW,EAAU,MAFnC,CAAC,KAAM,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,KAAM,KAAM,KAAM,MAAO,MAAO,MAAO,MAAO,MAAO,KAAM,KAAM,MAAO,MAAO,MAAO,KAAM,KAAM,MAAO,MAAO,MAAO,KAAM,MAAO,MAAO,MAAO,MAAO,KAAM,MAAO,OAGnaA,QAAQiO,EAAciE,wBAAwBjL,KAAQ,GAAMA,EAAI4E,cAAc7L,QAAQ,SAAW,EAAI,MAAQ,KAC9H,CACA,qBAAO8hB,CAAend,EAAU,CAAA,EAAIiX,GAClC,OAAO,IAAI2C,EAAK5Z,EAASiX,EAC3B,CACA,aAAAmG,CAAcpd,EAAU,GAAIiX,EAAW0C,GACrC,MAAM0D,EAAoBrd,EAAQqd,kBAC9BA,UAA0Brd,EAAQqd,kBACtC,MAAMC,EAAgB,IACjB3f,KAAKqC,WACLA,EAEDma,SAAS,GAGPxZ,EAAQ,IAAIiZ,EAAK0D,QACD,IAAlBtd,EAAQI,YAA0C,IAAnBJ,EAAQE,SACzCS,EAAMR,OAASQ,EAAMR,OAAOQ,MAAMX,IAYpC,GAVsB,CAAC,QAAS,WAAY,YAC9BkB,QAAQ8B,IACpBrC,EAAMqC,GAAKrF,KAAKqF,KAElBrC,EAAMkE,SAAW,IACZlH,KAAKkH,UAEVlE,EAAMkE,SAASqH,MAAQ,CACrBC,mBAAoBxL,EAAMwL,mBAAmBoM,KAAK5X,IAEhD0c,EAAmB,CACrB,MAAME,EAAaxhB,OAAO8H,KAAKlG,KAAK4Y,MAAMlZ,MAAMwW,OAAO,CAAC2J,EAAM5T,KAC5D4T,EAAK5T,GAAK,IACLjM,KAAK4Y,MAAMlZ,KAAKuM,IAErB4T,EAAK5T,GAAK7N,OAAO8H,KAAK2Z,EAAK5T,IAAIiK,OAAO,CAAC4J,EAAKzF,KAC1CyF,EAAIzF,GAAK,IACJwF,EAAK5T,GAAGoO,IAENyF,GACND,EAAK5T,IACD4T,GACN,CAAA,GACH7c,EAAM4V,MAAQ,IAAI3U,EAAc2b,EAAYD,GAC5C3c,EAAMkE,SAASkI,cAAgBpM,EAAM4V,KACvC,CAUA,OATA5V,EAAM4D,WAAa,IAAIK,EAAWjE,EAAMkE,SAAUyY,GAClD3c,EAAM4D,WAAWxD,GAAG,IAAK,CAACI,KAAU7B,KAClCqB,EAAMW,KAAKH,KAAU7B,KAEvBqB,EAAMV,KAAKqd,EAAerG,GAC1BtW,EAAM4D,WAAWvE,QAAUsd,EAC3B3c,EAAM4D,WAAWyF,iBAAiBnF,SAASqH,MAAQ,CACjDC,mBAAoBxL,EAAMwL,mBAAmBoM,KAAK5X,IAE7CA,CACT,CACA,MAAAqD,GACE,MAAO,CACLhE,QAASrC,KAAKqC,QACduW,MAAO5Y,KAAK4Y,MACZvR,SAAUrH,KAAKqH,SACfgS,UAAWrZ,KAAKqZ,UAChBiE,iBAAkBtd,KAAKsd,iBAE3B,EAEG,MAACyC,EAAW9D,EAAKuD,iBACtBO,EAASP,eAAiBvD,EAAKuD,eAERO,EAASP,eACpBO,EAASZ,IACRY,EAASzd,KACAyd,EAAS5C,cACP4C,EAASvC,gBACrBuC,EAAStC,IACEsC,EAAS3Y,eACd2Y,EAAS1B,UACjB0B,EAAS5Y,EACJ4Y,EAASzY,OACIyY,EAAStB,oBACVsB,EAASvR,mBACbuR,EAAShB,eACVgB,EAASf","x_google_ignoreList":[0]}