{"version":3,"file":"vendor-i18n-nNtbX_Kf.js","sources":["../../../node_modules/i18next/dist/esm/i18next.js"],"sourcesContent":["const isString = obj => typeof obj === 'string';\nconst defer = () => {\n  let res;\n  let rej;\n  const promise = new Promise((resolve, reject) => {\n    res = resolve;\n    rej = reject;\n  });\n  promise.resolve = res;\n  promise.reject = rej;\n  return promise;\n};\nconst makeString = object => {\n  if (object == null) return '';\n  return '' + object;\n};\nconst copy = (a, s, t) => {\n  a.forEach(m => {\n    if (s[m]) t[m] = s[m];\n  });\n};\nconst lastOfPathSeparatorRegExp = /###/g;\nconst cleanKey = key => key && key.indexOf('###') > -1 ? key.replace(lastOfPathSeparatorRegExp, '.') : key;\nconst canNotTraverseDeeper = object => !object || isString(object);\nconst getLastOfPath = (object, path, Empty) => {\n  const stack = !isString(path) ? path : path.split('.');\n  let stackIndex = 0;\n  while (stackIndex < stack.length - 1) {\n    if (canNotTraverseDeeper(object)) return {};\n    const key = cleanKey(stack[stackIndex]);\n    if (!object[key] && Empty) object[key] = new Empty();\n    if (Object.prototype.hasOwnProperty.call(object, key)) {\n      object = object[key];\n    } else {\n      object = {};\n    }\n    ++stackIndex;\n  }\n  if (canNotTraverseDeeper(object)) return {};\n  return {\n    obj: object,\n    k: cleanKey(stack[stackIndex])\n  };\n};\nconst setPath = (object, path, newValue) => {\n  const {\n    obj,\n    k\n  } = getLastOfPath(object, path, Object);\n  if (obj !== undefined || path.length === 1) {\n    obj[k] = newValue;\n    return;\n  }\n  let e = path[path.length - 1];\n  let p = path.slice(0, path.length - 1);\n  let last = getLastOfPath(object, p, Object);\n  while (last.obj === undefined && p.length) {\n    e = `${p[p.length - 1]}.${e}`;\n    p = p.slice(0, p.length - 1);\n    last = getLastOfPath(object, p, Object);\n    if (last?.obj && typeof last.obj[`${last.k}.${e}`] !== 'undefined') {\n      last.obj = undefined;\n    }\n  }\n  last.obj[`${last.k}.${e}`] = newValue;\n};\nconst pushPath = (object, path, newValue, concat) => {\n  const {\n    obj,\n    k\n  } = getLastOfPath(object, path, Object);\n  obj[k] = obj[k] || [];\n  obj[k].push(newValue);\n};\nconst getPath = (object, path) => {\n  const {\n    obj,\n    k\n  } = getLastOfPath(object, path);\n  if (!obj) return undefined;\n  if (!Object.prototype.hasOwnProperty.call(obj, k)) return undefined;\n  return obj[k];\n};\nconst getPathWithDefaults = (data, defaultData, key) => {\n  const value = getPath(data, key);\n  if (value !== undefined) {\n    return value;\n  }\n  return getPath(defaultData, key);\n};\nconst deepExtend = (target, source, overwrite) => {\n  for (const prop in source) {\n    if (prop !== '__proto__' && prop !== 'constructor') {\n      if (prop in target) {\n        if (isString(target[prop]) || target[prop] instanceof String || isString(source[prop]) || source[prop] instanceof String) {\n          if (overwrite) target[prop] = source[prop];\n        } else {\n          deepExtend(target[prop], source[prop], overwrite);\n        }\n      } else {\n        target[prop] = source[prop];\n      }\n    }\n  }\n  return target;\n};\nconst regexEscape = str => str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\nvar _entityMap = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;',\n  '/': '&#x2F;'\n};\nconst escape = data => {\n  if (isString(data)) {\n    return data.replace(/[&<>\"'\\/]/g, s => _entityMap[s]);\n  }\n  return data;\n};\nclass RegExpCache {\n  constructor(capacity) {\n    this.capacity = capacity;\n    this.regExpMap = new Map();\n    this.regExpQueue = [];\n  }\n  getRegExp(pattern) {\n    const regExpFromCache = this.regExpMap.get(pattern);\n    if (regExpFromCache !== undefined) {\n      return regExpFromCache;\n    }\n    const regExpNew = new RegExp(pattern);\n    if (this.regExpQueue.length === this.capacity) {\n      this.regExpMap.delete(this.regExpQueue.shift());\n    }\n    this.regExpMap.set(pattern, regExpNew);\n    this.regExpQueue.push(pattern);\n    return regExpNew;\n  }\n}\nconst chars = [' ', ',', '?', '!', ';'];\nconst looksLikeObjectPathRegExpCache = new RegExpCache(20);\nconst looksLikeObjectPath = (key, nsSeparator, keySeparator) => {\n  nsSeparator = nsSeparator || '';\n  keySeparator = keySeparator || '';\n  const possibleChars = chars.filter(c => nsSeparator.indexOf(c) < 0 && keySeparator.indexOf(c) < 0);\n  if (possibleChars.length === 0) return true;\n  const r = looksLikeObjectPathRegExpCache.getRegExp(`(${possibleChars.map(c => c === '?' ? '\\\\?' : c).join('|')})`);\n  let matched = !r.test(key);\n  if (!matched) {\n    const ki = key.indexOf(keySeparator);\n    if (ki > 0 && !r.test(key.substring(0, ki))) {\n      matched = true;\n    }\n  }\n  return matched;\n};\nconst deepFind = (obj, path, keySeparator = '.') => {\n  if (!obj) return undefined;\n  if (obj[path]) {\n    if (!Object.prototype.hasOwnProperty.call(obj, path)) return undefined;\n    return obj[path];\n  }\n  const tokens = path.split(keySeparator);\n  let current = obj;\n  for (let i = 0; i < tokens.length;) {\n    if (!current || typeof current !== 'object') {\n      return undefined;\n    }\n    let next;\n    let nextPath = '';\n    for (let j = i; j < tokens.length; ++j) {\n      if (j !== i) {\n        nextPath += keySeparator;\n      }\n      nextPath += tokens[j];\n      next = current[nextPath];\n      if (next !== undefined) {\n        if (['string', 'number', 'boolean'].indexOf(typeof next) > -1 && j < tokens.length - 1) {\n          continue;\n        }\n        i += j - i + 1;\n        break;\n      }\n    }\n    current = next;\n  }\n  return current;\n};\nconst getCleanedCode = code => code?.replace('_', '-');\n\nconst consoleLogger = {\n  type: 'logger',\n  log(args) {\n    this.output('log', args);\n  },\n  warn(args) {\n    this.output('warn', args);\n  },\n  error(args) {\n    this.output('error', args);\n  },\n  output(type, args) {\n    console?.[type]?.apply?.(console, args);\n  }\n};\nclass Logger {\n  constructor(concreteLogger, options = {}) {\n    this.init(concreteLogger, options);\n  }\n  init(concreteLogger, options = {}) {\n    this.prefix = options.prefix || 'i18next:';\n    this.logger = concreteLogger || consoleLogger;\n    this.options = options;\n    this.debug = options.debug;\n  }\n  log(...args) {\n    return this.forward(args, 'log', '', true);\n  }\n  warn(...args) {\n    return this.forward(args, 'warn', '', true);\n  }\n  error(...args) {\n    return this.forward(args, 'error', '');\n  }\n  deprecate(...args) {\n    return this.forward(args, 'warn', 'WARNING DEPRECATED: ', true);\n  }\n  forward(args, lvl, prefix, debugOnly) {\n    if (debugOnly && !this.debug) return null;\n    if (isString(args[0])) args[0] = `${prefix}${this.prefix} ${args[0]}`;\n    return this.logger[lvl](args);\n  }\n  create(moduleName) {\n    return new Logger(this.logger, {\n      ...{\n        prefix: `${this.prefix}:${moduleName}:`\n      },\n      ...this.options\n    });\n  }\n  clone(options) {\n    options = options || this.options;\n    options.prefix = options.prefix || this.prefix;\n    return new Logger(this.logger, options);\n  }\n}\nvar baseLogger = new Logger();\n\nclass EventEmitter {\n  constructor() {\n    this.observers = {};\n  }\n  on(events, listener) {\n    events.split(' ').forEach(event => {\n      if (!this.observers[event]) this.observers[event] = new Map();\n      const numListeners = this.observers[event].get(listener) || 0;\n      this.observers[event].set(listener, numListeners + 1);\n    });\n    return this;\n  }\n  off(event, listener) {\n    if (!this.observers[event]) return;\n    if (!listener) {\n      delete this.observers[event];\n      return;\n    }\n    this.observers[event].delete(listener);\n  }\n  emit(event, ...args) {\n    if (this.observers[event]) {\n      const cloned = Array.from(this.observers[event].entries());\n      cloned.forEach(([observer, numTimesAdded]) => {\n        for (let i = 0; i < numTimesAdded; i++) {\n          observer(...args);\n        }\n      });\n    }\n    if (this.observers['*']) {\n      const cloned = Array.from(this.observers['*'].entries());\n      cloned.forEach(([observer, numTimesAdded]) => {\n        for (let i = 0; i < numTimesAdded; i++) {\n          observer.apply(observer, [event, ...args]);\n        }\n      });\n    }\n  }\n}\n\nclass ResourceStore extends EventEmitter {\n  constructor(data, options = {\n    ns: ['translation'],\n    defaultNS: 'translation'\n  }) {\n    super();\n    this.data = data || {};\n    this.options = options;\n    if (this.options.keySeparator === undefined) {\n      this.options.keySeparator = '.';\n    }\n    if (this.options.ignoreJSONStructure === undefined) {\n      this.options.ignoreJSONStructure = true;\n    }\n  }\n  addNamespaces(ns) {\n    if (this.options.ns.indexOf(ns) < 0) {\n      this.options.ns.push(ns);\n    }\n  }\n  removeNamespaces(ns) {\n    const index = this.options.ns.indexOf(ns);\n    if (index > -1) {\n      this.options.ns.splice(index, 1);\n    }\n  }\n  getResource(lng, ns, key, options = {}) {\n    const keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n    const ignoreJSONStructure = options.ignoreJSONStructure !== undefined ? options.ignoreJSONStructure : this.options.ignoreJSONStructure;\n    let path;\n    if (lng.indexOf('.') > -1) {\n      path = lng.split('.');\n    } else {\n      path = [lng, ns];\n      if (key) {\n        if (Array.isArray(key)) {\n          path.push(...key);\n        } else if (isString(key) && keySeparator) {\n          path.push(...key.split(keySeparator));\n        } else {\n          path.push(key);\n        }\n      }\n    }\n    const result = getPath(this.data, path);\n    if (!result && !ns && !key && lng.indexOf('.') > -1) {\n      lng = path[0];\n      ns = path[1];\n      key = path.slice(2).join('.');\n    }\n    if (result || !ignoreJSONStructure || !isString(key)) return result;\n    return deepFind(this.data?.[lng]?.[ns], key, keySeparator);\n  }\n  addResource(lng, ns, key, value, options = {\n    silent: false\n  }) {\n    const keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n    let path = [lng, ns];\n    if (key) path = path.concat(keySeparator ? key.split(keySeparator) : key);\n    if (lng.indexOf('.') > -1) {\n      path = lng.split('.');\n      value = ns;\n      ns = path[1];\n    }\n    this.addNamespaces(ns);\n    setPath(this.data, path, value);\n    if (!options.silent) this.emit('added', lng, ns, key, value);\n  }\n  addResources(lng, ns, resources, options = {\n    silent: false\n  }) {\n    for (const m in resources) {\n      if (isString(resources[m]) || Array.isArray(resources[m])) this.addResource(lng, ns, m, resources[m], {\n        silent: true\n      });\n    }\n    if (!options.silent) this.emit('added', lng, ns, resources);\n  }\n  addResourceBundle(lng, ns, resources, deep, overwrite, options = {\n    silent: false,\n    skipCopy: false\n  }) {\n    let path = [lng, ns];\n    if (lng.indexOf('.') > -1) {\n      path = lng.split('.');\n      deep = resources;\n      resources = ns;\n      ns = path[1];\n    }\n    this.addNamespaces(ns);\n    let pack = getPath(this.data, path) || {};\n    if (!options.skipCopy) resources = JSON.parse(JSON.stringify(resources));\n    if (deep) {\n      deepExtend(pack, resources, overwrite);\n    } else {\n      pack = {\n        ...pack,\n        ...resources\n      };\n    }\n    setPath(this.data, path, pack);\n    if (!options.silent) this.emit('added', lng, ns, resources);\n  }\n  removeResourceBundle(lng, ns) {\n    if (this.hasResourceBundle(lng, ns)) {\n      delete this.data[lng][ns];\n    }\n    this.removeNamespaces(ns);\n    this.emit('removed', lng, ns);\n  }\n  hasResourceBundle(lng, ns) {\n    return this.getResource(lng, ns) !== undefined;\n  }\n  getResourceBundle(lng, ns) {\n    if (!ns) ns = this.options.defaultNS;\n    return this.getResource(lng, ns);\n  }\n  getDataByLanguage(lng) {\n    return this.data[lng];\n  }\n  hasLanguageSomeTranslations(lng) {\n    const data = this.getDataByLanguage(lng);\n    const n = data && Object.keys(data) || [];\n    return !!n.find(v => data[v] && Object.keys(data[v]).length > 0);\n  }\n  toJSON() {\n    return this.data;\n  }\n}\n\nvar postProcessor = {\n  processors: {},\n  addPostProcessor(module) {\n    this.processors[module.name] = module;\n  },\n  handle(processors, value, key, options, translator) {\n    processors.forEach(processor => {\n      value = this.processors[processor]?.process(value, key, options, translator) ?? value;\n    });\n    return value;\n  }\n};\n\nconst checkedLoadedFor = {};\nconst shouldHandleAsObject = res => !isString(res) && typeof res !== 'boolean' && typeof res !== 'number';\nclass Translator extends EventEmitter {\n  constructor(services, options = {}) {\n    super();\n    copy(['resourceStore', 'languageUtils', 'pluralResolver', 'interpolator', 'backendConnector', 'i18nFormat', 'utils'], services, this);\n    this.options = options;\n    if (this.options.keySeparator === undefined) {\n      this.options.keySeparator = '.';\n    }\n    this.logger = baseLogger.create('translator');\n  }\n  changeLanguage(lng) {\n    if (lng) this.language = lng;\n  }\n  exists(key, o = {\n    interpolation: {}\n  }) {\n    const opt = {\n      ...o\n    };\n    if (key == null) return false;\n    const resolved = this.resolve(key, opt);\n    return resolved?.res !== undefined;\n  }\n  extractFromKey(key, opt) {\n    let nsSeparator = opt.nsSeparator !== undefined ? opt.nsSeparator : this.options.nsSeparator;\n    if (nsSeparator === undefined) nsSeparator = ':';\n    const keySeparator = opt.keySeparator !== undefined ? opt.keySeparator : this.options.keySeparator;\n    let namespaces = opt.ns || this.options.defaultNS || [];\n    const wouldCheckForNsInKey = nsSeparator && key.indexOf(nsSeparator) > -1;\n    const seemsNaturalLanguage = !this.options.userDefinedKeySeparator && !opt.keySeparator && !this.options.userDefinedNsSeparator && !opt.nsSeparator && !looksLikeObjectPath(key, nsSeparator, keySeparator);\n    if (wouldCheckForNsInKey && !seemsNaturalLanguage) {\n      const m = key.match(this.interpolator.nestingRegexp);\n      if (m && m.length > 0) {\n        return {\n          key,\n          namespaces: isString(namespaces) ? [namespaces] : namespaces\n        };\n      }\n      const parts = key.split(nsSeparator);\n      if (nsSeparator !== keySeparator || nsSeparator === keySeparator && this.options.ns.indexOf(parts[0]) > -1) namespaces = parts.shift();\n      key = parts.join(keySeparator);\n    }\n    return {\n      key,\n      namespaces: isString(namespaces) ? [namespaces] : namespaces\n    };\n  }\n  translate(keys, o, lastKey) {\n    let opt = typeof o === 'object' ? {\n      ...o\n    } : o;\n    if (typeof opt !== 'object' && this.options.overloadTranslationOptionHandler) {\n      opt = this.options.overloadTranslationOptionHandler(arguments);\n    }\n    if (typeof options === 'object') opt = {\n      ...opt\n    };\n    if (!opt) opt = {};\n    if (keys == null) return '';\n    if (!Array.isArray(keys)) keys = [String(keys)];\n    const returnDetails = opt.returnDetails !== undefined ? opt.returnDetails : this.options.returnDetails;\n    const keySeparator = opt.keySeparator !== undefined ? opt.keySeparator : this.options.keySeparator;\n    const {\n      key,\n      namespaces\n    } = this.extractFromKey(keys[keys.length - 1], opt);\n    const namespace = namespaces[namespaces.length - 1];\n    let nsSeparator = opt.nsSeparator !== undefined ? opt.nsSeparator : this.options.nsSeparator;\n    if (nsSeparator === undefined) nsSeparator = ':';\n    const lng = opt.lng || this.language;\n    const appendNamespaceToCIMode = opt.appendNamespaceToCIMode || this.options.appendNamespaceToCIMode;\n    if (lng?.toLowerCase() === 'cimode') {\n      if (appendNamespaceToCIMode) {\n        if (returnDetails) {\n          return {\n            res: `${namespace}${nsSeparator}${key}`,\n            usedKey: key,\n            exactUsedKey: key,\n            usedLng: lng,\n            usedNS: namespace,\n            usedParams: this.getUsedParamsDetails(opt)\n          };\n        }\n        return `${namespace}${nsSeparator}${key}`;\n      }\n      if (returnDetails) {\n        return {\n          res: key,\n          usedKey: key,\n          exactUsedKey: key,\n          usedLng: lng,\n          usedNS: namespace,\n          usedParams: this.getUsedParamsDetails(opt)\n        };\n      }\n      return key;\n    }\n    const resolved = this.resolve(keys, opt);\n    let res = resolved?.res;\n    const resUsedKey = resolved?.usedKey || key;\n    const resExactUsedKey = resolved?.exactUsedKey || key;\n    const noObject = ['[object Number]', '[object Function]', '[object RegExp]'];\n    const joinArrays = opt.joinArrays !== undefined ? opt.joinArrays : this.options.joinArrays;\n    const handleAsObjectInI18nFormat = !this.i18nFormat || this.i18nFormat.handleAsObject;\n    const needsPluralHandling = opt.count !== undefined && !isString(opt.count);\n    const hasDefaultValue = Translator.hasDefaultValue(opt);\n    const defaultValueSuffix = needsPluralHandling ? this.pluralResolver.getSuffix(lng, opt.count, opt) : '';\n    const defaultValueSuffixOrdinalFallback = opt.ordinal && needsPluralHandling ? this.pluralResolver.getSuffix(lng, opt.count, {\n      ordinal: false\n    }) : '';\n    const needsZeroSuffixLookup = needsPluralHandling && !opt.ordinal && opt.count === 0;\n    const defaultValue = needsZeroSuffixLookup && opt[`defaultValue${this.options.pluralSeparator}zero`] || opt[`defaultValue${defaultValueSuffix}`] || opt[`defaultValue${defaultValueSuffixOrdinalFallback}`] || opt.defaultValue;\n    let resForObjHndl = res;\n    if (handleAsObjectInI18nFormat && !res && hasDefaultValue) {\n      resForObjHndl = defaultValue;\n    }\n    const handleAsObject = shouldHandleAsObject(resForObjHndl);\n    const resType = Object.prototype.toString.apply(resForObjHndl);\n    if (handleAsObjectInI18nFormat && resForObjHndl && handleAsObject && noObject.indexOf(resType) < 0 && !(isString(joinArrays) && Array.isArray(resForObjHndl))) {\n      if (!opt.returnObjects && !this.options.returnObjects) {\n        if (!this.options.returnedObjectHandler) {\n          this.logger.warn('accessing an object - but returnObjects options is not enabled!');\n        }\n        const r = this.options.returnedObjectHandler ? this.options.returnedObjectHandler(resUsedKey, resForObjHndl, {\n          ...opt,\n          ns: namespaces\n        }) : `key '${key} (${this.language})' returned an object instead of string.`;\n        if (returnDetails) {\n          resolved.res = r;\n          resolved.usedParams = this.getUsedParamsDetails(opt);\n          return resolved;\n        }\n        return r;\n      }\n      if (keySeparator) {\n        const resTypeIsArray = Array.isArray(resForObjHndl);\n        const copy = resTypeIsArray ? [] : {};\n        const newKeyToUse = resTypeIsArray ? resExactUsedKey : resUsedKey;\n        for (const m in resForObjHndl) {\n          if (Object.prototype.hasOwnProperty.call(resForObjHndl, m)) {\n            const deepKey = `${newKeyToUse}${keySeparator}${m}`;\n            if (hasDefaultValue && !res) {\n              copy[m] = this.translate(deepKey, {\n                ...opt,\n                defaultValue: shouldHandleAsObject(defaultValue) ? defaultValue[m] : undefined,\n                ...{\n                  joinArrays: false,\n                  ns: namespaces\n                }\n              });\n            } else {\n              copy[m] = this.translate(deepKey, {\n                ...opt,\n                ...{\n                  joinArrays: false,\n                  ns: namespaces\n                }\n              });\n            }\n            if (copy[m] === deepKey) copy[m] = resForObjHndl[m];\n          }\n        }\n        res = copy;\n      }\n    } else if (handleAsObjectInI18nFormat && isString(joinArrays) && Array.isArray(res)) {\n      res = res.join(joinArrays);\n      if (res) res = this.extendTranslation(res, keys, opt, lastKey);\n    } else {\n      let usedDefault = false;\n      let usedKey = false;\n      if (!this.isValidLookup(res) && hasDefaultValue) {\n        usedDefault = true;\n        res = defaultValue;\n      }\n      if (!this.isValidLookup(res)) {\n        usedKey = true;\n        res = key;\n      }\n      const missingKeyNoValueFallbackToKey = opt.missingKeyNoValueFallbackToKey || this.options.missingKeyNoValueFallbackToKey;\n      const resForMissing = missingKeyNoValueFallbackToKey && usedKey ? undefined : res;\n      const updateMissing = hasDefaultValue && defaultValue !== res && this.options.updateMissing;\n      if (usedKey || usedDefault || updateMissing) {\n        this.logger.log(updateMissing ? 'updateKey' : 'missingKey', lng, namespace, key, updateMissing ? defaultValue : res);\n        if (keySeparator) {\n          const fk = this.resolve(key, {\n            ...opt,\n            keySeparator: false\n          });\n          if (fk && fk.res) this.logger.warn('Seems the loaded translations were in flat JSON format instead of nested. Either set keySeparator: false on init or make sure your translations are published in nested format.');\n        }\n        let lngs = [];\n        const fallbackLngs = this.languageUtils.getFallbackCodes(this.options.fallbackLng, opt.lng || this.language);\n        if (this.options.saveMissingTo === 'fallback' && fallbackLngs && fallbackLngs[0]) {\n          for (let i = 0; i < fallbackLngs.length; i++) {\n            lngs.push(fallbackLngs[i]);\n          }\n        } else if (this.options.saveMissingTo === 'all') {\n          lngs = this.languageUtils.toResolveHierarchy(opt.lng || this.language);\n        } else {\n          lngs.push(opt.lng || this.language);\n        }\n        const send = (l, k, specificDefaultValue) => {\n          const defaultForMissing = hasDefaultValue && specificDefaultValue !== res ? specificDefaultValue : resForMissing;\n          if (this.options.missingKeyHandler) {\n            this.options.missingKeyHandler(l, namespace, k, defaultForMissing, updateMissing, opt);\n          } else if (this.backendConnector?.saveMissing) {\n            this.backendConnector.saveMissing(l, namespace, k, defaultForMissing, updateMissing, opt);\n          }\n          this.emit('missingKey', l, namespace, k, res);\n        };\n        if (this.options.saveMissing) {\n          if (this.options.saveMissingPlurals && needsPluralHandling) {\n            lngs.forEach(language => {\n              const suffixes = this.pluralResolver.getSuffixes(language, opt);\n              if (needsZeroSuffixLookup && opt[`defaultValue${this.options.pluralSeparator}zero`] && suffixes.indexOf(`${this.options.pluralSeparator}zero`) < 0) {\n                suffixes.push(`${this.options.pluralSeparator}zero`);\n              }\n              suffixes.forEach(suffix => {\n                send([language], key + suffix, opt[`defaultValue${suffix}`] || defaultValue);\n              });\n            });\n          } else {\n            send(lngs, key, defaultValue);\n          }\n        }\n      }\n      res = this.extendTranslation(res, keys, opt, resolved, lastKey);\n      if (usedKey && res === key && this.options.appendNamespaceToMissingKey) {\n        res = `${namespace}${nsSeparator}${key}`;\n      }\n      if ((usedKey || usedDefault) && this.options.parseMissingKeyHandler) {\n        res = this.options.parseMissingKeyHandler(this.options.appendNamespaceToMissingKey ? `${namespace}${nsSeparator}${key}` : key, usedDefault ? res : undefined, opt);\n      }\n    }\n    if (returnDetails) {\n      resolved.res = res;\n      resolved.usedParams = this.getUsedParamsDetails(opt);\n      return resolved;\n    }\n    return res;\n  }\n  extendTranslation(res, key, opt, resolved, lastKey) {\n    if (this.i18nFormat?.parse) {\n      res = this.i18nFormat.parse(res, {\n        ...this.options.interpolation.defaultVariables,\n        ...opt\n      }, opt.lng || this.language || resolved.usedLng, resolved.usedNS, resolved.usedKey, {\n        resolved\n      });\n    } else if (!opt.skipInterpolation) {\n      if (opt.interpolation) this.interpolator.init({\n        ...opt,\n        ...{\n          interpolation: {\n            ...this.options.interpolation,\n            ...opt.interpolation\n          }\n        }\n      });\n      const skipOnVariables = isString(res) && (opt?.interpolation?.skipOnVariables !== undefined ? opt.interpolation.skipOnVariables : this.options.interpolation.skipOnVariables);\n      let nestBef;\n      if (skipOnVariables) {\n        const nb = res.match(this.interpolator.nestingRegexp);\n        nestBef = nb && nb.length;\n      }\n      let data = opt.replace && !isString(opt.replace) ? opt.replace : opt;\n      if (this.options.interpolation.defaultVariables) data = {\n        ...this.options.interpolation.defaultVariables,\n        ...data\n      };\n      res = this.interpolator.interpolate(res, data, opt.lng || this.language || resolved.usedLng, opt);\n      if (skipOnVariables) {\n        const na = res.match(this.interpolator.nestingRegexp);\n        const nestAft = na && na.length;\n        if (nestBef < nestAft) opt.nest = false;\n      }\n      if (!opt.lng && resolved && resolved.res) opt.lng = this.language || resolved.usedLng;\n      if (opt.nest !== false) res = this.interpolator.nest(res, (...args) => {\n        if (lastKey?.[0] === args[0] && !opt.context) {\n          this.logger.warn(`It seems you are nesting recursively key: ${args[0]} in key: ${key[0]}`);\n          return null;\n        }\n        return this.translate(...args, key);\n      }, opt);\n      if (opt.interpolation) this.interpolator.reset();\n    }\n    const postProcess = opt.postProcess || this.options.postProcess;\n    const postProcessorNames = isString(postProcess) ? [postProcess] : postProcess;\n    if (res != null && postProcessorNames?.length && opt.applyPostProcessor !== false) {\n      res = postProcessor.handle(postProcessorNames, res, key, this.options && this.options.postProcessPassResolved ? {\n        i18nResolved: {\n          ...resolved,\n          usedParams: this.getUsedParamsDetails(opt)\n        },\n        ...opt\n      } : opt, this);\n    }\n    return res;\n  }\n  resolve(keys, opt = {}) {\n    let found;\n    let usedKey;\n    let exactUsedKey;\n    let usedLng;\n    let usedNS;\n    if (isString(keys)) keys = [keys];\n    keys.forEach(k => {\n      if (this.isValidLookup(found)) return;\n      const extracted = this.extractFromKey(k, opt);\n      const key = extracted.key;\n      usedKey = key;\n      let namespaces = extracted.namespaces;\n      if (this.options.fallbackNS) namespaces = namespaces.concat(this.options.fallbackNS);\n      const needsPluralHandling = opt.count !== undefined && !isString(opt.count);\n      const needsZeroSuffixLookup = needsPluralHandling && !opt.ordinal && opt.count === 0;\n      const needsContextHandling = opt.context !== undefined && (isString(opt.context) || typeof opt.context === 'number') && opt.context !== '';\n      const codes = opt.lngs ? opt.lngs : this.languageUtils.toResolveHierarchy(opt.lng || this.language, opt.fallbackLng);\n      namespaces.forEach(ns => {\n        if (this.isValidLookup(found)) return;\n        usedNS = ns;\n        if (!checkedLoadedFor[`${codes[0]}-${ns}`] && this.utils?.hasLoadedNamespace && !this.utils?.hasLoadedNamespace(usedNS)) {\n          checkedLoadedFor[`${codes[0]}-${ns}`] = true;\n          this.logger.warn(`key \"${usedKey}\" for languages \"${codes.join(', ')}\" won't get resolved as namespace \"${usedNS}\" was not yet loaded`, 'This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!');\n        }\n        codes.forEach(code => {\n          if (this.isValidLookup(found)) return;\n          usedLng = code;\n          const finalKeys = [key];\n          if (this.i18nFormat?.addLookupKeys) {\n            this.i18nFormat.addLookupKeys(finalKeys, key, code, ns, opt);\n          } else {\n            let pluralSuffix;\n            if (needsPluralHandling) pluralSuffix = this.pluralResolver.getSuffix(code, opt.count, opt);\n            const zeroSuffix = `${this.options.pluralSeparator}zero`;\n            const ordinalPrefix = `${this.options.pluralSeparator}ordinal${this.options.pluralSeparator}`;\n            if (needsPluralHandling) {\n              if (opt.ordinal && pluralSuffix.indexOf(ordinalPrefix) === 0) {\n                finalKeys.push(key + pluralSuffix.replace(ordinalPrefix, this.options.pluralSeparator));\n              }\n              finalKeys.push(key + pluralSuffix);\n              if (needsZeroSuffixLookup) {\n                finalKeys.push(key + zeroSuffix);\n              }\n            }\n            if (needsContextHandling) {\n              const contextKey = `${key}${this.options.contextSeparator || '_'}${opt.context}`;\n              finalKeys.push(contextKey);\n              if (needsPluralHandling) {\n                if (opt.ordinal && pluralSuffix.indexOf(ordinalPrefix) === 0) {\n                  finalKeys.push(contextKey + pluralSuffix.replace(ordinalPrefix, this.options.pluralSeparator));\n                }\n                finalKeys.push(contextKey + pluralSuffix);\n                if (needsZeroSuffixLookup) {\n                  finalKeys.push(contextKey + zeroSuffix);\n                }\n              }\n            }\n          }\n          let possibleKey;\n          while (possibleKey = finalKeys.pop()) {\n            if (!this.isValidLookup(found)) {\n              exactUsedKey = possibleKey;\n              found = this.getResource(code, ns, possibleKey, opt);\n            }\n          }\n        });\n      });\n    });\n    return {\n      res: found,\n      usedKey,\n      exactUsedKey,\n      usedLng,\n      usedNS\n    };\n  }\n  isValidLookup(res) {\n    return res !== undefined && !(!this.options.returnNull && res === null) && !(!this.options.returnEmptyString && res === '');\n  }\n  getResource(code, ns, key, options = {}) {\n    if (this.i18nFormat?.getResource) return this.i18nFormat.getResource(code, ns, key, options);\n    return this.resourceStore.getResource(code, ns, key, options);\n  }\n  getUsedParamsDetails(options = {}) {\n    const optionsKeys = ['defaultValue', 'ordinal', 'context', 'replace', 'lng', 'lngs', 'fallbackLng', 'ns', 'keySeparator', 'nsSeparator', 'returnObjects', 'returnDetails', 'joinArrays', 'postProcess', 'interpolation'];\n    const useOptionsReplaceForData = options.replace && !isString(options.replace);\n    let data = useOptionsReplaceForData ? options.replace : options;\n    if (useOptionsReplaceForData && typeof options.count !== 'undefined') {\n      data.count = options.count;\n    }\n    if (this.options.interpolation.defaultVariables) {\n      data = {\n        ...this.options.interpolation.defaultVariables,\n        ...data\n      };\n    }\n    if (!useOptionsReplaceForData) {\n      data = {\n        ...data\n      };\n      for (const key of optionsKeys) {\n        delete data[key];\n      }\n    }\n    return data;\n  }\n  static hasDefaultValue(options) {\n    const prefix = 'defaultValue';\n    for (const option in options) {\n      if (Object.prototype.hasOwnProperty.call(options, option) && prefix === option.substring(0, prefix.length) && undefined !== options[option]) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\nclass LanguageUtil {\n  constructor(options) {\n    this.options = options;\n    this.supportedLngs = this.options.supportedLngs || false;\n    this.logger = baseLogger.create('languageUtils');\n  }\n  getScriptPartFromCode(code) {\n    code = getCleanedCode(code);\n    if (!code || code.indexOf('-') < 0) return null;\n    const p = code.split('-');\n    if (p.length === 2) return null;\n    p.pop();\n    if (p[p.length - 1].toLowerCase() === 'x') return null;\n    return this.formatLanguageCode(p.join('-'));\n  }\n  getLanguagePartFromCode(code) {\n    code = getCleanedCode(code);\n    if (!code || code.indexOf('-') < 0) return code;\n    const p = code.split('-');\n    return this.formatLanguageCode(p[0]);\n  }\n  formatLanguageCode(code) {\n    if (isString(code) && code.indexOf('-') > -1) {\n      let formattedCode;\n      try {\n        formattedCode = Intl.getCanonicalLocales(code)[0];\n      } catch (e) {}\n      if (formattedCode && this.options.lowerCaseLng) {\n        formattedCode = formattedCode.toLowerCase();\n      }\n      if (formattedCode) return formattedCode;\n      if (this.options.lowerCaseLng) {\n        return code.toLowerCase();\n      }\n      return code;\n    }\n    return this.options.cleanCode || this.options.lowerCaseLng ? code.toLowerCase() : code;\n  }\n  isSupportedCode(code) {\n    if (this.options.load === 'languageOnly' || this.options.nonExplicitSupportedLngs) {\n      code = this.getLanguagePartFromCode(code);\n    }\n    return !this.supportedLngs || !this.supportedLngs.length || this.supportedLngs.indexOf(code) > -1;\n  }\n  getBestMatchFromCodes(codes) {\n    if (!codes) return null;\n    let found;\n    codes.forEach(code => {\n      if (found) return;\n      const cleanedLng = this.formatLanguageCode(code);\n      if (!this.options.supportedLngs || this.isSupportedCode(cleanedLng)) found = cleanedLng;\n    });\n    if (!found && this.options.supportedLngs) {\n      codes.forEach(code => {\n        if (found) return;\n        const lngScOnly = this.getScriptPartFromCode(code);\n        if (this.isSupportedCode(lngScOnly)) return found = lngScOnly;\n        const lngOnly = this.getLanguagePartFromCode(code);\n        if (this.isSupportedCode(lngOnly)) return found = lngOnly;\n        found = this.options.supportedLngs.find(supportedLng => {\n          if (supportedLng === lngOnly) return supportedLng;\n          if (supportedLng.indexOf('-') < 0 && lngOnly.indexOf('-') < 0) return;\n          if (supportedLng.indexOf('-') > 0 && lngOnly.indexOf('-') < 0 && supportedLng.substring(0, supportedLng.indexOf('-')) === lngOnly) return supportedLng;\n          if (supportedLng.indexOf(lngOnly) === 0 && lngOnly.length > 1) return supportedLng;\n        });\n      });\n    }\n    if (!found) found = this.getFallbackCodes(this.options.fallbackLng)[0];\n    return found;\n  }\n  getFallbackCodes(fallbacks, code) {\n    if (!fallbacks) return [];\n    if (typeof fallbacks === 'function') fallbacks = fallbacks(code);\n    if (isString(fallbacks)) fallbacks = [fallbacks];\n    if (Array.isArray(fallbacks)) return fallbacks;\n    if (!code) return fallbacks.default || [];\n    let found = fallbacks[code];\n    if (!found) found = fallbacks[this.getScriptPartFromCode(code)];\n    if (!found) found = fallbacks[this.formatLanguageCode(code)];\n    if (!found) found = fallbacks[this.getLanguagePartFromCode(code)];\n    if (!found) found = fallbacks.default;\n    return found || [];\n  }\n  toResolveHierarchy(code, fallbackCode) {\n    const fallbackCodes = this.getFallbackCodes((fallbackCode === false ? [] : fallbackCode) || this.options.fallbackLng || [], code);\n    const codes = [];\n    const addCode = c => {\n      if (!c) return;\n      if (this.isSupportedCode(c)) {\n        codes.push(c);\n      } else {\n        this.logger.warn(`rejecting language code not found in supportedLngs: ${c}`);\n      }\n    };\n    if (isString(code) && (code.indexOf('-') > -1 || code.indexOf('_') > -1)) {\n      if (this.options.load !== 'languageOnly') addCode(this.formatLanguageCode(code));\n      if (this.options.load !== 'languageOnly' && this.options.load !== 'currentOnly') addCode(this.getScriptPartFromCode(code));\n      if (this.options.load !== 'currentOnly') addCode(this.getLanguagePartFromCode(code));\n    } else if (isString(code)) {\n      addCode(this.formatLanguageCode(code));\n    }\n    fallbackCodes.forEach(fc => {\n      if (codes.indexOf(fc) < 0) addCode(this.formatLanguageCode(fc));\n    });\n    return codes;\n  }\n}\n\nconst suffixesOrder = {\n  zero: 0,\n  one: 1,\n  two: 2,\n  few: 3,\n  many: 4,\n  other: 5\n};\nconst dummyRule = {\n  select: count => count === 1 ? 'one' : 'other',\n  resolvedOptions: () => ({\n    pluralCategories: ['one', 'other']\n  })\n};\nclass PluralResolver {\n  constructor(languageUtils, options = {}) {\n    this.languageUtils = languageUtils;\n    this.options = options;\n    this.logger = baseLogger.create('pluralResolver');\n    this.pluralRulesCache = {};\n  }\n  addRule(lng, obj) {\n    this.rules[lng] = obj;\n  }\n  clearCache() {\n    this.pluralRulesCache = {};\n  }\n  getRule(code, options = {}) {\n    const cleanedCode = getCleanedCode(code === 'dev' ? 'en' : code);\n    const type = options.ordinal ? 'ordinal' : 'cardinal';\n    const cacheKey = JSON.stringify({\n      cleanedCode,\n      type\n    });\n    if (cacheKey in this.pluralRulesCache) {\n      return this.pluralRulesCache[cacheKey];\n    }\n    let rule;\n    try {\n      rule = new Intl.PluralRules(cleanedCode, {\n        type\n      });\n    } catch (err) {\n      if (!Intl) {\n        this.logger.error('No Intl support, please use an Intl polyfill!');\n        return dummyRule;\n      }\n      if (!code.match(/-|_/)) return dummyRule;\n      const lngPart = this.languageUtils.getLanguagePartFromCode(code);\n      rule = this.getRule(lngPart, options);\n    }\n    this.pluralRulesCache[cacheKey] = rule;\n    return rule;\n  }\n  needsPlural(code, options = {}) {\n    let rule = this.getRule(code, options);\n    if (!rule) rule = this.getRule('dev', options);\n    return rule?.resolvedOptions().pluralCategories.length > 1;\n  }\n  getPluralFormsOfKey(code, key, options = {}) {\n    return this.getSuffixes(code, options).map(suffix => `${key}${suffix}`);\n  }\n  getSuffixes(code, options = {}) {\n    let rule = this.getRule(code, options);\n    if (!rule) rule = this.getRule('dev', options);\n    if (!rule) return [];\n    return rule.resolvedOptions().pluralCategories.sort((pluralCategory1, pluralCategory2) => suffixesOrder[pluralCategory1] - suffixesOrder[pluralCategory2]).map(pluralCategory => `${this.options.prepend}${options.ordinal ? `ordinal${this.options.prepend}` : ''}${pluralCategory}`);\n  }\n  getSuffix(code, count, options = {}) {\n    const rule = this.getRule(code, options);\n    if (rule) {\n      return `${this.options.prepend}${options.ordinal ? `ordinal${this.options.prepend}` : ''}${rule.select(count)}`;\n    }\n    this.logger.warn(`no plural rule found for: ${code}`);\n    return this.getSuffix('dev', count, options);\n  }\n}\n\nconst deepFindWithDefaults = (data, defaultData, key, keySeparator = '.', ignoreJSONStructure = true) => {\n  let path = getPathWithDefaults(data, defaultData, key);\n  if (!path && ignoreJSONStructure && isString(key)) {\n    path = deepFind(data, key, keySeparator);\n    if (path === undefined) path = deepFind(defaultData, key, keySeparator);\n  }\n  return path;\n};\nconst regexSafe = val => val.replace(/\\$/g, '$$$$');\nclass Interpolator {\n  constructor(options = {}) {\n    this.logger = baseLogger.create('interpolator');\n    this.options = options;\n    this.format = options?.interpolation?.format || (value => value);\n    this.init(options);\n  }\n  init(options = {}) {\n    if (!options.interpolation) options.interpolation = {\n      escapeValue: true\n    };\n    const {\n      escape: escape$1,\n      escapeValue,\n      useRawValueToEscape,\n      prefix,\n      prefixEscaped,\n      suffix,\n      suffixEscaped,\n      formatSeparator,\n      unescapeSuffix,\n      unescapePrefix,\n      nestingPrefix,\n      nestingPrefixEscaped,\n      nestingSuffix,\n      nestingSuffixEscaped,\n      nestingOptionsSeparator,\n      maxReplaces,\n      alwaysFormat\n    } = options.interpolation;\n    this.escape = escape$1 !== undefined ? escape$1 : escape;\n    this.escapeValue = escapeValue !== undefined ? escapeValue : true;\n    this.useRawValueToEscape = useRawValueToEscape !== undefined ? useRawValueToEscape : false;\n    this.prefix = prefix ? regexEscape(prefix) : prefixEscaped || '{{';\n    this.suffix = suffix ? regexEscape(suffix) : suffixEscaped || '}}';\n    this.formatSeparator = formatSeparator || ',';\n    this.unescapePrefix = unescapeSuffix ? '' : unescapePrefix || '-';\n    this.unescapeSuffix = this.unescapePrefix ? '' : unescapeSuffix || '';\n    this.nestingPrefix = nestingPrefix ? regexEscape(nestingPrefix) : nestingPrefixEscaped || regexEscape('$t(');\n    this.nestingSuffix = nestingSuffix ? regexEscape(nestingSuffix) : nestingSuffixEscaped || regexEscape(')');\n    this.nestingOptionsSeparator = nestingOptionsSeparator || ',';\n    this.maxReplaces = maxReplaces || 1000;\n    this.alwaysFormat = alwaysFormat !== undefined ? alwaysFormat : false;\n    this.resetRegExp();\n  }\n  reset() {\n    if (this.options) this.init(this.options);\n  }\n  resetRegExp() {\n    const getOrResetRegExp = (existingRegExp, pattern) => {\n      if (existingRegExp?.source === pattern) {\n        existingRegExp.lastIndex = 0;\n        return existingRegExp;\n      }\n      return new RegExp(pattern, 'g');\n    };\n    this.regexp = getOrResetRegExp(this.regexp, `${this.prefix}(.+?)${this.suffix}`);\n    this.regexpUnescape = getOrResetRegExp(this.regexpUnescape, `${this.prefix}${this.unescapePrefix}(.+?)${this.unescapeSuffix}${this.suffix}`);\n    this.nestingRegexp = getOrResetRegExp(this.nestingRegexp, `${this.nestingPrefix}((?:[^()\"']+|\"[^\"]*\"|'[^']*'|\\\\((?:[^()]|\"[^\"]*\"|'[^']*')*\\\\))*?)${this.nestingSuffix}`);\n  }\n  interpolate(str, data, lng, options) {\n    let match;\n    let value;\n    let replaces;\n    const defaultData = this.options && this.options.interpolation && this.options.interpolation.defaultVariables || {};\n    const handleFormat = key => {\n      if (key.indexOf(this.formatSeparator) < 0) {\n        const path = deepFindWithDefaults(data, defaultData, key, this.options.keySeparator, this.options.ignoreJSONStructure);\n        return this.alwaysFormat ? this.format(path, undefined, lng, {\n          ...options,\n          ...data,\n          interpolationkey: key\n        }) : path;\n      }\n      const p = key.split(this.formatSeparator);\n      const k = p.shift().trim();\n      const f = p.join(this.formatSeparator).trim();\n      return this.format(deepFindWithDefaults(data, defaultData, k, this.options.keySeparator, this.options.ignoreJSONStructure), f, lng, {\n        ...options,\n        ...data,\n        interpolationkey: k\n      });\n    };\n    this.resetRegExp();\n    const missingInterpolationHandler = options?.missingInterpolationHandler || this.options.missingInterpolationHandler;\n    const skipOnVariables = options?.interpolation?.skipOnVariables !== undefined ? options.interpolation.skipOnVariables : this.options.interpolation.skipOnVariables;\n    const todos = [{\n      regex: this.regexpUnescape,\n      safeValue: val => regexSafe(val)\n    }, {\n      regex: this.regexp,\n      safeValue: val => this.escapeValue ? regexSafe(this.escape(val)) : regexSafe(val)\n    }];\n    todos.forEach(todo => {\n      replaces = 0;\n      while (match = todo.regex.exec(str)) {\n        const matchedVar = match[1].trim();\n        value = handleFormat(matchedVar);\n        if (value === undefined) {\n          if (typeof missingInterpolationHandler === 'function') {\n            const temp = missingInterpolationHandler(str, match, options);\n            value = isString(temp) ? temp : '';\n          } else if (options && Object.prototype.hasOwnProperty.call(options, matchedVar)) {\n            value = '';\n          } else if (skipOnVariables) {\n            value = match[0];\n            continue;\n          } else {\n            this.logger.warn(`missed to pass in variable ${matchedVar} for interpolating ${str}`);\n            value = '';\n          }\n        } else if (!isString(value) && !this.useRawValueToEscape) {\n          value = makeString(value);\n        }\n        const safeValue = todo.safeValue(value);\n        str = str.replace(match[0], safeValue);\n        if (skipOnVariables) {\n          todo.regex.lastIndex += value.length;\n          todo.regex.lastIndex -= match[0].length;\n        } else {\n          todo.regex.lastIndex = 0;\n        }\n        replaces++;\n        if (replaces >= this.maxReplaces) {\n          break;\n        }\n      }\n    });\n    return str;\n  }\n  nest(str, fc, options = {}) {\n    let match;\n    let value;\n    let clonedOptions;\n    const handleHasOptions = (key, inheritedOptions) => {\n      const sep = this.nestingOptionsSeparator;\n      if (key.indexOf(sep) < 0) return key;\n      const c = key.split(new RegExp(`${sep}[ ]*{`));\n      let optionsString = `{${c[1]}`;\n      key = c[0];\n      optionsString = this.interpolate(optionsString, clonedOptions);\n      const matchedSingleQuotes = optionsString.match(/'/g);\n      const matchedDoubleQuotes = optionsString.match(/\"/g);\n      if ((matchedSingleQuotes?.length ?? 0) % 2 === 0 && !matchedDoubleQuotes || matchedDoubleQuotes.length % 2 !== 0) {\n        optionsString = optionsString.replace(/'/g, '\"');\n      }\n      try {\n        clonedOptions = JSON.parse(optionsString);\n        if (inheritedOptions) clonedOptions = {\n          ...inheritedOptions,\n          ...clonedOptions\n        };\n      } catch (e) {\n        this.logger.warn(`failed parsing options string in nesting for key ${key}`, e);\n        return `${key}${sep}${optionsString}`;\n      }\n      if (clonedOptions.defaultValue && clonedOptions.defaultValue.indexOf(this.prefix) > -1) delete clonedOptions.defaultValue;\n      return key;\n    };\n    while (match = this.nestingRegexp.exec(str)) {\n      let formatters = [];\n      clonedOptions = {\n        ...options\n      };\n      clonedOptions = clonedOptions.replace && !isString(clonedOptions.replace) ? clonedOptions.replace : clonedOptions;\n      clonedOptions.applyPostProcessor = false;\n      delete clonedOptions.defaultValue;\n      const keyEndIndex = /{.*}/.test(match[1]) ? match[1].lastIndexOf('}') + 1 : match[1].indexOf(this.formatSeparator);\n      if (keyEndIndex !== -1) {\n        formatters = match[1].slice(keyEndIndex).split(this.formatSeparator).map(elem => elem.trim()).filter(Boolean);\n        match[1] = match[1].slice(0, keyEndIndex);\n      }\n      value = fc(handleHasOptions.call(this, match[1].trim(), clonedOptions), clonedOptions);\n      if (value && match[0] === str && !isString(value)) return value;\n      if (!isString(value)) value = makeString(value);\n      if (!value) {\n        this.logger.warn(`missed to resolve ${match[1]} for nesting ${str}`);\n        value = '';\n      }\n      if (formatters.length) {\n        value = formatters.reduce((v, f) => this.format(v, f, options.lng, {\n          ...options,\n          interpolationkey: match[1].trim()\n        }), value.trim());\n      }\n      str = str.replace(match[0], value);\n      this.regexp.lastIndex = 0;\n    }\n    return str;\n  }\n}\n\nconst parseFormatStr = formatStr => {\n  let formatName = formatStr.toLowerCase().trim();\n  const formatOptions = {};\n  if (formatStr.indexOf('(') > -1) {\n    const p = formatStr.split('(');\n    formatName = p[0].toLowerCase().trim();\n    const optStr = p[1].substring(0, p[1].length - 1);\n    if (formatName === 'currency' && optStr.indexOf(':') < 0) {\n      if (!formatOptions.currency) formatOptions.currency = optStr.trim();\n    } else if (formatName === 'relativetime' && optStr.indexOf(':') < 0) {\n      if (!formatOptions.range) formatOptions.range = optStr.trim();\n    } else {\n      const opts = optStr.split(';');\n      opts.forEach(opt => {\n        if (opt) {\n          const [key, ...rest] = opt.split(':');\n          const val = rest.join(':').trim().replace(/^'+|'+$/g, '');\n          const trimmedKey = key.trim();\n          if (!formatOptions[trimmedKey]) formatOptions[trimmedKey] = val;\n          if (val === 'false') formatOptions[trimmedKey] = false;\n          if (val === 'true') formatOptions[trimmedKey] = true;\n          if (!isNaN(val)) formatOptions[trimmedKey] = parseInt(val, 10);\n        }\n      });\n    }\n  }\n  return {\n    formatName,\n    formatOptions\n  };\n};\nconst createCachedFormatter = fn => {\n  const cache = {};\n  return (v, l, o) => {\n    let optForCache = o;\n    if (o && o.interpolationkey && o.formatParams && o.formatParams[o.interpolationkey] && o[o.interpolationkey]) {\n      optForCache = {\n        ...optForCache,\n        [o.interpolationkey]: undefined\n      };\n    }\n    const key = l + JSON.stringify(optForCache);\n    let frm = cache[key];\n    if (!frm) {\n      frm = fn(getCleanedCode(l), o);\n      cache[key] = frm;\n    }\n    return frm(v);\n  };\n};\nconst createNonCachedFormatter = fn => (v, l, o) => fn(getCleanedCode(l), o)(v);\nclass Formatter {\n  constructor(options = {}) {\n    this.logger = baseLogger.create('formatter');\n    this.options = options;\n    this.init(options);\n  }\n  init(services, options = {\n    interpolation: {}\n  }) {\n    this.formatSeparator = options.interpolation.formatSeparator || ',';\n    const cf = options.cacheInBuiltFormats ? createCachedFormatter : createNonCachedFormatter;\n    this.formats = {\n      number: cf((lng, opt) => {\n        const formatter = new Intl.NumberFormat(lng, {\n          ...opt\n        });\n        return val => formatter.format(val);\n      }),\n      currency: cf((lng, opt) => {\n        const formatter = new Intl.NumberFormat(lng, {\n          ...opt,\n          style: 'currency'\n        });\n        return val => formatter.format(val);\n      }),\n      datetime: cf((lng, opt) => {\n        const formatter = new Intl.DateTimeFormat(lng, {\n          ...opt\n        });\n        return val => formatter.format(val);\n      }),\n      relativetime: cf((lng, opt) => {\n        const formatter = new Intl.RelativeTimeFormat(lng, {\n          ...opt\n        });\n        return val => formatter.format(val, opt.range || 'day');\n      }),\n      list: cf((lng, opt) => {\n        const formatter = new Intl.ListFormat(lng, {\n          ...opt\n        });\n        return val => formatter.format(val);\n      })\n    };\n  }\n  add(name, fc) {\n    this.formats[name.toLowerCase().trim()] = fc;\n  }\n  addCached(name, fc) {\n    this.formats[name.toLowerCase().trim()] = createCachedFormatter(fc);\n  }\n  format(value, format, lng, options = {}) {\n    const formats = format.split(this.formatSeparator);\n    if (formats.length > 1 && formats[0].indexOf('(') > 1 && formats[0].indexOf(')') < 0 && formats.find(f => f.indexOf(')') > -1)) {\n      const lastIndex = formats.findIndex(f => f.indexOf(')') > -1);\n      formats[0] = [formats[0], ...formats.splice(1, lastIndex)].join(this.formatSeparator);\n    }\n    const result = formats.reduce((mem, f) => {\n      const {\n        formatName,\n        formatOptions\n      } = parseFormatStr(f);\n      if (this.formats[formatName]) {\n        let formatted = mem;\n        try {\n          const valOptions = options?.formatParams?.[options.interpolationkey] || {};\n          const l = valOptions.locale || valOptions.lng || options.locale || options.lng || lng;\n          formatted = this.formats[formatName](mem, l, {\n            ...formatOptions,\n            ...options,\n            ...valOptions\n          });\n        } catch (error) {\n          this.logger.warn(error);\n        }\n        return formatted;\n      } else {\n        this.logger.warn(`there was no format function for ${formatName}`);\n      }\n      return mem;\n    }, value);\n    return result;\n  }\n}\n\nconst removePending = (q, name) => {\n  if (q.pending[name] !== undefined) {\n    delete q.pending[name];\n    q.pendingCount--;\n  }\n};\nclass Connector extends EventEmitter {\n  constructor(backend, store, services, options = {}) {\n    super();\n    this.backend = backend;\n    this.store = store;\n    this.services = services;\n    this.languageUtils = services.languageUtils;\n    this.options = options;\n    this.logger = baseLogger.create('backendConnector');\n    this.waitingReads = [];\n    this.maxParallelReads = options.maxParallelReads || 10;\n    this.readingCalls = 0;\n    this.maxRetries = options.maxRetries >= 0 ? options.maxRetries : 5;\n    this.retryTimeout = options.retryTimeout >= 1 ? options.retryTimeout : 350;\n    this.state = {};\n    this.queue = [];\n    this.backend?.init?.(services, options.backend, options);\n  }\n  queueLoad(languages, namespaces, options, callback) {\n    const toLoad = {};\n    const pending = {};\n    const toLoadLanguages = {};\n    const toLoadNamespaces = {};\n    languages.forEach(lng => {\n      let hasAllNamespaces = true;\n      namespaces.forEach(ns => {\n        const name = `${lng}|${ns}`;\n        if (!options.reload && this.store.hasResourceBundle(lng, ns)) {\n          this.state[name] = 2;\n        } else if (this.state[name] < 0) ; else if (this.state[name] === 1) {\n          if (pending[name] === undefined) pending[name] = true;\n        } else {\n          this.state[name] = 1;\n          hasAllNamespaces = false;\n          if (pending[name] === undefined) pending[name] = true;\n          if (toLoad[name] === undefined) toLoad[name] = true;\n          if (toLoadNamespaces[ns] === undefined) toLoadNamespaces[ns] = true;\n        }\n      });\n      if (!hasAllNamespaces) toLoadLanguages[lng] = true;\n    });\n    if (Object.keys(toLoad).length || Object.keys(pending).length) {\n      this.queue.push({\n        pending,\n        pendingCount: Object.keys(pending).length,\n        loaded: {},\n        errors: [],\n        callback\n      });\n    }\n    return {\n      toLoad: Object.keys(toLoad),\n      pending: Object.keys(pending),\n      toLoadLanguages: Object.keys(toLoadLanguages),\n      toLoadNamespaces: Object.keys(toLoadNamespaces)\n    };\n  }\n  loaded(name, err, data) {\n    const s = name.split('|');\n    const lng = s[0];\n    const ns = s[1];\n    if (err) this.emit('failedLoading', lng, ns, err);\n    if (!err && data) {\n      this.store.addResourceBundle(lng, ns, data, undefined, undefined, {\n        skipCopy: true\n      });\n    }\n    this.state[name] = err ? -1 : 2;\n    if (err && data) this.state[name] = 0;\n    const loaded = {};\n    this.queue.forEach(q => {\n      pushPath(q.loaded, [lng], ns);\n      removePending(q, name);\n      if (err) q.errors.push(err);\n      if (q.pendingCount === 0 && !q.done) {\n        Object.keys(q.loaded).forEach(l => {\n          if (!loaded[l]) loaded[l] = {};\n          const loadedKeys = q.loaded[l];\n          if (loadedKeys.length) {\n            loadedKeys.forEach(n => {\n              if (loaded[l][n] === undefined) loaded[l][n] = true;\n            });\n          }\n        });\n        q.done = true;\n        if (q.errors.length) {\n          q.callback(q.errors);\n        } else {\n          q.callback();\n        }\n      }\n    });\n    this.emit('loaded', loaded);\n    this.queue = this.queue.filter(q => !q.done);\n  }\n  read(lng, ns, fcName, tried = 0, wait = this.retryTimeout, callback) {\n    if (!lng.length) return callback(null, {});\n    if (this.readingCalls >= this.maxParallelReads) {\n      this.waitingReads.push({\n        lng,\n        ns,\n        fcName,\n        tried,\n        wait,\n        callback\n      });\n      return;\n    }\n    this.readingCalls++;\n    const resolver = (err, data) => {\n      this.readingCalls--;\n      if (this.waitingReads.length > 0) {\n        const next = this.waitingReads.shift();\n        this.read(next.lng, next.ns, next.fcName, next.tried, next.wait, next.callback);\n      }\n      if (err && data && tried < this.maxRetries) {\n        setTimeout(() => {\n          this.read.call(this, lng, ns, fcName, tried + 1, wait * 2, callback);\n        }, wait);\n        return;\n      }\n      callback(err, data);\n    };\n    const fc = this.backend[fcName].bind(this.backend);\n    if (fc.length === 2) {\n      try {\n        const r = fc(lng, ns);\n        if (r && typeof r.then === 'function') {\n          r.then(data => resolver(null, data)).catch(resolver);\n        } else {\n          resolver(null, r);\n        }\n      } catch (err) {\n        resolver(err);\n      }\n      return;\n    }\n    return fc(lng, ns, resolver);\n  }\n  prepareLoading(languages, namespaces, options = {}, callback) {\n    if (!this.backend) {\n      this.logger.warn('No backend was added via i18next.use. Will not load resources.');\n      return callback && callback();\n    }\n    if (isString(languages)) languages = this.languageUtils.toResolveHierarchy(languages);\n    if (isString(namespaces)) namespaces = [namespaces];\n    const toLoad = this.queueLoad(languages, namespaces, options, callback);\n    if (!toLoad.toLoad.length) {\n      if (!toLoad.pending.length) callback();\n      return null;\n    }\n    toLoad.toLoad.forEach(name => {\n      this.loadOne(name);\n    });\n  }\n  load(languages, namespaces, callback) {\n    this.prepareLoading(languages, namespaces, {}, callback);\n  }\n  reload(languages, namespaces, callback) {\n    this.prepareLoading(languages, namespaces, {\n      reload: true\n    }, callback);\n  }\n  loadOne(name, prefix = '') {\n    const s = name.split('|');\n    const lng = s[0];\n    const ns = s[1];\n    this.read(lng, ns, 'read', undefined, undefined, (err, data) => {\n      if (err) this.logger.warn(`${prefix}loading namespace ${ns} for language ${lng} failed`, err);\n      if (!err && data) this.logger.log(`${prefix}loaded namespace ${ns} for language ${lng}`, data);\n      this.loaded(name, err, data);\n    });\n  }\n  saveMissing(languages, namespace, key, fallbackValue, isUpdate, options = {}, clb = () => {}) {\n    if (this.services?.utils?.hasLoadedNamespace && !this.services?.utils?.hasLoadedNamespace(namespace)) {\n      this.logger.warn(`did not save key \"${key}\" as the namespace \"${namespace}\" was not yet loaded`, 'This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!');\n      return;\n    }\n    if (key === undefined || key === null || key === '') return;\n    if (this.backend?.create) {\n      const opts = {\n        ...options,\n        isUpdate\n      };\n      const fc = this.backend.create.bind(this.backend);\n      if (fc.length < 6) {\n        try {\n          let r;\n          if (fc.length === 5) {\n            r = fc(languages, namespace, key, fallbackValue, opts);\n          } else {\n            r = fc(languages, namespace, key, fallbackValue);\n          }\n          if (r && typeof r.then === 'function') {\n            r.then(data => clb(null, data)).catch(clb);\n          } else {\n            clb(null, r);\n          }\n        } catch (err) {\n          clb(err);\n        }\n      } else {\n        fc(languages, namespace, key, fallbackValue, clb, opts);\n      }\n    }\n    if (!languages || !languages[0]) return;\n    this.store.addResource(languages[0], namespace, key, fallbackValue);\n  }\n}\n\nconst get = () => ({\n  debug: false,\n  initAsync: true,\n  ns: ['translation'],\n  defaultNS: ['translation'],\n  fallbackLng: ['dev'],\n  fallbackNS: false,\n  supportedLngs: false,\n  nonExplicitSupportedLngs: false,\n  load: 'all',\n  preload: false,\n  simplifyPluralSuffix: true,\n  keySeparator: '.',\n  nsSeparator: ':',\n  pluralSeparator: '_',\n  contextSeparator: '_',\n  partialBundledLanguages: false,\n  saveMissing: false,\n  updateMissing: false,\n  saveMissingTo: 'fallback',\n  saveMissingPlurals: true,\n  missingKeyHandler: false,\n  missingInterpolationHandler: false,\n  postProcess: false,\n  postProcessPassResolved: false,\n  returnNull: false,\n  returnEmptyString: true,\n  returnObjects: false,\n  joinArrays: false,\n  returnedObjectHandler: false,\n  parseMissingKeyHandler: false,\n  appendNamespaceToMissingKey: false,\n  appendNamespaceToCIMode: false,\n  overloadTranslationOptionHandler: args => {\n    let ret = {};\n    if (typeof args[1] === 'object') ret = args[1];\n    if (isString(args[1])) ret.defaultValue = args[1];\n    if (isString(args[2])) ret.tDescription = args[2];\n    if (typeof args[2] === 'object' || typeof args[3] === 'object') {\n      const options = args[3] || args[2];\n      Object.keys(options).forEach(key => {\n        ret[key] = options[key];\n      });\n    }\n    return ret;\n  },\n  interpolation: {\n    escapeValue: true,\n    format: value => value,\n    prefix: '{{',\n    suffix: '}}',\n    formatSeparator: ',',\n    unescapePrefix: '-',\n    nestingPrefix: '$t(',\n    nestingSuffix: ')',\n    nestingOptionsSeparator: ',',\n    maxReplaces: 1000,\n    skipOnVariables: true\n  },\n  cacheInBuiltFormats: true\n});\nconst transformOptions = options => {\n  if (isString(options.ns)) options.ns = [options.ns];\n  if (isString(options.fallbackLng)) options.fallbackLng = [options.fallbackLng];\n  if (isString(options.fallbackNS)) options.fallbackNS = [options.fallbackNS];\n  if (options.supportedLngs?.indexOf?.('cimode') < 0) {\n    options.supportedLngs = options.supportedLngs.concat(['cimode']);\n  }\n  if (typeof options.initImmediate === 'boolean') options.initAsync = options.initImmediate;\n  return options;\n};\n\nconst noop = () => {};\nconst bindMemberFunctions = inst => {\n  const mems = Object.getOwnPropertyNames(Object.getPrototypeOf(inst));\n  mems.forEach(mem => {\n    if (typeof inst[mem] === 'function') {\n      inst[mem] = inst[mem].bind(inst);\n    }\n  });\n};\nclass I18n extends EventEmitter {\n  constructor(options = {}, callback) {\n    super();\n    this.options = transformOptions(options);\n    this.services = {};\n    this.logger = baseLogger;\n    this.modules = {\n      external: []\n    };\n    bindMemberFunctions(this);\n    if (callback && !this.isInitialized && !options.isClone) {\n      if (!this.options.initAsync) {\n        this.init(options, callback);\n        return this;\n      }\n      setTimeout(() => {\n        this.init(options, callback);\n      }, 0);\n    }\n  }\n  init(options = {}, callback) {\n    this.isInitializing = true;\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n    if (options.defaultNS == null && options.ns) {\n      if (isString(options.ns)) {\n        options.defaultNS = options.ns;\n      } else if (options.ns.indexOf('translation') < 0) {\n        options.defaultNS = options.ns[0];\n      }\n    }\n    const defOpts = get();\n    this.options = {\n      ...defOpts,\n      ...this.options,\n      ...transformOptions(options)\n    };\n    this.options.interpolation = {\n      ...defOpts.interpolation,\n      ...this.options.interpolation\n    };\n    if (options.keySeparator !== undefined) {\n      this.options.userDefinedKeySeparator = options.keySeparator;\n    }\n    if (options.nsSeparator !== undefined) {\n      this.options.userDefinedNsSeparator = options.nsSeparator;\n    }\n    const createClassOnDemand = ClassOrObject => {\n      if (!ClassOrObject) return null;\n      if (typeof ClassOrObject === 'function') return new ClassOrObject();\n      return ClassOrObject;\n    };\n    if (!this.options.isClone) {\n      if (this.modules.logger) {\n        baseLogger.init(createClassOnDemand(this.modules.logger), this.options);\n      } else {\n        baseLogger.init(null, this.options);\n      }\n      let formatter;\n      if (this.modules.formatter) {\n        formatter = this.modules.formatter;\n      } else {\n        formatter = Formatter;\n      }\n      const lu = new LanguageUtil(this.options);\n      this.store = new ResourceStore(this.options.resources, this.options);\n      const s = this.services;\n      s.logger = baseLogger;\n      s.resourceStore = this.store;\n      s.languageUtils = lu;\n      s.pluralResolver = new PluralResolver(lu, {\n        prepend: this.options.pluralSeparator,\n        simplifyPluralSuffix: this.options.simplifyPluralSuffix\n      });\n      const usingLegacyFormatFunction = this.options.interpolation.format && this.options.interpolation.format !== defOpts.interpolation.format;\n      if (usingLegacyFormatFunction) {\n        this.logger.warn(`init: you are still using the legacy format function, please use the new approach: https://www.i18next.com/translation-function/formatting`);\n      }\n      if (formatter && (!this.options.interpolation.format || this.options.interpolation.format === defOpts.interpolation.format)) {\n        s.formatter = createClassOnDemand(formatter);\n        if (s.formatter.init) s.formatter.init(s, this.options);\n        this.options.interpolation.format = s.formatter.format.bind(s.formatter);\n      }\n      s.interpolator = new Interpolator(this.options);\n      s.utils = {\n        hasLoadedNamespace: this.hasLoadedNamespace.bind(this)\n      };\n      s.backendConnector = new Connector(createClassOnDemand(this.modules.backend), s.resourceStore, s, this.options);\n      s.backendConnector.on('*', (event, ...args) => {\n        this.emit(event, ...args);\n      });\n      if (this.modules.languageDetector) {\n        s.languageDetector = createClassOnDemand(this.modules.languageDetector);\n        if (s.languageDetector.init) s.languageDetector.init(s, this.options.detection, this.options);\n      }\n      if (this.modules.i18nFormat) {\n        s.i18nFormat = createClassOnDemand(this.modules.i18nFormat);\n        if (s.i18nFormat.init) s.i18nFormat.init(this);\n      }\n      this.translator = new Translator(this.services, this.options);\n      this.translator.on('*', (event, ...args) => {\n        this.emit(event, ...args);\n      });\n      this.modules.external.forEach(m => {\n        if (m.init) m.init(this);\n      });\n    }\n    this.format = this.options.interpolation.format;\n    if (!callback) callback = noop;\n    if (this.options.fallbackLng && !this.services.languageDetector && !this.options.lng) {\n      const codes = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);\n      if (codes.length > 0 && codes[0] !== 'dev') this.options.lng = codes[0];\n    }\n    if (!this.services.languageDetector && !this.options.lng) {\n      this.logger.warn('init: no languageDetector is used and no lng is defined');\n    }\n    const storeApi = ['getResource', 'hasResourceBundle', 'getResourceBundle', 'getDataByLanguage'];\n    storeApi.forEach(fcName => {\n      this[fcName] = (...args) => this.store[fcName](...args);\n    });\n    const storeApiChained = ['addResource', 'addResources', 'addResourceBundle', 'removeResourceBundle'];\n    storeApiChained.forEach(fcName => {\n      this[fcName] = (...args) => {\n        this.store[fcName](...args);\n        return this;\n      };\n    });\n    const deferred = defer();\n    const load = () => {\n      const finish = (err, t) => {\n        this.isInitializing = false;\n        if (this.isInitialized && !this.initializedStoreOnce) this.logger.warn('init: i18next is already initialized. You should call init just once!');\n        this.isInitialized = true;\n        if (!this.options.isClone) this.logger.log('initialized', this.options);\n        this.emit('initialized', this.options);\n        deferred.resolve(t);\n        callback(err, t);\n      };\n      if (this.languages && !this.isInitialized) return finish(null, this.t.bind(this));\n      this.changeLanguage(this.options.lng, finish);\n    };\n    if (this.options.resources || !this.options.initAsync) {\n      load();\n    } else {\n      setTimeout(load, 0);\n    }\n    return deferred;\n  }\n  loadResources(language, callback = noop) {\n    let usedCallback = callback;\n    const usedLng = isString(language) ? language : this.language;\n    if (typeof language === 'function') usedCallback = language;\n    if (!this.options.resources || this.options.partialBundledLanguages) {\n      if (usedLng?.toLowerCase() === 'cimode' && (!this.options.preload || this.options.preload.length === 0)) return usedCallback();\n      const toLoad = [];\n      const append = lng => {\n        if (!lng) return;\n        if (lng === 'cimode') return;\n        const lngs = this.services.languageUtils.toResolveHierarchy(lng);\n        lngs.forEach(l => {\n          if (l === 'cimode') return;\n          if (toLoad.indexOf(l) < 0) toLoad.push(l);\n        });\n      };\n      if (!usedLng) {\n        const fallbacks = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);\n        fallbacks.forEach(l => append(l));\n      } else {\n        append(usedLng);\n      }\n      this.options.preload?.forEach?.(l => append(l));\n      this.services.backendConnector.load(toLoad, this.options.ns, e => {\n        if (!e && !this.resolvedLanguage && this.language) this.setResolvedLanguage(this.language);\n        usedCallback(e);\n      });\n    } else {\n      usedCallback(null);\n    }\n  }\n  reloadResources(lngs, ns, callback) {\n    const deferred = defer();\n    if (typeof lngs === 'function') {\n      callback = lngs;\n      lngs = undefined;\n    }\n    if (typeof ns === 'function') {\n      callback = ns;\n      ns = undefined;\n    }\n    if (!lngs) lngs = this.languages;\n    if (!ns) ns = this.options.ns;\n    if (!callback) callback = noop;\n    this.services.backendConnector.reload(lngs, ns, err => {\n      deferred.resolve();\n      callback(err);\n    });\n    return deferred;\n  }\n  use(module) {\n    if (!module) throw new Error('You are passing an undefined module! Please check the object you are passing to i18next.use()');\n    if (!module.type) throw new Error('You are passing a wrong module! Please check the object you are passing to i18next.use()');\n    if (module.type === 'backend') {\n      this.modules.backend = module;\n    }\n    if (module.type === 'logger' || module.log && module.warn && module.error) {\n      this.modules.logger = module;\n    }\n    if (module.type === 'languageDetector') {\n      this.modules.languageDetector = module;\n    }\n    if (module.type === 'i18nFormat') {\n      this.modules.i18nFormat = module;\n    }\n    if (module.type === 'postProcessor') {\n      postProcessor.addPostProcessor(module);\n    }\n    if (module.type === 'formatter') {\n      this.modules.formatter = module;\n    }\n    if (module.type === '3rdParty') {\n      this.modules.external.push(module);\n    }\n    return this;\n  }\n  setResolvedLanguage(l) {\n    if (!l || !this.languages) return;\n    if (['cimode', 'dev'].indexOf(l) > -1) return;\n    for (let li = 0; li < this.languages.length; li++) {\n      const lngInLngs = this.languages[li];\n      if (['cimode', 'dev'].indexOf(lngInLngs) > -1) continue;\n      if (this.store.hasLanguageSomeTranslations(lngInLngs)) {\n        this.resolvedLanguage = lngInLngs;\n        break;\n      }\n    }\n    if (!this.resolvedLanguage && this.languages.indexOf(l) < 0 && this.store.hasLanguageSomeTranslations(l)) {\n      this.resolvedLanguage = l;\n      this.languages.unshift(l);\n    }\n  }\n  changeLanguage(lng, callback) {\n    this.isLanguageChangingTo = lng;\n    const deferred = defer();\n    this.emit('languageChanging', lng);\n    const setLngProps = l => {\n      this.language = l;\n      this.languages = this.services.languageUtils.toResolveHierarchy(l);\n      this.resolvedLanguage = undefined;\n      this.setResolvedLanguage(l);\n    };\n    const done = (err, l) => {\n      if (l) {\n        if (this.isLanguageChangingTo === lng) {\n          setLngProps(l);\n          this.translator.changeLanguage(l);\n          this.isLanguageChangingTo = undefined;\n          this.emit('languageChanged', l);\n          this.logger.log('languageChanged', l);\n        }\n      } else {\n        this.isLanguageChangingTo = undefined;\n      }\n      deferred.resolve((...args) => this.t(...args));\n      if (callback) callback(err, (...args) => this.t(...args));\n    };\n    const setLng = lngs => {\n      if (!lng && !lngs && this.services.languageDetector) lngs = [];\n      const fl = isString(lngs) ? lngs : lngs && lngs[0];\n      const l = this.store.hasLanguageSomeTranslations(fl) ? fl : this.services.languageUtils.getBestMatchFromCodes(isString(lngs) ? [lngs] : lngs);\n      if (l) {\n        if (!this.language) {\n          setLngProps(l);\n        }\n        if (!this.translator.language) this.translator.changeLanguage(l);\n        this.services.languageDetector?.cacheUserLanguage?.(l);\n      }\n      this.loadResources(l, err => {\n        done(err, l);\n      });\n    };\n    if (!lng && this.services.languageDetector && !this.services.languageDetector.async) {\n      setLng(this.services.languageDetector.detect());\n    } else if (!lng && this.services.languageDetector && this.services.languageDetector.async) {\n      if (this.services.languageDetector.detect.length === 0) {\n        this.services.languageDetector.detect().then(setLng);\n      } else {\n        this.services.languageDetector.detect(setLng);\n      }\n    } else {\n      setLng(lng);\n    }\n    return deferred;\n  }\n  getFixedT(lng, ns, keyPrefix) {\n    const fixedT = (key, opts, ...rest) => {\n      let o;\n      if (typeof opts !== 'object') {\n        o = this.options.overloadTranslationOptionHandler([key, opts].concat(rest));\n      } else {\n        o = {\n          ...opts\n        };\n      }\n      o.lng = o.lng || fixedT.lng;\n      o.lngs = o.lngs || fixedT.lngs;\n      o.ns = o.ns || fixedT.ns;\n      if (o.keyPrefix !== '') o.keyPrefix = o.keyPrefix || keyPrefix || fixedT.keyPrefix;\n      const keySeparator = this.options.keySeparator || '.';\n      let resultKey;\n      if (o.keyPrefix && Array.isArray(key)) {\n        resultKey = key.map(k => `${o.keyPrefix}${keySeparator}${k}`);\n      } else {\n        resultKey = o.keyPrefix ? `${o.keyPrefix}${keySeparator}${key}` : key;\n      }\n      return this.t(resultKey, o);\n    };\n    if (isString(lng)) {\n      fixedT.lng = lng;\n    } else {\n      fixedT.lngs = lng;\n    }\n    fixedT.ns = ns;\n    fixedT.keyPrefix = keyPrefix;\n    return fixedT;\n  }\n  t(...args) {\n    return this.translator?.translate(...args);\n  }\n  exists(...args) {\n    return this.translator?.exists(...args);\n  }\n  setDefaultNamespace(ns) {\n    this.options.defaultNS = ns;\n  }\n  hasLoadedNamespace(ns, options = {}) {\n    if (!this.isInitialized) {\n      this.logger.warn('hasLoadedNamespace: i18next was not initialized', this.languages);\n      return false;\n    }\n    if (!this.languages || !this.languages.length) {\n      this.logger.warn('hasLoadedNamespace: i18n.languages were undefined or empty', this.languages);\n      return false;\n    }\n    const lng = options.lng || this.resolvedLanguage || this.languages[0];\n    const fallbackLng = this.options ? this.options.fallbackLng : false;\n    const lastLng = this.languages[this.languages.length - 1];\n    if (lng.toLowerCase() === 'cimode') return true;\n    const loadNotPending = (l, n) => {\n      const loadState = this.services.backendConnector.state[`${l}|${n}`];\n      return loadState === -1 || loadState === 0 || loadState === 2;\n    };\n    if (options.precheck) {\n      const preResult = options.precheck(this, loadNotPending);\n      if (preResult !== undefined) return preResult;\n    }\n    if (this.hasResourceBundle(lng, ns)) return true;\n    if (!this.services.backendConnector.backend || this.options.resources && !this.options.partialBundledLanguages) return true;\n    if (loadNotPending(lng, ns) && (!fallbackLng || loadNotPending(lastLng, ns))) return true;\n    return false;\n  }\n  loadNamespaces(ns, callback) {\n    const deferred = defer();\n    if (!this.options.ns) {\n      if (callback) callback();\n      return Promise.resolve();\n    }\n    if (isString(ns)) ns = [ns];\n    ns.forEach(n => {\n      if (this.options.ns.indexOf(n) < 0) this.options.ns.push(n);\n    });\n    this.loadResources(err => {\n      deferred.resolve();\n      if (callback) callback(err);\n    });\n    return deferred;\n  }\n  loadLanguages(lngs, callback) {\n    const deferred = defer();\n    if (isString(lngs)) lngs = [lngs];\n    const preloaded = this.options.preload || [];\n    const newLngs = lngs.filter(lng => preloaded.indexOf(lng) < 0 && this.services.languageUtils.isSupportedCode(lng));\n    if (!newLngs.length) {\n      if (callback) callback();\n      return Promise.resolve();\n    }\n    this.options.preload = preloaded.concat(newLngs);\n    this.loadResources(err => {\n      deferred.resolve();\n      if (callback) callback(err);\n    });\n    return deferred;\n  }\n  dir(lng) {\n    if (!lng) lng = this.resolvedLanguage || (this.languages?.length > 0 ? this.languages[0] : this.language);\n    if (!lng) return 'rtl';\n    try {\n      const l = new Intl.Locale(lng);\n      if (l && l.getTextInfo) {\n        const ti = l.getTextInfo();\n        if (ti && ti.direction) return ti.direction;\n      }\n    } catch (e) {}\n    const rtlLngs = ['ar', 'shu', 'sqr', 'ssh', 'xaa', 'yhd', 'yud', 'aao', 'abh', 'abv', 'acm', 'acq', 'acw', 'acx', 'acy', 'adf', 'ads', 'aeb', 'aec', 'afb', 'ajp', 'apc', 'apd', 'arb', 'arq', 'ars', 'ary', 'arz', 'auz', 'avl', 'ayh', 'ayl', 'ayn', 'ayp', 'bbz', 'pga', 'he', 'iw', 'ps', 'pbt', 'pbu', 'pst', 'prp', 'prd', 'ug', 'ur', 'ydd', 'yds', 'yih', 'ji', 'yi', 'hbo', 'men', 'xmn', 'fa', 'jpr', 'peo', 'pes', 'prs', 'dv', 'sam', 'ckb'];\n    const languageUtils = this.services?.languageUtils || new LanguageUtil(get());\n    if (lng.toLowerCase().indexOf('-latn') > 1) return 'ltr';\n    return rtlLngs.indexOf(languageUtils.getLanguagePartFromCode(lng)) > -1 || lng.toLowerCase().indexOf('-arab') > 1 ? 'rtl' : 'ltr';\n  }\n  static createInstance(options = {}, callback) {\n    return new I18n(options, callback);\n  }\n  cloneInstance(options = {}, callback = noop) {\n    const forkResourceStore = options.forkResourceStore;\n    if (forkResourceStore) delete options.forkResourceStore;\n    const mergedOptions = {\n      ...this.options,\n      ...options,\n      ...{\n        isClone: true\n      }\n    };\n    const clone = new I18n(mergedOptions);\n    if (options.debug !== undefined || options.prefix !== undefined) {\n      clone.logger = clone.logger.clone(options);\n    }\n    const membersToCopy = ['store', 'services', 'language'];\n    membersToCopy.forEach(m => {\n      clone[m] = this[m];\n    });\n    clone.services = {\n      ...this.services\n    };\n    clone.services.utils = {\n      hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone)\n    };\n    if (forkResourceStore) {\n      const clonedData = Object.keys(this.store.data).reduce((prev, l) => {\n        prev[l] = {\n          ...this.store.data[l]\n        };\n        prev[l] = Object.keys(prev[l]).reduce((acc, n) => {\n          acc[n] = {\n            ...prev[l][n]\n          };\n          return acc;\n        }, prev[l]);\n        return prev;\n      }, {});\n      clone.store = new ResourceStore(clonedData, mergedOptions);\n      clone.services.resourceStore = clone.store;\n    }\n    clone.translator = new Translator(clone.services, mergedOptions);\n    clone.translator.on('*', (event, ...args) => {\n      clone.emit(event, ...args);\n    });\n    clone.init(mergedOptions, callback);\n    clone.translator.options = mergedOptions;\n    clone.translator.backendConnector.services.utils = {\n      hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone)\n    };\n    return clone;\n  }\n  toJSON() {\n    return {\n      options: this.options,\n      store: this.store,\n      language: this.language,\n      languages: this.languages,\n      resolvedLanguage: this.resolvedLanguage\n    };\n  }\n}\nconst instance = I18n.createInstance();\ninstance.createInstance = I18n.createInstance;\n\nconst createInstance = instance.createInstance;\nconst dir = instance.dir;\nconst init = instance.init;\nconst loadResources = instance.loadResources;\nconst reloadResources = instance.reloadResources;\nconst use = instance.use;\nconst changeLanguage = instance.changeLanguage;\nconst getFixedT = instance.getFixedT;\nconst t = instance.t;\nconst exists = instance.exists;\nconst setDefaultNamespace = instance.setDefaultNamespace;\nconst hasLoadedNamespace = instance.hasLoadedNamespace;\nconst loadNamespaces = instance.loadNamespaces;\nconst loadLanguages = instance.loadLanguages;\n\nexport { changeLanguage, createInstance, instance as default, dir, exists, getFixedT, hasLoadedNamespace, init, loadLanguages, loadNamespaces, loadResources, reloadResources, setDefaultNamespace, t, use };\n"],"names":["isString","obj","defer","res","rej","promise","Promise","resolve","reject","makeString","object","lastOfPathSeparatorRegExp","cleanKey","key","indexOf","replace","canNotTraverseDeeper","getLastOfPath","path","Empty","stack","split","stackIndex","length","Object","prototype","hasOwnProperty","call","k","setPath","newValue","e","p","slice","last","getPath","deepExtend","target","source","overwrite","prop","String","regexEscape","str","_entityMap","escape","data","s","chars","looksLikeObjectPathRegExpCache","constructor","capacity","this","regExpMap","Map","regExpQueue","getRegExp","pattern","regExpFromCache","get","regExpNew","RegExp","delete","shift","set","push","deepFind","keySeparator","tokens","current","i","next","nextPath","j","getCleanedCode","code","consoleLogger","type","log","args","output","warn","error","Logger","concreteLogger","options","init","prefix","logger","debug","forward","deprecate","lvl","debugOnly","create","moduleName","clone","baseLogger","EventEmitter","observers","on","events","listener","forEach","event","numListeners","off","emit","Array","from","entries","observer","numTimesAdded","apply","ResourceStore","ns","defaultNS","super","ignoreJSONStructure","addNamespaces","removeNamespaces","index","splice","getResource","lng","isArray","result","join","addResource","value","silent","concat","addResources","resources","m","addResourceBundle","deep","skipCopy","pack","JSON","parse","stringify","removeResourceBundle","hasResourceBundle","getResourceBundle","getDataByLanguage","hasLanguageSomeTranslations","keys","find","v","toJSON","postProcessor","processors","addPostProcessor","module","name","handle","translator","processor","process","checkedLoadedFor","shouldHandleAsObject","Translator","services","t","changeLanguage","language","exists","o","interpolation","opt","resolved","extractFromKey","nsSeparator","namespaces","wouldCheckForNsInKey","seemsNaturalLanguage","userDefinedKeySeparator","userDefinedNsSeparator","possibleChars","filter","c","r","map","matched","test","ki","substring","looksLikeObjectPath","match","interpolator","nestingRegexp","parts","translate","lastKey","overloadTranslationOptionHandler","arguments","returnDetails","namespace","appendNamespaceToCIMode","toLowerCase","usedKey","exactUsedKey","usedLng","usedNS","usedParams","getUsedParamsDetails","resUsedKey","resExactUsedKey","joinArrays","handleAsObjectInI18nFormat","i18nFormat","handleAsObject","needsPluralHandling","count","hasDefaultValue","defaultValueSuffix","pluralResolver","getSuffix","defaultValueSuffixOrdinalFallback","ordinal","needsZeroSuffixLookup","defaultValue","pluralSeparator","resForObjHndl","resType","toString","extendTranslation","usedDefault","isValidLookup","resForMissing","missingKeyNoValueFallbackToKey","updateMissing","fk","lngs","fallbackLngs","languageUtils","getFallbackCodes","fallbackLng","saveMissingTo","toResolveHierarchy","send","l","specificDefaultValue","defaultForMissing","missingKeyHandler","backendConnector","saveMissing","saveMissingPlurals","suffixes","getSuffixes","suffix","appendNamespaceToMissingKey","parseMissingKeyHandler","returnObjects","returnedObjectHandler","resTypeIsArray","copy","newKeyToUse","deepKey","defaultVariables","skipInterpolation","skipOnVariables","nestBef","nb","interpolate","na","nest","context","reset","postProcess","postProcessorNames","applyPostProcessor","postProcessPassResolved","i18nResolved","found","extracted","fallbackNS","needsContextHandling","codes","utils","hasLoadedNamespace","finalKeys","addLookupKeys","pluralSuffix","zeroSuffix","ordinalPrefix","contextKey","contextSeparator","possibleKey","pop","returnNull","returnEmptyString","resourceStore","optionsKeys","useOptionsReplaceForData","option","LanguageUtil","supportedLngs","getScriptPartFromCode","formatLanguageCode","getLanguagePartFromCode","formattedCode","Intl","getCanonicalLocales","lowerCaseLng","cleanCode","isSupportedCode","load","nonExplicitSupportedLngs","getBestMatchFromCodes","cleanedLng","lngScOnly","lngOnly","supportedLng","fallbacks","default","fallbackCode","fallbackCodes","addCode","fc","suffixesOrder","zero","one","two","few","many","other","dummyRule","select","resolvedOptions","pluralCategories","PluralResolver","pluralRulesCache","addRule","rules","clearCache","getRule","cleanedCode","cacheKey","rule","PluralRules","err","lngPart","needsPlural","getPluralFormsOfKey","sort","pluralCategory1","pluralCategory2","pluralCategory","prepend","deepFindWithDefaults","defaultData","getPathWithDefaults","regexSafe","val","Interpolator","format","escapeValue","escape$1","useRawValueToEscape","prefixEscaped","suffixEscaped","formatSeparator","unescapeSuffix","unescapePrefix","nestingPrefix","nestingPrefixEscaped","nestingSuffix","nestingSuffixEscaped","nestingOptionsSeparator","maxReplaces","alwaysFormat","resetRegExp","getOrResetRegExp","existingRegExp","lastIndex","regexp","regexpUnescape","replaces","handleFormat","interpolationkey","trim","f","missingInterpolationHandler","regex","safeValue","todo","exec","matchedVar","temp","clonedOptions","handleHasOptions","inheritedOptions","sep","optionsString","matchedSingleQuotes","matchedDoubleQuotes","formatters","keyEndIndex","lastIndexOf","elem","Boolean","reduce","createCachedFormatter","fn","cache","optForCache","formatParams","frm","createNonCachedFormatter","Formatter","cf","cacheInBuiltFormats","formats","number","formatter","NumberFormat","currency","style","datetime","DateTimeFormat","relativetime","RelativeTimeFormat","range","list","ListFormat","add","addCached","findIndex","mem","formatName","formatOptions","formatStr","optStr","rest","trimmedKey","isNaN","parseInt","parseFormatStr","formatted","valOptions","locale","Connector","backend","store","waitingReads","maxParallelReads","readingCalls","maxRetries","retryTimeout","state","queue","queueLoad","languages","callback","toLoad","pending","toLoadLanguages","toLoadNamespaces","hasAllNamespaces","reload","pendingCount","loaded","errors","q","pushPath","removePending","done","loadedKeys","n","read","fcName","tried","wait","resolver","setTimeout","bind","then","catch","prepareLoading","loadOne","fallbackValue","isUpdate","clb","opts","initAsync","preload","simplifyPluralSuffix","partialBundledLanguages","ret","tDescription","transformOptions","initImmediate","noop","I18n","inst","modules","external","getOwnPropertyNames","getPrototypeOf","isInitialized","isClone","isInitializing","defOpts","createClassOnDemand","ClassOrObject","lu","languageDetector","detection","deferred","finish","initializedStoreOnce","loadResources","usedCallback","append","resolvedLanguage","setResolvedLanguage","reloadResources","use","Error","li","lngInLngs","unshift","isLanguageChangingTo","setLngProps","setLng","fl","cacheUserLanguage","async","detect","getFixedT","keyPrefix","fixedT","resultKey","setDefaultNamespace","lastLng","loadNotPending","loadState","precheck","preResult","loadNamespaces","loadLanguages","preloaded","newLngs","dir","Locale","getTextInfo","ti","direction","createInstance","cloneInstance","forkResourceStore","mergedOptions","clonedData","prev","acc","instance"],"mappings":"AAAA,MAAMA,EAAWC,GAAsB,iBAARA,EACzBC,EAAQ,KACZ,IAAIC,EACAC,EACJ,MAAMC,EAAU,IAAIC,QAAQ,CAACC,EAASC,KACpCL,EAAMI,EACNH,EAAMI,IAIR,OAFAH,EAAQE,QAAUJ,EAClBE,EAAQG,OAASJ,EACVC,GAEHI,EAAaC,GACH,MAAVA,EAAuB,GACpB,GAAKA,EAORC,EAA4B,OAC5BC,EAAWC,GAAOA,GAAOA,EAAIC,QAAQ,QAAS,EAAKD,EAAIE,QAAQJ,EAA2B,KAAOE,EACjGG,EAAuBN,IAAWA,GAAUV,EAASU,GACrDO,EAAgB,CAACP,EAAQQ,EAAMC,KACnC,MAAMC,EAASpB,EAASkB,GAAeA,EAAKG,MAAM,KAAlBH,EAChC,IAAII,EAAa,EACjB,KAAOA,EAAaF,EAAMG,OAAS,GAAG,CACpC,GAAIP,EAAqBN,GAAS,MAAO,CAAA,EACzC,MAAMG,EAAMD,EAASQ,EAAME,KACtBZ,EAAOG,IAAQM,IAAOT,EAAOG,GAAO,IAAIM,GAE3CT,EADEc,OAAOC,UAAUC,eAAeC,KAAKjB,EAAQG,GACtCH,EAAOG,GAEP,CAAA,IAETS,CACJ,CACA,OAAIN,EAAqBN,GAAgB,CAAA,EAClC,CACLT,IAAKS,EACLkB,EAAGhB,EAASQ,EAAME,MAGhBO,EAAU,CAACnB,EAAQQ,EAAMY,KAC7B,MAAM7B,IACJA,EAAA2B,EACAA,GACEX,EAAcP,EAAQQ,EAAMM,QAChC,QAAY,IAARvB,GAAqC,IAAhBiB,EAAKK,OAE5B,YADAtB,EAAI2B,GAAKE,GAGX,IAAIC,EAAIb,EAAKA,EAAKK,OAAS,GACvBS,EAAId,EAAKe,MAAM,EAAGf,EAAKK,OAAS,GAChCW,EAAOjB,EAAcP,EAAQsB,EAAGR,QACpC,UAAoB,IAAbU,EAAKjC,KAAqB+B,EAAET,QACjCQ,EAAI,GAAGC,EAAEA,EAAET,OAAS,MAAMQ,IAC1BC,EAAIA,EAAEC,MAAM,EAAGD,EAAET,OAAS,GAC1BW,EAAOjB,EAAcP,EAAQsB,EAAGR,QAC5BU,GAAMjC,UAA6C,IAA/BiC,EAAKjC,IAAI,GAAGiC,EAAKN,KAAKG,OAC5CG,EAAKjC,SAAM,GAGfiC,EAAKjC,IAAI,GAAGiC,EAAKN,KAAKG,KAAOD,GAUzBK,EAAU,CAACzB,EAAQQ,KACvB,MAAMjB,IACJA,EAAA2B,EACAA,GACEX,EAAcP,EAAQQ,GAC1B,GAAKjB,GACAuB,OAAOC,UAAUC,eAAeC,KAAK1B,EAAK2B,GAC/C,OAAO3B,EAAI2B,IASPQ,EAAa,CAACC,EAAQC,EAAQC,KAClC,IAAA,MAAWC,KAAQF,EACJ,cAATE,GAAiC,gBAATA,IACtBA,KAAQH,EACNrC,EAASqC,EAAOG,KAAUH,EAAOG,aAAiBC,QAAUzC,EAASsC,EAAOE,KAAUF,EAAOE,aAAiBC,OAC5GF,IAAWF,EAAOG,GAAQF,EAAOE,IAErCJ,EAAWC,EAAOG,GAAOF,EAAOE,GAAOD,GAGzCF,EAAOG,GAAQF,EAAOE,IAI5B,OAAOH,GAEHK,EAAcC,GAAOA,EAAI5B,QAAQ,sCAAuC,QAC9E,IAAI6B,EAAa,CACf,IAAK,QACL,IAAK,OACL,IAAK,OACL,IAAK,SACL,IAAK,QACL,IAAK,UAEP,MAAMC,EAASC,GACT9C,EAAS8C,GACJA,EAAK/B,QAAQ,aAAcgC,GAAKH,EAAWG,IAE7CD,EAsBT,MAAME,EAAQ,CAAC,IAAK,IAAK,IAAK,IAAK,KAC7BC,EAAiC,IArBvC,MACE,WAAAC,CAAYC,GACVC,KAAKD,SAAWA,EAChBC,KAAKC,cAAgBC,IACrBF,KAAKG,YAAc,EACrB,CACA,SAAAC,CAAUC,GACR,MAAMC,EAAkBN,KAAKC,UAAUM,IAAIF,GAC3C,QAAwB,IAApBC,EACF,OAAOA,EAET,MAAME,EAAY,IAAIC,OAAOJ,GAM7B,OALIL,KAAKG,YAAYhC,SAAW6B,KAAKD,UACnCC,KAAKC,UAAUS,OAAOV,KAAKG,YAAYQ,SAEzCX,KAAKC,UAAUW,IAAIP,EAASG,GAC5BR,KAAKG,YAAYU,KAAKR,GACfG,CACT,GAGqD,IAgBjDM,EAAW,CAACjE,EAAKiB,EAAMiD,EAAe,OAC1C,IAAKlE,EAAK,OACV,GAAIA,EAAIiB,GAAO,CACb,IAAKM,OAAOC,UAAUC,eAAeC,KAAK1B,EAAKiB,GAAO,OACtD,OAAOjB,EAAIiB,EACb,CACA,MAAMkD,EAASlD,EAAKG,MAAM8C,GAC1B,IAAIE,EAAUpE,EACd,IAAA,IAASqE,EAAI,EAAGA,EAAIF,EAAO7C,QAAS,CAClC,IAAK8C,GAA8B,iBAAZA,EACrB,OAEF,IAAIE,EACAC,EAAW,GACf,IAAA,IAASC,EAAIH,EAAGG,EAAIL,EAAO7C,SAAUkD,EAMnC,GALIA,IAAMH,IACRE,GAAYL,GAEdK,GAAYJ,EAAOK,GACnBF,EAAOF,EAAQG,QACF,IAATD,EAAoB,CACtB,GAAI,CAAC,SAAU,SAAU,WAAWzD,eAAeyD,IAAQ,GAAME,EAAIL,EAAO7C,OAAS,EACnF,SAEF+C,GAAKG,EAAIH,EAAI,EACb,KACF,CAEFD,EAAUE,CACZ,CACA,OAAOF,GAEHK,EAAiBC,GAAQA,GAAM5D,QAAQ,IAAK,KAE5C6D,EAAgB,CACpBC,KAAM,SACN,GAAAC,CAAIC,GACF3B,KAAK4B,OAAO,MAAOD,EACrB,EACA,IAAAE,CAAKF,GACH3B,KAAK4B,OAAO,OAAQD,EACtB,EACA,KAAAG,CAAMH,GACJ3B,KAAK4B,OAAO,QAASD,EACvB,EACA,MAAAC,CAAOH,EAAME,GAEb,GAEF,MAAMI,EACJ,WAAAjC,CAAYkC,EAAgBC,EAAU,IACpCjC,KAAKkC,KAAKF,EAAgBC,EAC5B,CACA,IAAAC,CAAKF,EAAgBC,EAAU,IAC7BjC,KAAKmC,OAASF,EAAQE,QAAU,WAChCnC,KAAKoC,OAASJ,GAAkBR,EAChCxB,KAAKiC,QAAUA,EACfjC,KAAKqC,MAAQJ,EAAQI,KACvB,CACA,GAAAX,IAAOC,GACL,OAAO3B,KAAKsC,QAAQX,EAAM,MAAO,IAAI,EACvC,CACA,IAAAE,IAAQF,GACN,OAAO3B,KAAKsC,QAAQX,EAAM,OAAQ,IAAI,EACxC,CACA,KAAAG,IAASH,GACP,OAAO3B,KAAKsC,QAAQX,EAAM,QAAS,GACrC,CACA,SAAAY,IAAaZ,GACX,OAAO3B,KAAKsC,QAAQX,EAAM,OAAQ,wBAAwB,EAC5D,CACA,OAAAW,CAAQX,EAAMa,EAAKL,EAAQM,GACzB,OAAIA,IAAczC,KAAKqC,MAAc,MACjCzF,EAAS+E,EAAK,QAAU,GAAK,GAAGQ,IAASnC,KAAKmC,UAAUR,EAAK,MAC1D3B,KAAKoC,OAAOI,GAAKb,GAC1B,CACA,MAAAe,CAAOC,GACL,OAAO,IAAIZ,EAAO/B,KAAKoC,OAAQ,CAE3BD,OAAQ,GAAGnC,KAAKmC,UAAUQ,QAEzB3C,KAAKiC,SAEZ,CACA,KAAAW,CAAMX,GAGJ,OAFAA,EAAUA,GAAWjC,KAAKiC,SAClBE,OAASF,EAAQE,QAAUnC,KAAKmC,OACjC,IAAIJ,EAAO/B,KAAKoC,OAAQH,EACjC,EAEF,IAAIY,EAAa,IAAId,EAErB,MAAMe,EACJ,WAAAhD,GACEE,KAAK+C,UAAY,CAAA,CACnB,CACA,EAAAC,CAAGC,EAAQC,GAMT,OALAD,EAAOhF,MAAM,KAAKkF,QAAQC,IACnBpD,KAAK+C,UAAUK,UAAaL,UAAUK,GAAS,IAAIlD,KACxD,MAAMmD,EAAerD,KAAK+C,UAAUK,GAAO7C,IAAI2C,IAAa,EAC5DlD,KAAK+C,UAAUK,GAAOxC,IAAIsC,EAAUG,EAAe,KAE9CrD,IACT,CACA,GAAAsD,CAAIF,EAAOF,GACJlD,KAAK+C,UAAUK,KACfF,EAILlD,KAAK+C,UAAUK,GAAO1C,OAAOwC,UAHpBlD,KAAK+C,UAAUK,GAI1B,CACA,IAAAG,CAAKH,KAAUzB,GACb,GAAI3B,KAAK+C,UAAUK,GAAQ,CACVI,MAAMC,KAAKzD,KAAK+C,UAAUK,GAAOM,WACzCP,QAAQ,EAAEQ,EAAUC,MACzB,IAAA,IAAS1C,EAAI,EAAGA,EAAI0C,EAAe1C,IACjCyC,KAAYhC,IAGlB,CACA,GAAI3B,KAAK+C,UAAU,KAAM,CACRS,MAAMC,KAAKzD,KAAK+C,UAAU,KAAKW,WACvCP,QAAQ,EAAEQ,EAAUC,MACzB,IAAA,IAAS1C,EAAI,EAAGA,EAAI0C,EAAe1C,IACjCyC,EAASE,MAAMF,EAAU,CAACP,KAAUzB,KAG1C,CACF,EAGF,MAAMmC,UAAsBhB,EAC1B,WAAAhD,CAAYJ,EAAMuC,EAAU,CAC1B8B,GAAI,CAAC,eACLC,UAAW,gBAEXC,QACAjE,KAAKN,KAAOA,GAAQ,CAAA,EACpBM,KAAKiC,QAAUA,OACmB,IAA9BjC,KAAKiC,QAAQlB,eACff,KAAKiC,QAAQlB,aAAe,UAEW,IAArCf,KAAKiC,QAAQiC,sBACflE,KAAKiC,QAAQiC,qBAAsB,EAEvC,CACA,aAAAC,CAAcJ,GACR/D,KAAKiC,QAAQ8B,GAAGrG,QAAQqG,GAAM,GAChC/D,KAAKiC,QAAQ8B,GAAGlD,KAAKkD,EAEzB,CACA,gBAAAK,CAAiBL,GACf,MAAMM,EAAQrE,KAAKiC,QAAQ8B,GAAGrG,QAAQqG,GAClCM,GAAQ,GACVrE,KAAKiC,QAAQ8B,GAAGO,OAAOD,EAAO,EAElC,CACA,WAAAE,CAAYC,EAAKT,EAAItG,EAAKwE,EAAU,CAAA,GAClC,MAAMlB,OAAwC,IAAzBkB,EAAQlB,aAA6BkB,EAAQlB,aAAef,KAAKiC,QAAQlB,aACxFmD,OAAsD,IAAhCjC,EAAQiC,oBAAoCjC,EAAQiC,oBAAsBlE,KAAKiC,QAAQiC,oBACnH,IAAIpG,EACA0G,EAAI9G,QAAQ,MAAO,EACrBI,EAAO0G,EAAIvG,MAAM,MAEjBH,EAAO,CAAC0G,EAAKT,GACTtG,IACE+F,MAAMiB,QAAQhH,GAChBK,EAAK+C,QAAQpD,GACJb,EAASa,IAAQsD,EAC1BjD,EAAK+C,QAAQpD,EAAIQ,MAAM8C,IAEvBjD,EAAK+C,KAAKpD,KAIhB,MAAMiH,EAAS3F,EAAQiB,KAAKN,KAAM5B,GAMlC,OALK4G,IAAWX,IAAOtG,GAAO+G,EAAI9G,QAAQ,MAAO,IAC/C8G,EAAM1G,EAAK,GACXiG,EAAKjG,EAAK,GACVL,EAAMK,EAAKe,MAAM,GAAG8F,KAAK,OAEvBD,GAAWR,GAAwBtH,EAASa,GACzCqD,EAASd,KAAKN,OAAO8E,KAAOT,GAAKtG,EAAKsD,GADgB2D,CAE/D,CACA,WAAAE,CAAYJ,EAAKT,EAAItG,EAAKoH,EAAO5C,EAAU,CACzC6C,QAAQ,IAER,MAAM/D,OAAwC,IAAzBkB,EAAQlB,aAA6BkB,EAAQlB,aAAef,KAAKiC,QAAQlB,aAC9F,IAAIjD,EAAO,CAAC0G,EAAKT,GACbtG,MAAYK,EAAKiH,OAAOhE,EAAetD,EAAIQ,MAAM8C,GAAgBtD,IACjE+G,EAAI9G,QAAQ,MAAO,IACrBI,EAAO0G,EAAIvG,MAAM,KACjB4G,EAAQd,EACRA,EAAKjG,EAAK,IAEZkC,KAAKmE,cAAcJ,GACnBtF,EAAQuB,KAAKN,KAAM5B,EAAM+G,GACpB5C,EAAQ6C,QAAQ9E,KAAKuD,KAAK,QAASiB,EAAKT,EAAItG,EAAKoH,EACxD,CACA,YAAAG,CAAaR,EAAKT,EAAIkB,EAAWhD,EAAU,CACzC6C,QAAQ,IAER,IAAA,MAAWI,KAAKD,GACVrI,EAASqI,EAAUC,KAAO1B,MAAMiB,QAAQQ,EAAUC,WAAUN,YAAYJ,EAAKT,EAAImB,EAAGD,EAAUC,GAAI,CACpGJ,QAAQ,IAGP7C,EAAQ6C,QAAQ9E,KAAKuD,KAAK,QAASiB,EAAKT,EAAIkB,EACnD,CACA,iBAAAE,CAAkBX,EAAKT,EAAIkB,EAAWG,EAAMjG,EAAW8C,EAAU,CAC/D6C,QAAQ,EACRO,UAAU,IAEV,IAAIvH,EAAO,CAAC0G,EAAKT,GACbS,EAAI9G,QAAQ,MAAO,IACrBI,EAAO0G,EAAIvG,MAAM,KACjBmH,EAAOH,EACPA,EAAYlB,EACZA,EAAKjG,EAAK,IAEZkC,KAAKmE,cAAcJ,GACnB,IAAIuB,EAAOvG,EAAQiB,KAAKN,KAAM5B,IAAS,CAAA,EAClCmE,EAAQoD,WAAUJ,EAAYM,KAAKC,MAAMD,KAAKE,UAAUR,KACzDG,EACFpG,EAAWsG,EAAML,EAAW9F,GAE5BmG,EAAO,IACFA,KACAL,GAGPxG,EAAQuB,KAAKN,KAAM5B,EAAMwH,GACpBrD,EAAQ6C,QAAQ9E,KAAKuD,KAAK,QAASiB,EAAKT,EAAIkB,EACnD,CACA,oBAAAS,CAAqBlB,EAAKT,GACpB/D,KAAK2F,kBAAkBnB,EAAKT,WACvB/D,KAAKN,KAAK8E,GAAKT,GAExB/D,KAAKoE,iBAAiBL,GACtB/D,KAAKuD,KAAK,UAAWiB,EAAKT,EAC5B,CACA,iBAAA4B,CAAkBnB,EAAKT,GACrB,YAAqC,IAA9B/D,KAAKuE,YAAYC,EAAKT,EAC/B,CACA,iBAAA6B,CAAkBpB,EAAKT,GAErB,OADKA,IAAIA,EAAK/D,KAAKiC,QAAQ+B,WACpBhE,KAAKuE,YAAYC,EAAKT,EAC/B,CACA,iBAAA8B,CAAkBrB,GAChB,OAAOxE,KAAKN,KAAK8E,EACnB,CACA,2BAAAsB,CAA4BtB,GAC1B,MAAM9E,EAAOM,KAAK6F,kBAAkBrB,GAEpC,SADU9E,GAAQtB,OAAO2H,KAAKrG,IAAS,IAC5BsG,QAAUtG,EAAKuG,IAAM7H,OAAO2H,KAAKrG,EAAKuG,IAAI9H,OAAS,EAChE,CACA,MAAA+H,GACE,OAAOlG,KAAKN,IACd,EAGF,IAAIyG,EAAgB,CAClBC,WAAY,CAAA,EACZ,gBAAAC,CAAiBC,GACftG,KAAKoG,WAAWE,EAAOC,MAAQD,CACjC,EACA,MAAAE,CAAOJ,EAAYvB,EAAOpH,EAAKwE,EAASwE,GAItC,OAHAL,EAAWjD,QAAQuD,IACjB7B,EAAQ7E,KAAKoG,WAAWM,IAAYC,QAAQ9B,EAAOpH,EAAKwE,EAASwE,IAAe5B,IAE3EA,CACT,GAGF,MAAM+B,EAAmB,CAAA,EACnBC,EAAuB9J,IAAQH,EAASG,IAAuB,kBAARA,GAAoC,iBAARA,EACzF,MAAM+J,UAAmBhE,EACvB,WAAAhD,CAAYiH,EAAU9E,EAAU,IAparB,IAAItC,EAAGqH,EAqahB/C,QAraatE,EAsayGoH,EAtatGC,EAsagHhH,KAA3H,CAAC,gBAAiB,gBAAiB,iBAAkB,eAAgB,mBAAoB,aAAc,SAra5GmD,QAAQ+B,IACJvF,EAAEuF,OAAMA,GAAKvF,EAAEuF,MAqanBlF,KAAKiC,QAAUA,OACmB,IAA9BjC,KAAKiC,QAAQlB,eACff,KAAKiC,QAAQlB,aAAe,KAE9Bf,KAAKoC,OAASS,EAAWH,OAAO,aAClC,CACA,cAAAuE,CAAezC,GACTA,SAAU0C,SAAW1C,EAC3B,CACA,MAAA2C,CAAO1J,EAAK2J,EAAI,CACdC,cAAe,CAAA,IAEf,MAAMC,EAAM,IACPF,GAEL,GAAW,MAAP3J,EAAa,OAAO,EACxB,MAAM8J,EAAWvH,KAAK7C,QAAQM,EAAK6J,GACnC,YAAyB,IAAlBC,GAAUxK,GACnB,CACA,cAAAyK,CAAe/J,EAAK6J,GAClB,IAAIG,OAAkC,IAApBH,EAAIG,YAA4BH,EAAIG,YAAczH,KAAKiC,QAAQwF,iBAC7D,IAAhBA,IAA2BA,EAAc,KAC7C,MAAM1G,OAAoC,IAArBuG,EAAIvG,aAA6BuG,EAAIvG,aAAef,KAAKiC,QAAQlB,aACtF,IAAI2G,EAAaJ,EAAIvD,IAAM/D,KAAKiC,QAAQ+B,WAAa,GACrD,MAAM2D,EAAuBF,GAAehK,EAAIC,QAAQ+J,IAAe,EACjEG,IAAwB5H,KAAKiC,QAAQ4F,yBAA4BP,EAAIvG,cAAiBf,KAAKiC,QAAQ6F,wBAA2BR,EAAIG,aAjUhH,EAAChK,EAAKgK,EAAa1G,KAC7C0G,EAAcA,GAAe,GAC7B1G,EAAeA,GAAgB,GAC/B,MAAMgH,EAAgBnI,EAAMoI,OAAOC,GAAKR,EAAY/J,QAAQuK,GAAK,GAAKlH,EAAarD,QAAQuK,GAAK,GAChG,GAA6B,IAAzBF,EAAc5J,OAAc,OAAO,EACvC,MAAM+J,EAAIrI,EAA+BO,UAAU,IAAI2H,EAAcI,IAAIF,GAAW,MAANA,EAAY,MAAQA,GAAGtD,KAAK,SAC1G,IAAIyD,GAAWF,EAAEG,KAAK5K,GACtB,IAAK2K,EAAS,CACZ,MAAME,EAAK7K,EAAIC,QAAQqD,GACnBuH,EAAK,IAAMJ,EAAEG,KAAK5K,EAAI8K,UAAU,EAAGD,MACrCF,GAAU,EAEd,CACA,OAAOA,GAoTmJI,CAAoB/K,EAAKgK,EAAa1G,IAC9L,GAAI4G,IAAyBC,EAAsB,CACjD,MAAM1C,EAAIzH,EAAIgL,MAAMzI,KAAK0I,aAAaC,eACtC,GAAIzD,GAAKA,EAAE/G,OAAS,EAClB,MAAO,CACLV,MACAiK,WAAY9K,EAAS8K,GAAc,CAACA,GAAcA,GAGtD,MAAMkB,EAAQnL,EAAIQ,MAAMwJ,IACpBA,IAAgB1G,GAAgB0G,IAAgB1G,GAAgBf,KAAKiC,QAAQ8B,GAAGrG,QAAQkL,EAAM,KAAM,KAAIlB,EAAakB,EAAMjI,SAC/HlD,EAAMmL,EAAMjE,KAAK5D,EACnB,CACA,MAAO,CACLtD,MACAiK,WAAY9K,EAAS8K,GAAc,CAACA,GAAcA,EAEtD,CACA,SAAAmB,CAAU9C,EAAMqB,EAAG0B,GACjB,IAAIxB,EAAmB,iBAANF,EAAiB,IAC7BA,GACDA,EAQJ,GAPmB,iBAARE,GAAoBtH,KAAKiC,QAAQ8G,mCAC1CzB,EAAMtH,KAAKiC,QAAQ8G,iCAAiCC,YAE/B,iBAAZ/G,UAAsBqF,EAAM,IAClCA,IAEAA,IAAKA,EAAM,CAAA,GACJ,MAARvB,EAAc,MAAO,GACpBvC,MAAMiB,QAAQsB,KAAOA,EAAO,CAAC1G,OAAO0G,KACzC,MAAMkD,OAAsC,IAAtB3B,EAAI2B,cAA8B3B,EAAI2B,cAAgBjJ,KAAKiC,QAAQgH,cACnFlI,OAAoC,IAArBuG,EAAIvG,aAA6BuG,EAAIvG,aAAef,KAAKiC,QAAQlB,cAChFtD,IACJA,EAAAiK,WACAA,GACE1H,KAAKwH,eAAezB,EAAKA,EAAK5H,OAAS,GAAImJ,GACzC4B,EAAYxB,EAAWA,EAAWvJ,OAAS,GACjD,IAAIsJ,OAAkC,IAApBH,EAAIG,YAA4BH,EAAIG,YAAczH,KAAKiC,QAAQwF,iBAC7D,IAAhBA,IAA2BA,EAAc,KAC7C,MAAMjD,EAAM8C,EAAI9C,KAAOxE,KAAKkH,SACtBiC,EAA0B7B,EAAI6B,yBAA2BnJ,KAAKiC,QAAQkH,wBAC5E,GAA2B,WAAvB3E,GAAK4E,cACP,OAAID,EACEF,EACK,CACLlM,IAAK,GAAGmM,IAAYzB,IAAchK,IAClC4L,QAAS5L,EACT6L,aAAc7L,EACd8L,QAAS/E,EACTgF,OAAQN,EACRO,WAAYzJ,KAAK0J,qBAAqBpC,IAGnC,GAAG4B,IAAYzB,IAAchK,IAElCwL,EACK,CACLlM,IAAKU,EACL4L,QAAS5L,EACT6L,aAAc7L,EACd8L,QAAS/E,EACTgF,OAAQN,EACRO,WAAYzJ,KAAK0J,qBAAqBpC,IAGnC7J,EAET,MAAM8J,EAAWvH,KAAK7C,QAAQ4I,EAAMuB,GACpC,IAAIvK,EAAMwK,GAAUxK,IACpB,MAAM4M,EAAapC,GAAU8B,SAAW5L,EAClCmM,EAAkBrC,GAAU+B,cAAgB7L,EAE5CoM,OAAgC,IAAnBvC,EAAIuC,WAA2BvC,EAAIuC,WAAa7J,KAAKiC,QAAQ4H,WAC1EC,GAA8B9J,KAAK+J,YAAc/J,KAAK+J,WAAWC,eACjEC,OAAoC,IAAd3C,EAAI4C,QAAwBtN,EAAS0K,EAAI4C,OAC/DC,EAAkBrD,EAAWqD,gBAAgB7C,GAC7C8C,EAAqBH,EAAsBjK,KAAKqK,eAAeC,UAAU9F,EAAK8C,EAAI4C,MAAO5C,GAAO,GAChGiD,EAAoCjD,EAAIkD,SAAWP,EAAsBjK,KAAKqK,eAAeC,UAAU9F,EAAK8C,EAAI4C,MAAO,CAC3HM,SAAS,IACN,GACCC,EAAwBR,IAAwB3C,EAAIkD,SAAyB,IAAdlD,EAAI4C,MACnEQ,EAAeD,GAAyBnD,EAAI,eAAetH,KAAKiC,QAAQ0I,wBAA0BrD,EAAI,eAAe8C,MAAyB9C,EAAI,eAAeiD,MAAwCjD,EAAIoD,aACnN,IAAIE,EAAgB7N,EAChB+M,IAA+B/M,GAAOoN,IACxCS,EAAgBF,GAElB,MAAMV,EAAiBnD,EAAqB+D,GACtCC,EAAUzM,OAAOC,UAAUyM,SAASjH,MAAM+G,GAChD,KAAId,GAA8Bc,GAAiBZ,GAjBlC,CAAC,kBAAmB,oBAAqB,mBAiBoBtM,QAAQmN,GAAW,IAAOjO,EAASiN,IAAerG,MAAMiB,QAAQmG,GA8C9I,GAAWd,GAA8BlN,EAASiN,IAAerG,MAAMiB,QAAQ1H,GAC7EA,EAAMA,EAAI4H,KAAKkF,GACX9M,IAAKA,EAAMiD,KAAK+K,kBAAkBhO,EAAKgJ,EAAMuB,EAAKwB,QACjD,CACL,IAAIkC,GAAc,EACd3B,GAAU,GACTrJ,KAAKiL,cAAclO,IAAQoN,IAC9Ba,GAAc,EACdjO,EAAM2N,GAEH1K,KAAKiL,cAAclO,KACtBsM,GAAU,EACVtM,EAAMU,GAER,MACMyN,GADiC5D,EAAI6D,gCAAkCnL,KAAKiC,QAAQkJ,iCAClC9B,OAAU,EAAYtM,EACxEqO,EAAgBjB,GAAmBO,IAAiB3N,GAAOiD,KAAKiC,QAAQmJ,cAC9E,GAAI/B,GAAW2B,GAAeI,EAAe,CAE3C,GADApL,KAAKoC,OAAOV,IAAI0J,EAAgB,YAAc,aAAc5G,EAAK0E,EAAWzL,EAAK2N,EAAgBV,EAAe3N,GAC5GgE,EAAc,CAChB,MAAMsK,EAAKrL,KAAK7C,QAAQM,EAAK,IACxB6J,EACHvG,cAAc,IAEZsK,GAAMA,EAAGtO,KAAKiD,KAAKoC,OAAOP,KAAK,kLACrC,CACA,IAAIyJ,EAAO,GACX,MAAMC,EAAevL,KAAKwL,cAAcC,iBAAiBzL,KAAKiC,QAAQyJ,YAAapE,EAAI9C,KAAOxE,KAAKkH,UACnG,GAAmC,aAA/BlH,KAAKiC,QAAQ0J,eAAgCJ,GAAgBA,EAAa,GAC5E,IAAA,IAASrK,EAAI,EAAGA,EAAIqK,EAAapN,OAAQ+C,IACvCoK,EAAKzK,KAAK0K,EAAarK,QAEe,QAA/BlB,KAAKiC,QAAQ0J,cACtBL,EAAOtL,KAAKwL,cAAcI,mBAAmBtE,EAAI9C,KAAOxE,KAAKkH,UAE7DoE,EAAKzK,KAAKyG,EAAI9C,KAAOxE,KAAKkH,UAE5B,MAAM2E,EAAO,CAACC,EAAGtN,EAAGuN,KAClB,MAAMC,EAAoB7B,GAAmB4B,IAAyBhP,EAAMgP,EAAuBb,EAC/FlL,KAAKiC,QAAQgK,kBACfjM,KAAKiC,QAAQgK,kBAAkBH,EAAG5C,EAAW1K,EAAGwN,EAAmBZ,EAAe9D,GACzEtH,KAAKkM,kBAAkBC,aAChCnM,KAAKkM,iBAAiBC,YAAYL,EAAG5C,EAAW1K,EAAGwN,EAAmBZ,EAAe9D,GAEvFtH,KAAKuD,KAAK,aAAcuI,EAAG5C,EAAW1K,EAAGzB,IAEvCiD,KAAKiC,QAAQkK,cACXnM,KAAKiC,QAAQmK,oBAAsBnC,EACrCqB,EAAKnI,QAAQ+D,IACX,MAAMmF,EAAWrM,KAAKqK,eAAeiC,YAAYpF,EAAUI,GACvDmD,GAAyBnD,EAAI,eAAetH,KAAKiC,QAAQ0I,wBAA0B0B,EAAS3O,QAAQ,GAAGsC,KAAKiC,QAAQ0I,uBAAyB,GAC/I0B,EAASxL,KAAK,GAAGb,KAAKiC,QAAQ0I,uBAEhC0B,EAASlJ,QAAQoJ,IACfV,EAAK,CAAC3E,GAAWzJ,EAAM8O,EAAQjF,EAAI,eAAeiF,MAAa7B,OAInEmB,EAAKP,EAAM7N,EAAKiN,GAGtB,CACA3N,EAAMiD,KAAK+K,kBAAkBhO,EAAKgJ,EAAMuB,EAAKC,EAAUuB,GACnDO,GAAWtM,IAAQU,GAAOuC,KAAKiC,QAAQuK,8BACzCzP,EAAM,GAAGmM,IAAYzB,IAAchK,MAEhC4L,GAAW2B,IAAgBhL,KAAKiC,QAAQwK,yBAC3C1P,EAAMiD,KAAKiC,QAAQwK,uBAAuBzM,KAAKiC,QAAQuK,4BAA8B,GAAGtD,IAAYzB,IAAchK,IAAQA,EAAKuN,EAAcjO,OAAM,EAAWuK,GAElK,KAnH+J,CAC7J,IAAKA,EAAIoF,gBAAkB1M,KAAKiC,QAAQyK,cAAe,CAChD1M,KAAKiC,QAAQ0K,uBAChB3M,KAAKoC,OAAOP,KAAK,mEAEnB,MAAMqG,EAAIlI,KAAKiC,QAAQ0K,sBAAwB3M,KAAKiC,QAAQ0K,sBAAsBhD,EAAYiB,EAAe,IACxGtD,EACHvD,GAAI2D,IACD,QAAQjK,MAAQuC,KAAKkH,mDAC1B,OAAI+B,GACF1B,EAASxK,IAAMmL,EACfX,EAASkC,WAAazJ,KAAK0J,qBAAqBpC,GACzCC,GAEFW,CACT,CACA,GAAInH,EAAc,CAChB,MAAM6L,EAAiBpJ,MAAMiB,QAAQmG,GAC/BiC,EAAOD,EAAiB,GAAK,CAAA,EAC7BE,EAAcF,EAAiBhD,EAAkBD,EACvD,IAAA,MAAWzE,KAAK0F,EACd,GAAIxM,OAAOC,UAAUC,eAAeC,KAAKqM,EAAe1F,GAAI,CAC1D,MAAM6H,EAAU,GAAGD,IAAc/L,IAAemE,IAE9C2H,EAAK3H,GADHiF,IAAoBpN,EACZiD,KAAK6I,UAAUkE,EAAS,IAC7BzF,EACHoD,aAAc7D,EAAqB6D,GAAgBA,EAAaxF,QAAK,EAEnE2E,YAAY,EACZ9F,GAAI2D,IAIE1H,KAAK6I,UAAUkE,EAAS,IAC7BzF,EAEDuC,YAAY,EACZ9F,GAAI2D,IAINmF,EAAK3H,KAAO6H,IAASF,EAAK3H,GAAK0F,EAAc1F,GACnD,CAEFnI,EAAM8P,CACR,CACF,CAsEA,OAAI5D,GACF1B,EAASxK,IAAMA,EACfwK,EAASkC,WAAazJ,KAAK0J,qBAAqBpC,GACzCC,GAEFxK,CACT,CACA,iBAAAgO,CAAkBhO,EAAKU,EAAK6J,EAAKC,EAAUuB,GACzC,GAAI9I,KAAK+J,YAAYvE,MACnBzI,EAAMiD,KAAK+J,WAAWvE,MAAMzI,EAAK,IAC5BiD,KAAKiC,QAAQoF,cAAc2F,oBAC3B1F,GACFA,EAAI9C,KAAOxE,KAAKkH,UAAYK,EAASgC,QAAShC,EAASiC,OAAQjC,EAAS8B,QAAS,CAClF9B,kBAEJ,IAAYD,EAAI2F,kBAAmB,CAC7B3F,EAAID,eAAerH,KAAK0I,aAAaxG,KAAK,IACzCoF,EAEDD,cAAe,IACVrH,KAAKiC,QAAQoF,iBACbC,EAAID,iBAIb,MAAM6F,EAAkBtQ,EAASG,UAAiD,IAAxCuK,GAAKD,eAAe6F,gBAAgC5F,EAAID,cAAc6F,gBAAkBlN,KAAKiC,QAAQoF,cAAc6F,iBAC7J,IAAIC,EACJ,GAAID,EAAiB,CACnB,MAAME,EAAKrQ,EAAI0L,MAAMzI,KAAK0I,aAAaC,eACvCwE,EAAUC,GAAMA,EAAGjP,MACrB,CACA,IAAIuB,EAAO4H,EAAI3J,UAAYf,EAAS0K,EAAI3J,SAAW2J,EAAI3J,QAAU2J,EAMjE,GALItH,KAAKiC,QAAQoF,cAAc2F,mBAAkBtN,EAAO,IACnDM,KAAKiC,QAAQoF,cAAc2F,oBAC3BtN,IAEL3C,EAAMiD,KAAK0I,aAAa2E,YAAYtQ,EAAK2C,EAAM4H,EAAI9C,KAAOxE,KAAKkH,UAAYK,EAASgC,QAASjC,GACzF4F,EAAiB,CACnB,MAAMI,EAAKvQ,EAAI0L,MAAMzI,KAAK0I,aAAaC,eAEnCwE,GADYG,GAAMA,EAAGnP,UACFmJ,EAAIiG,MAAO,EACpC,EACKjG,EAAI9C,KAAO+C,GAAYA,EAASxK,MAAKuK,EAAI9C,IAAMxE,KAAKkH,UAAYK,EAASgC,UAC7D,IAAbjC,EAAIiG,OAAgBxQ,EAAMiD,KAAK0I,aAAa6E,KAAKxQ,EAAK,IAAI4E,IACxDmH,IAAU,KAAOnH,EAAK,IAAO2F,EAAIkG,QAI9BxN,KAAK6I,aAAalH,EAAMlE,IAH7BuC,KAAKoC,OAAOP,KAAK,6CAA6CF,EAAK,cAAclE,EAAI,MAC9E,MAGR6J,IACCA,EAAID,eAAerH,KAAK0I,aAAa+E,OAC3C,CACA,MAAMC,EAAcpG,EAAIoG,aAAe1N,KAAKiC,QAAQyL,YAC9CC,EAAqB/Q,EAAS8Q,GAAe,CAACA,GAAeA,EAUnE,OATW,MAAP3Q,GAAe4Q,GAAoBxP,SAAqC,IAA3BmJ,EAAIsG,qBACnD7Q,EAAMoJ,EAAcK,OAAOmH,EAAoB5Q,EAAKU,EAAKuC,KAAKiC,SAAWjC,KAAKiC,QAAQ4L,wBAA0B,CAC9GC,aAAc,IACTvG,EACHkC,WAAYzJ,KAAK0J,qBAAqBpC,OAErCA,GACDA,EAAKtH,OAEJjD,CACT,CACA,OAAAI,CAAQ4I,EAAMuB,EAAM,IAClB,IAAIyG,EACA1E,EACAC,EACAC,EACAC,EAgEJ,OA/DI5M,EAASmJ,KAAOA,EAAO,CAACA,IAC5BA,EAAK5C,QAAQ3E,IACX,GAAIwB,KAAKiL,cAAc8C,GAAQ,OAC/B,MAAMC,EAAYhO,KAAKwH,eAAehJ,EAAG8I,GACnC7J,EAAMuQ,EAAUvQ,IACtB4L,EAAU5L,EACV,IAAIiK,EAAasG,EAAUtG,WACvB1H,KAAKiC,QAAQgM,aAAYvG,EAAaA,EAAW3C,OAAO/E,KAAKiC,QAAQgM,aACzE,MAAMhE,OAAoC,IAAd3C,EAAI4C,QAAwBtN,EAAS0K,EAAI4C,OAC/DO,EAAwBR,IAAwB3C,EAAIkD,SAAyB,IAAdlD,EAAI4C,MACnEgE,OAAuC,IAAhB5G,EAAIkG,UAA0B5Q,EAAS0K,EAAIkG,UAAmC,iBAAhBlG,EAAIkG,UAAyC,KAAhBlG,EAAIkG,QACtHW,EAAQ7G,EAAIgE,KAAOhE,EAAIgE,KAAOtL,KAAKwL,cAAcI,mBAAmBtE,EAAI9C,KAAOxE,KAAKkH,SAAUI,EAAIoE,aACxGhE,EAAWvE,QAAQY,IACb/D,KAAKiL,cAAc8C,KACvBvE,EAASzF,EACJ6C,EAAiB,GAAGuH,EAAM,MAAMpK,OAAS/D,KAAKoO,OAAOC,oBAAuBrO,KAAKoO,OAAOC,mBAAmB7E,KAC9G5C,EAAiB,GAAGuH,EAAM,MAAMpK,MAAQ,EACxC/D,KAAKoC,OAAOP,KAAK,QAAQwH,qBAA2B8E,EAAMxJ,KAAK,2CAA2C6E,wBAA8B,6NAE1I2E,EAAMhL,QAAQ5B,IACZ,GAAIvB,KAAKiL,cAAc8C,GAAQ,OAC/BxE,EAAUhI,EACV,MAAM+M,EAAY,CAAC7Q,GACnB,GAAIuC,KAAK+J,YAAYwE,cACnBvO,KAAK+J,WAAWwE,cAAcD,EAAW7Q,EAAK8D,EAAMwC,EAAIuD,OACnD,CACL,IAAIkH,EACAvE,MAAoCjK,KAAKqK,eAAeC,UAAU/I,EAAM+F,EAAI4C,MAAO5C,IACvF,MAAMmH,EAAa,GAAGzO,KAAKiC,QAAQ0I,sBAC7B+D,EAAgB,GAAG1O,KAAKiC,QAAQ0I,yBAAyB3K,KAAKiC,QAAQ0I,kBAU5E,GATIV,IACE3C,EAAIkD,SAAmD,IAAxCgE,EAAa9Q,QAAQgR,IACtCJ,EAAUzN,KAAKpD,EAAM+Q,EAAa7Q,QAAQ+Q,EAAe1O,KAAKiC,QAAQ0I,kBAExE2D,EAAUzN,KAAKpD,EAAM+Q,GACjB/D,GACF6D,EAAUzN,KAAKpD,EAAMgR,IAGrBP,EAAsB,CACxB,MAAMS,EAAa,GAAGlR,IAAMuC,KAAKiC,QAAQ2M,kBAAoB,MAAMtH,EAAIkG,UACvEc,EAAUzN,KAAK8N,GACX1E,IACE3C,EAAIkD,SAAmD,IAAxCgE,EAAa9Q,QAAQgR,IACtCJ,EAAUzN,KAAK8N,EAAaH,EAAa7Q,QAAQ+Q,EAAe1O,KAAKiC,QAAQ0I,kBAE/E2D,EAAUzN,KAAK8N,EAAaH,GACxB/D,GACF6D,EAAUzN,KAAK8N,EAAaF,GAGlC,CACF,CACA,IAAII,EACJ,KAAOA,EAAcP,EAAUQ,OACxB9O,KAAKiL,cAAc8C,KACtBzE,EAAeuF,EACfd,EAAQ/N,KAAKuE,YAAYhD,EAAMwC,EAAI8K,EAAavH,WAMnD,CACLvK,IAAKgR,EACL1E,UACAC,eACAC,UACAC,SAEJ,CACA,aAAAyB,CAAclO,GACZ,aAAe,IAARA,IAAwBiD,KAAKiC,QAAQ8M,YAAsB,OAARhS,IAAoBiD,KAAKiC,QAAQ+M,mBAA6B,KAARjS,EAClH,CACA,WAAAwH,CAAYhD,EAAMwC,EAAItG,EAAKwE,EAAU,CAAA,GACnC,OAAIjC,KAAK+J,YAAYxF,YAAoBvE,KAAK+J,WAAWxF,YAAYhD,EAAMwC,EAAItG,EAAKwE,GAC7EjC,KAAKiP,cAAc1K,YAAYhD,EAAMwC,EAAItG,EAAKwE,EACvD,CACA,oBAAAyH,CAAqBzH,EAAU,IAC7B,MAAMiN,EAAc,CAAC,eAAgB,UAAW,UAAW,UAAW,MAAO,OAAQ,cAAe,KAAM,eAAgB,cAAe,gBAAiB,gBAAiB,aAAc,cAAe,iBAClMC,EAA2BlN,EAAQtE,UAAYf,EAASqF,EAAQtE,SACtE,IAAI+B,EAAOyP,EAA2BlN,EAAQtE,QAAUsE,EAUxD,GATIkN,QAAqD,IAAlBlN,EAAQiI,QAC7CxK,EAAKwK,MAAQjI,EAAQiI,OAEnBlK,KAAKiC,QAAQoF,cAAc2F,mBAC7BtN,EAAO,IACFM,KAAKiC,QAAQoF,cAAc2F,oBAC3BtN,KAGFyP,EAA0B,CAC7BzP,EAAO,IACFA,GAEL,IAAA,MAAWjC,KAAOyR,SACTxP,EAAKjC,EAEhB,CACA,OAAOiC,CACT,CACA,sBAAOyK,CAAgBlI,GACrB,MAAME,EAAS,eACf,IAAA,MAAWiN,KAAUnN,EACnB,GAAI7D,OAAOC,UAAUC,eAAeC,KAAK0D,EAASmN,IAAWjN,IAAWiN,EAAO7G,UAAU,EAAGpG,UAAkB,IAAcF,EAAQmN,GAClI,OAAO,EAGX,OAAO,CACT,EAGF,MAAMC,EACJ,WAAAvP,CAAYmC,GACVjC,KAAKiC,QAAUA,EACfjC,KAAKsP,cAAgBtP,KAAKiC,QAAQqN,gBAAiB,EACnDtP,KAAKoC,OAASS,EAAWH,OAAO,gBAClC,CACA,qBAAA6M,CAAsBhO,GAEpB,KADAA,EAAOD,EAAeC,KACTA,EAAK7D,QAAQ,KAAO,EAAG,OAAO,KAC3C,MAAMkB,EAAI2C,EAAKtD,MAAM,KACrB,OAAiB,IAAbW,EAAET,OAAqB,MAC3BS,EAAEkQ,MACoC,MAAlClQ,EAAEA,EAAET,OAAS,GAAGiL,cAA8B,KAC3CpJ,KAAKwP,mBAAmB5Q,EAAE+F,KAAK,MACxC,CACA,uBAAA8K,CAAwBlO,GAEtB,KADAA,EAAOD,EAAeC,KACTA,EAAK7D,QAAQ,KAAO,EAAG,OAAO6D,EAC3C,MAAM3C,EAAI2C,EAAKtD,MAAM,KACrB,OAAO+B,KAAKwP,mBAAmB5Q,EAAE,GACnC,CACA,kBAAA4Q,CAAmBjO,GACjB,GAAI3E,EAAS2E,IAASA,EAAK7D,QAAQ,MAAO,EAAI,CAC5C,IAAIgS,EACJ,IACEA,EAAgBC,KAAKC,oBAAoBrO,GAAM,EACjD,OAAS5C,GAAI,CAIb,OAHI+Q,GAAiB1P,KAAKiC,QAAQ4N,eAChCH,EAAgBA,EAActG,eAE5BsG,IACA1P,KAAKiC,QAAQ4N,aACRtO,EAAK6H,cAEP7H,EACT,CACA,OAAOvB,KAAKiC,QAAQ6N,WAAa9P,KAAKiC,QAAQ4N,aAAetO,EAAK6H,cAAgB7H,CACpF,CACA,eAAAwO,CAAgBxO,GAId,OAH0B,iBAAtBvB,KAAKiC,QAAQ+N,MAA2BhQ,KAAKiC,QAAQgO,4BACvD1O,EAAOvB,KAAKyP,wBAAwBlO,KAE9BvB,KAAKsP,gBAAkBtP,KAAKsP,cAAcnR,QAAU6B,KAAKsP,cAAc5R,QAAQ6D,IAAQ,CACjG,CACA,qBAAA2O,CAAsB/B,GACpB,IAAKA,EAAO,OAAO,KACnB,IAAIJ,EAsBJ,OArBAI,EAAMhL,QAAQ5B,IACZ,GAAIwM,EAAO,OACX,MAAMoC,EAAanQ,KAAKwP,mBAAmBjO,GACtCvB,KAAKiC,QAAQqN,gBAAiBtP,KAAK+P,gBAAgBI,KAAapC,EAAQoC,MAE1EpC,GAAS/N,KAAKiC,QAAQqN,eACzBnB,EAAMhL,QAAQ5B,IACZ,GAAIwM,EAAO,OACX,MAAMqC,EAAYpQ,KAAKuP,sBAAsBhO,GAC7C,GAAIvB,KAAK+P,gBAAgBK,UAAmBrC,EAAQqC,EACpD,MAAMC,EAAUrQ,KAAKyP,wBAAwBlO,GAC7C,GAAIvB,KAAK+P,gBAAgBM,UAAiBtC,EAAQsC,EAClDtC,EAAQ/N,KAAKiC,QAAQqN,cAActJ,KAAKsK,GAClCA,IAAiBD,EAAgBC,EACjCA,EAAa5S,QAAQ,KAAO,GAAK2S,EAAQ3S,QAAQ,KAAO,OAA5D,EACI4S,EAAa5S,QAAQ,KAAO,GAAK2S,EAAQ3S,QAAQ,KAAO,GAAK4S,EAAa/H,UAAU,EAAG+H,EAAa5S,QAAQ,QAAU2S,GACpF,IAAlCC,EAAa5S,QAAQ2S,IAAkBA,EAAQlS,OAAS,EAD8EmS,OAC1I,KAIDvC,IAAOA,EAAQ/N,KAAKyL,iBAAiBzL,KAAKiC,QAAQyJ,aAAa,IAC7DqC,CACT,CACA,gBAAAtC,CAAiB8E,EAAWhP,GAC1B,IAAKgP,EAAW,MAAO,GAGvB,GAFyB,mBAAdA,IAA0BA,EAAYA,EAAUhP,IACvD3E,EAAS2T,KAAYA,EAAY,CAACA,IAClC/M,MAAMiB,QAAQ8L,GAAY,OAAOA,EACrC,IAAKhP,EAAM,OAAOgP,EAAUC,SAAW,GACvC,IAAIzC,EAAQwC,EAAUhP,GAKtB,OAJKwM,IAAOA,EAAQwC,EAAUvQ,KAAKuP,sBAAsBhO,KACpDwM,IAAOA,EAAQwC,EAAUvQ,KAAKwP,mBAAmBjO,KACjDwM,IAAOA,EAAQwC,EAAUvQ,KAAKyP,wBAAwBlO,KACtDwM,IAAOA,EAAQwC,EAAUC,SACvBzC,GAAS,EAClB,CACA,kBAAAnC,CAAmBrK,EAAMkP,GACvB,MAAMC,EAAgB1Q,KAAKyL,mBAAmC,IAAjBgF,EAAyB,GAAKA,IAAiBzQ,KAAKiC,QAAQyJ,aAAe,GAAInK,GACtH4M,EAAQ,GACRwC,EAAU1I,IACTA,IACDjI,KAAK+P,gBAAgB9H,GACvBkG,EAAMtN,KAAKoH,GAEXjI,KAAKoC,OAAOP,KAAK,uDAAuDoG,OAa5E,OAVIrL,EAAS2E,KAAUA,EAAK7D,QAAQ,MAAO,GAAM6D,EAAK7D,QAAQ,MAAO,IACzC,iBAAtBsC,KAAKiC,QAAQ+N,QAAiChQ,KAAKwP,mBAAmBjO,IAChD,iBAAtBvB,KAAKiC,QAAQ+N,MAAiD,gBAAtBhQ,KAAKiC,QAAQ+N,MAAwBW,EAAQ3Q,KAAKuP,sBAAsBhO,IAC1F,gBAAtBvB,KAAKiC,QAAQ+N,QAAgChQ,KAAKyP,wBAAwBlO,KACrE3E,EAAS2E,IAClBoP,EAAQ3Q,KAAKwP,mBAAmBjO,IAElCmP,EAAcvN,QAAQyN,IAChBzC,EAAMzQ,QAAQkT,GAAM,GAAGD,EAAQ3Q,KAAKwP,mBAAmBoB,MAEtDzC,CACT,EAGF,MAAM0C,EAAgB,CACpBC,KAAM,EACNC,IAAK,EACLC,IAAK,EACLC,IAAK,EACLC,KAAM,EACNC,MAAO,GAEHC,EAAY,CAChBC,OAAQnH,GAAmB,IAAVA,EAAc,MAAQ,QACvCoH,gBAAiB,KAAA,CACfC,iBAAkB,CAAC,MAAO,YAG9B,MAAMC,EACJ,WAAA1R,CAAY0L,EAAevJ,EAAU,IACnCjC,KAAKwL,cAAgBA,EACrBxL,KAAKiC,QAAUA,EACfjC,KAAKoC,OAASS,EAAWH,OAAO,kBAChC1C,KAAKyR,iBAAmB,CAAA,CAC1B,CACA,OAAAC,CAAQlN,EAAK3H,GACXmD,KAAK2R,MAAMnN,GAAO3H,CACpB,CACA,UAAA+U,GACE5R,KAAKyR,iBAAmB,CAAA,CAC1B,CACA,OAAAI,CAAQtQ,EAAMU,EAAU,IACtB,MAAM6P,EAAcxQ,EAAwB,QAATC,EAAiB,KAAOA,GACrDE,EAAOQ,EAAQuI,QAAU,UAAY,WACrCuH,EAAWxM,KAAKE,UAAU,CAC9BqM,cACArQ,SAEF,GAAIsQ,KAAY/R,KAAKyR,iBACnB,OAAOzR,KAAKyR,iBAAiBM,GAE/B,IAAIC,EACJ,IACEA,EAAO,IAAIrC,KAAKsC,YAAYH,EAAa,CACvCrQ,QAEJ,OAASyQ,GACP,IAAKvC,KAEH,OADA3P,KAAKoC,OAAON,MAAM,iDACXsP,EAET,IAAK7P,EAAKkH,MAAM,OAAQ,OAAO2I,EAC/B,MAAMe,EAAUnS,KAAKwL,cAAciE,wBAAwBlO,GAC3DyQ,EAAOhS,KAAK6R,QAAQM,EAASlQ,EAC/B,CAEA,OADAjC,KAAKyR,iBAAiBM,GAAYC,EAC3BA,CACT,CACA,WAAAI,CAAY7Q,EAAMU,EAAU,IAC1B,IAAI+P,EAAOhS,KAAK6R,QAAQtQ,EAAMU,GAE9B,OADK+P,IAAMA,EAAOhS,KAAK6R,QAAQ,MAAO5P,IAC/B+P,GAAMV,kBAAkBC,iBAAiBpT,OAAS,CAC3D,CACA,mBAAAkU,CAAoB9Q,EAAM9D,EAAKwE,EAAU,CAAA,GACvC,OAAOjC,KAAKsM,YAAY/K,EAAMU,GAASkG,IAAIoE,GAAU,GAAG9O,IAAM8O,IAChE,CACA,WAAAD,CAAY/K,EAAMU,EAAU,IAC1B,IAAI+P,EAAOhS,KAAK6R,QAAQtQ,EAAMU,GAE9B,OADK+P,IAAMA,EAAOhS,KAAK6R,QAAQ,MAAO5P,IACjC+P,EACEA,EAAKV,kBAAkBC,iBAAiBe,KAAK,CAACC,EAAiBC,IAAoB3B,EAAc0B,GAAmB1B,EAAc2B,IAAkBrK,IAAIsK,GAAkB,GAAGzS,KAAKiC,QAAQyQ,UAAUzQ,EAAQuI,QAAU,UAAUxK,KAAKiC,QAAQyQ,UAAY,KAAKD,KADnP,EAEpB,CACA,SAAAnI,CAAU/I,EAAM2I,EAAOjI,EAAU,CAAA,GAC/B,MAAM+P,EAAOhS,KAAK6R,QAAQtQ,EAAMU,GAChC,OAAI+P,EACK,GAAGhS,KAAKiC,QAAQyQ,UAAUzQ,EAAQuI,QAAU,UAAUxK,KAAKiC,QAAQyQ,UAAY,KAAKV,EAAKX,OAAOnH,MAEzGlK,KAAKoC,OAAOP,KAAK,6BAA6BN,KACvCvB,KAAKsK,UAAU,MAAOJ,EAAOjI,GACtC,EAGF,MAAM0Q,EAAuB,CAACjT,EAAMkT,EAAanV,EAAKsD,EAAe,IAAKmD,GAAsB,KAC9F,IAAIpG,EA57BsB,EAAC4B,EAAMkT,EAAanV,KAC9C,MAAMoH,EAAQ9F,EAAQW,EAAMjC,GAC5B,YAAc,IAAVoH,EACKA,EAEF9F,EAAQ6T,EAAanV,IAu7BjBoV,CAAoBnT,EAAMkT,EAAanV,GAKlD,OAJKK,GAAQoG,GAAuBtH,EAASa,KAC3CK,EAAOgD,EAASpB,EAAMjC,EAAKsD,QACd,IAATjD,IAAoBA,EAAOgD,EAAS8R,EAAanV,EAAKsD,KAErDjD,GAEHgV,EAAYC,GAAOA,EAAIpV,QAAQ,MAAO,QAC5C,MAAMqV,EACJ,WAAAlT,CAAYmC,EAAU,IACpBjC,KAAKoC,OAASS,EAAWH,OAAO,gBAChC1C,KAAKiC,QAAUA,EACfjC,KAAKiT,OAAShR,GAASoF,eAAe4L,QAAA,CAAWpO,GAASA,GAC1D7E,KAAKkC,KAAKD,EACZ,CACA,IAAAC,CAAKD,EAAU,IACRA,EAAQoF,gBAAepF,EAAQoF,cAAgB,CAClD6L,aAAa,IAEf,MACEzT,OAAQ0T,EAAAD,YACRA,EAAAE,oBACAA,EAAAjR,OACAA,EAAAkR,cACAA,EAAA9G,OACAA,EAAA+G,cACAA,EAAAC,gBACAA,EAAAC,eACAA,EAAAC,eACAA,EAAAC,cACAA,EAAAC,qBACAA,EAAAC,cACAA,EAAAC,qBACAA,EAAAC,wBACAA,EAAAC,YACAA,EAAAC,aACAA,GACE/R,EAAQoF,cACZrH,KAAKP,YAAsB,IAAb0T,EAAyBA,EAAW1T,EAClDO,KAAKkT,iBAA8B,IAAhBA,GAA4BA,EAC/ClT,KAAKoT,yBAA8C,IAAxBA,GAAoCA,EAC/DpT,KAAKmC,OAASA,EAAS7C,EAAY6C,GAAUkR,GAAiB,KAC9DrT,KAAKuM,OAASA,EAASjN,EAAYiN,GAAU+G,GAAiB,KAC9DtT,KAAKuT,gBAAkBA,GAAmB,IAC1CvT,KAAKyT,eAAiBD,EAAiB,GAAKC,GAAkB,IAC9DzT,KAAKwT,eAAiBxT,KAAKyT,eAAiB,GAAKD,GAAkB,GACnExT,KAAK0T,cAAgBA,EAAgBpU,EAAYoU,GAAiBC,GAAwBrU,EAAY,OACtGU,KAAK4T,cAAgBA,EAAgBtU,EAAYsU,GAAiBC,GAAwBvU,EAAY,KACtGU,KAAK8T,wBAA0BA,GAA2B,IAC1D9T,KAAK+T,YAAcA,GAAe,IAClC/T,KAAKgU,kBAAgC,IAAjBA,GAA6BA,EACjDhU,KAAKiU,aACP,CACA,KAAAxG,GACMzN,KAAKiC,SAASjC,KAAKkC,KAAKlC,KAAKiC,QACnC,CACA,WAAAgS,GACE,MAAMC,EAAmB,CAACC,EAAgB9T,IACpC8T,GAAgBjV,SAAWmB,GAC7B8T,EAAeC,UAAY,EACpBD,GAEF,IAAI1T,OAAOJ,EAAS,KAE7BL,KAAKqU,OAASH,EAAiBlU,KAAKqU,OAAQ,GAAGrU,KAAKmC,cAAcnC,KAAKuM,UACvEvM,KAAKsU,eAAiBJ,EAAiBlU,KAAKsU,eAAgB,GAAGtU,KAAKmC,SAASnC,KAAKyT,sBAAsBzT,KAAKwT,iBAAiBxT,KAAKuM,UACnIvM,KAAK2I,cAAgBuL,EAAiBlU,KAAK2I,cAAe,GAAG3I,KAAK0T,iFAAiF1T,KAAK4T,gBAC1J,CACA,WAAAvG,CAAY9N,EAAKG,EAAM8E,EAAKvC,GAC1B,IAAIwG,EACA5D,EACA0P,EACJ,MAAM3B,EAAc5S,KAAKiC,SAAWjC,KAAKiC,QAAQoF,eAAiBrH,KAAKiC,QAAQoF,cAAc2F,kBAAoB,CAAA,EAC3GwH,EAAe/W,IACnB,GAAIA,EAAIC,QAAQsC,KAAKuT,iBAAmB,EAAG,CACzC,MAAMzV,EAAO6U,EAAqBjT,EAAMkT,EAAanV,EAAKuC,KAAKiC,QAAQlB,aAAcf,KAAKiC,QAAQiC,qBAClG,OAAOlE,KAAKgU,aAAehU,KAAKiT,OAAOnV,OAAM,EAAW0G,EAAK,IACxDvC,KACAvC,EACH+U,iBAAkBhX,IACfK,CACP,CACA,MAAMc,EAAInB,EAAIQ,MAAM+B,KAAKuT,iBACnB/U,EAAII,EAAE+B,QAAQ+T,OACdC,EAAI/V,EAAE+F,KAAK3E,KAAKuT,iBAAiBmB,OACvC,OAAO1U,KAAKiT,OAAON,EAAqBjT,EAAMkT,EAAapU,EAAGwB,KAAKiC,QAAQlB,aAAcf,KAAKiC,QAAQiC,qBAAsByQ,EAAGnQ,EAAK,IAC/HvC,KACAvC,EACH+U,iBAAkBjW,KAGtBwB,KAAKiU,cACL,MAAMW,EAA8B3S,GAAS2S,6BAA+B5U,KAAKiC,QAAQ2S,4BACnF1H,OAA8D,IAA5CjL,GAASoF,eAAe6F,gBAAgCjL,EAAQoF,cAAc6F,gBAAkBlN,KAAKiC,QAAQoF,cAAc6F,gBA2CnJ,MA1Cc,CAAC,CACb2H,MAAO7U,KAAKsU,eACZQ,UAAW/B,GAAOD,EAAUC,IAC3B,CACD8B,MAAO7U,KAAKqU,OACZS,UAAW/B,GAAO/S,KAAKkT,YAAcJ,EAAU9S,KAAKP,OAAOsT,IAAQD,EAAUC,KAEzE5P,QAAQ4R,IAEZ,IADAR,EAAW,EACJ9L,EAAQsM,EAAKF,MAAMG,KAAKzV,IAAM,CACnC,MAAM0V,EAAaxM,EAAM,GAAGiM,OAE5B,GADA7P,EAAQ2P,EAAaS,QACP,IAAVpQ,EACF,GAA2C,mBAAhC+P,EAA4C,CACrD,MAAMM,EAAON,EAA4BrV,EAAKkJ,EAAOxG,GACrD4C,EAAQjI,EAASsY,GAAQA,EAAO,EAClC,MAAA,GAAWjT,GAAW7D,OAAOC,UAAUC,eAAeC,KAAK0D,EAASgT,GAClEpQ,EAAQ,WACCqI,EAAiB,CAC1BrI,EAAQ4D,EAAM,GACd,QACF,CACEzI,KAAKoC,OAAOP,KAAK,8BAA8BoT,uBAAgC1V,KAC/EsF,EAAQ,EACV,MACUjI,EAASiI,IAAW7E,KAAKoT,sBACnCvO,EAAQxH,EAAWwH,IAErB,MAAMiQ,EAAYC,EAAKD,UAAUjQ,GASjC,GARAtF,EAAMA,EAAI5B,QAAQ8K,EAAM,GAAIqM,GACxB5H,GACF6H,EAAKF,MAAMT,WAAavP,EAAM1G,OAC9B4W,EAAKF,MAAMT,WAAa3L,EAAM,GAAGtK,QAEjC4W,EAAKF,MAAMT,UAAY,EAEzBG,IACIA,GAAYvU,KAAK+T,YACnB,KAEJ,IAEKxU,CACT,CACA,IAAAgO,CAAKhO,EAAKqR,EAAI3O,EAAU,CAAA,GACtB,IAAIwG,EACA5D,EACAsQ,EACJ,MAAMC,EAAmB,CAAC3X,EAAK4X,KAC7B,MAAMC,EAAMtV,KAAK8T,wBACjB,GAAIrW,EAAIC,QAAQ4X,GAAO,EAAG,OAAO7X,EACjC,MAAMwK,EAAIxK,EAAIQ,MAAM,IAAIwC,OAAO,GAAG6U,WAClC,IAAIC,EAAgB,IAAItN,EAAE,KAC1BxK,EAAMwK,EAAE,GACRsN,EAAgBvV,KAAKqN,YAAYkI,EAAeJ,GAChD,MAAMK,EAAsBD,EAAc9M,MAAM,MAC1CgN,EAAsBF,EAAc9M,MAAM,QAC3C+M,GAAqBrX,QAAU,GAAK,GAAM,IAAMsX,GAAuBA,EAAoBtX,OAAS,GAAM,KAC7GoX,EAAgBA,EAAc5X,QAAQ,KAAM,MAE9C,IACEwX,EAAgB5P,KAAKC,MAAM+P,GACvBF,IAAkBF,EAAgB,IACjCE,KACAF,GAEP,OAASxW,GAEP,OADAqB,KAAKoC,OAAOP,KAAK,oDAAoDpE,IAAOkB,GACrE,GAAGlB,IAAM6X,IAAMC,GACxB,CAEA,OADIJ,EAAczK,cAAgByK,EAAczK,aAAahN,QAAQsC,KAAKmC,SAAU,UAAWgT,EAAczK,aACtGjN,GAET,KAAOgL,EAAQzI,KAAK2I,cAAcqM,KAAKzV,IAAM,CAC3C,IAAImW,EAAa,GACjBP,EAAgB,IACXlT,GAELkT,EAAgBA,EAAcxX,UAAYf,EAASuY,EAAcxX,SAAWwX,EAAcxX,QAAUwX,EACpGA,EAAcvH,oBAAqB,SAC5BuH,EAAczK,aACrB,MAAMiL,EAAc,OAAOtN,KAAKI,EAAM,IAAMA,EAAM,GAAGmN,YAAY,KAAO,EAAInN,EAAM,GAAG/K,QAAQsC,KAAKuT,iBAMlG,IALoB,IAAhBoC,IACFD,EAAajN,EAAM,GAAG5J,MAAM8W,GAAa1X,MAAM+B,KAAKuT,iBAAiBpL,IAAI0N,GAAQA,EAAKnB,QAAQ1M,OAAO8N,SACrGrN,EAAM,GAAKA,EAAM,GAAG5J,MAAM,EAAG8W,IAE/B9Q,EAAQ+L,EAAGwE,EAAiB7W,KAAKyB,KAAMyI,EAAM,GAAGiM,OAAQS,GAAgBA,GACpEtQ,GAAS4D,EAAM,KAAOlJ,IAAQ3C,EAASiI,GAAQ,OAAOA,EACrDjI,EAASiI,KAAQA,EAAQxH,EAAWwH,IACpCA,IACH7E,KAAKoC,OAAOP,KAAK,qBAAqB4G,EAAM,kBAAkBlJ,KAC9DsF,EAAQ,IAEN6Q,EAAWvX,SACb0G,EAAQ6Q,EAAWK,OAAO,CAAC9P,EAAG0O,IAAM3U,KAAKiT,OAAOhN,EAAG0O,EAAG1S,EAAQuC,IAAK,IAC9DvC,EACHwS,iBAAkBhM,EAAM,GAAGiM,SACzB7P,EAAM6P,SAEZnV,EAAMA,EAAI5B,QAAQ8K,EAAM,GAAI5D,GAC5B7E,KAAKqU,OAAOD,UAAY,CAC1B,CACA,OAAO7U,CACT,EAGF,MA+BMyW,EAAwBC,IAC5B,MAAMC,EAAQ,CAAA,EACd,MAAO,CAACjQ,EAAG6F,EAAG1E,KACZ,IAAI+O,EAAc/O,EACdA,GAAKA,EAAEqN,kBAAoBrN,EAAEgP,cAAgBhP,EAAEgP,aAAahP,EAAEqN,mBAAqBrN,EAAEA,EAAEqN,oBACzF0B,EAAc,IACTA,EACH,CAAC/O,EAAEqN,uBAAmB,IAG1B,MAAMhX,EAAMqO,EAAIvG,KAAKE,UAAU0Q,GAC/B,IAAIE,EAAMH,EAAMzY,GAKhB,OAJK4Y,IACHA,EAAMJ,EAAG3U,EAAewK,GAAI1E,GAC5B8O,EAAMzY,GAAO4Y,GAERA,EAAIpQ,KAGTqQ,EAA2BL,GAAM,CAAChQ,EAAG6F,EAAG1E,IAAM6O,EAAG3U,EAAewK,GAAI1E,EAAtB6O,CAAyBhQ,GAC7E,MAAMsQ,EACJ,WAAAzW,CAAYmC,EAAU,IACpBjC,KAAKoC,OAASS,EAAWH,OAAO,aAChC1C,KAAKiC,QAAUA,EACfjC,KAAKkC,KAAKD,EACZ,CACA,IAAAC,CAAK6E,EAAU9E,EAAU,CACvBoF,cAAe,CAAA,IAEfrH,KAAKuT,gBAAkBtR,EAAQoF,cAAckM,iBAAmB,IAChE,MAAMiD,EAAKvU,EAAQwU,oBAAsBT,EAAwBM,EACjEtW,KAAK0W,QAAU,CACbC,OAAQH,EAAG,CAAChS,EAAK8C,KACf,MAAMsP,EAAY,IAAIjH,KAAKkH,aAAarS,EAAK,IACxC8C,IAEL,OAAOyL,GAAO6D,EAAU3D,OAAOF,KAEjC+D,SAAUN,EAAG,CAAChS,EAAK8C,KACjB,MAAMsP,EAAY,IAAIjH,KAAKkH,aAAarS,EAAK,IACxC8C,EACHyP,MAAO,aAET,OAAOhE,GAAO6D,EAAU3D,OAAOF,KAEjCiE,SAAUR,EAAG,CAAChS,EAAK8C,KACjB,MAAMsP,EAAY,IAAIjH,KAAKsH,eAAezS,EAAK,IAC1C8C,IAEL,OAAOyL,GAAO6D,EAAU3D,OAAOF,KAEjCmE,aAAcV,EAAG,CAAChS,EAAK8C,KACrB,MAAMsP,EAAY,IAAIjH,KAAKwH,mBAAmB3S,EAAK,IAC9C8C,IAEL,UAAcsP,EAAU3D,OAAOF,EAAKzL,EAAI8P,OAAS,SAEnDC,KAAMb,EAAG,CAAChS,EAAK8C,KACb,MAAMsP,EAAY,IAAIjH,KAAK2H,WAAW9S,EAAK,IACtC8C,IAEL,OAAOyL,GAAO6D,EAAU3D,OAAOF,KAGrC,CACA,GAAAwE,CAAIhR,EAAMqK,GACR5Q,KAAK0W,QAAQnQ,EAAK6C,cAAcsL,QAAU9D,CAC5C,CACA,SAAA4G,CAAUjR,EAAMqK,GACd5Q,KAAK0W,QAAQnQ,EAAK6C,cAAcsL,QAAUsB,EAAsBpF,EAClE,CACA,MAAAqC,CAAOpO,EAAOoO,EAAQzO,EAAKvC,EAAU,CAAA,GACnC,MAAMyU,EAAUzD,EAAOhV,MAAM+B,KAAKuT,iBAClC,GAAImD,EAAQvY,OAAS,GAAKuY,EAAQ,GAAGhZ,QAAQ,KAAO,GAAKgZ,EAAQ,GAAGhZ,QAAQ,KAAO,GAAKgZ,EAAQ1Q,KAAK2O,GAAKA,EAAEjX,QAAQ,MAAO,GAAK,CAC9H,MAAM0W,EAAYsC,EAAQe,UAAU9C,GAAKA,EAAEjX,QAAQ,MAAO,GAC1DgZ,EAAQ,GAAK,CAACA,EAAQ,MAAOA,EAAQpS,OAAO,EAAG8P,IAAYzP,KAAK3E,KAAKuT,gBACvE,CAyBA,OAxBemD,EAAQX,OAAO,CAAC2B,EAAK/C,KAClC,MAAMgD,WACJA,EAAAC,cACAA,GA/Ge,CAAAC,IACrB,IAAIF,EAAaE,EAAUzO,cAAcsL,OACzC,MAAMkD,EAAgB,CAAA,EACtB,GAAIC,EAAUna,QAAQ,MAAO,EAAI,CAC/B,MAAMkB,EAAIiZ,EAAU5Z,MAAM,KAC1B0Z,EAAa/Y,EAAE,GAAGwK,cAAcsL,OAChC,MAAMoD,EAASlZ,EAAE,GAAG2J,UAAU,EAAG3J,EAAE,GAAGT,OAAS,GAC5B,aAAfwZ,GAA6BG,EAAOpa,QAAQ,KAAO,EAChDka,EAAcd,WAAUc,EAAcd,SAAWgB,EAAOpD,QACrC,iBAAfiD,GAAiCG,EAAOpa,QAAQ,KAAO,EAC3Dka,EAAcR,QAAOQ,EAAcR,MAAQU,EAAOpD,QAE1CoD,EAAO7Z,MAAM,KACrBkF,QAAQmE,IACX,GAAIA,EAAK,CACP,MAAO7J,KAAQsa,GAAQzQ,EAAIrJ,MAAM,KAC3B8U,EAAMgF,EAAKpT,KAAK,KAAK+P,OAAO/W,QAAQ,WAAY,IAChDqa,EAAava,EAAIiX,OAClBkD,EAAcI,KAAaJ,EAAcI,GAAcjF,GAChD,UAARA,IAAiB6E,EAAcI,IAAc,GACrC,SAARjF,IAAgB6E,EAAcI,IAAc,GAC3CC,MAAMlF,OAAoBiF,GAAcE,SAASnF,EAAK,IAC7D,GAGN,CACA,MAAO,CACL4E,aACAC,kBAoFMO,CAAexD,GACnB,GAAI3U,KAAK0W,QAAQiB,GAAa,CAC5B,IAAIS,EAAYV,EAChB,IACE,MAAMW,EAAapW,GAASmU,eAAenU,EAAQwS,mBAAqB,CAAA,EAClE3I,EAAIuM,EAAWC,QAAUD,EAAW7T,KAAOvC,EAAQqW,QAAUrW,EAAQuC,KAAOA,EAClF4T,EAAYpY,KAAK0W,QAAQiB,GAAYD,EAAK5L,EAAG,IACxC8L,KACA3V,KACAoW,GAEP,OAASvW,GACP9B,KAAKoC,OAAOP,KAAKC,EACnB,CACA,OAAOsW,CACT,CAGA,OAFEpY,KAAKoC,OAAOP,KAAK,oCAAoC8V,KAEhDD,GACN7S,EAEL,EASF,MAAM0T,UAAkBzV,EACtB,WAAAhD,CAAY0Y,EAASC,EAAO1R,EAAU9E,EAAU,CAAA,GAC9CgC,QACAjE,KAAKwY,QAAUA,EACfxY,KAAKyY,MAAQA,EACbzY,KAAK+G,SAAWA,EAChB/G,KAAKwL,cAAgBzE,EAASyE,cAC9BxL,KAAKiC,QAAUA,EACfjC,KAAKoC,OAASS,EAAWH,OAAO,oBAChC1C,KAAK0Y,aAAe,GACpB1Y,KAAK2Y,iBAAmB1W,EAAQ0W,kBAAoB,GACpD3Y,KAAK4Y,aAAe,EACpB5Y,KAAK6Y,WAAa5W,EAAQ4W,YAAc,EAAI5W,EAAQ4W,WAAa,EACjE7Y,KAAK8Y,aAAe7W,EAAQ6W,cAAgB,EAAI7W,EAAQ6W,aAAe,IACvE9Y,KAAK+Y,MAAQ,CAAA,EACb/Y,KAAKgZ,MAAQ,GACbhZ,KAAKwY,SAAStW,OAAO6E,EAAU9E,EAAQuW,QAASvW,EAClD,CACA,SAAAgX,CAAUC,EAAWxR,EAAYzF,EAASkX,GACxC,MAAMC,EAAS,CAAA,EACTC,EAAU,CAAA,EACVC,EAAkB,CAAA,EAClBC,EAAmB,CAAA,EA4BzB,OA3BAL,EAAU/V,QAAQqB,IAChB,IAAIgV,GAAmB,EACvB9R,EAAWvE,QAAQY,IACjB,MAAMwC,EAAO,GAAG/B,KAAOT,KAClB9B,EAAQwX,QAAUzZ,KAAKyY,MAAM9S,kBAAkBnB,EAAKT,GACvD/D,KAAK+Y,MAAMxS,GAAQ,EACVvG,KAAK+Y,MAAMxS,GAAQ,IAAmC,IAArBvG,KAAK+Y,MAAMxS,QAC/B,IAAlB8S,EAAQ9S,KAAqB8S,EAAQ9S,IAAQ,IAEjDvG,KAAK+Y,MAAMxS,GAAQ,EACnBiT,GAAmB,OACG,IAAlBH,EAAQ9S,KAAqB8S,EAAQ9S,IAAQ,QAC5B,IAAjB6S,EAAO7S,KAAqB6S,EAAO7S,IAAQ,QAClB,IAAzBgT,EAAiBxV,KAAmBwV,EAAiBxV,IAAM,OAG9DyV,IAAkBF,EAAgB9U,IAAO,MAE5CpG,OAAO2H,KAAKqT,GAAQjb,QAAUC,OAAO2H,KAAKsT,GAASlb,SACrD6B,KAAKgZ,MAAMnY,KAAK,CACdwY,UACAK,aAActb,OAAO2H,KAAKsT,GAASlb,OACnCwb,OAAQ,CAAA,EACRC,OAAQ,GACRT,aAGG,CACLC,OAAQhb,OAAO2H,KAAKqT,GACpBC,QAASjb,OAAO2H,KAAKsT,GACrBC,gBAAiBlb,OAAO2H,KAAKuT,GAC7BC,iBAAkBnb,OAAO2H,KAAKwT,GAElC,CACA,MAAAI,CAAOpT,EAAM2L,EAAKxS,GAChB,MAAMC,EAAI4G,EAAKtI,MAAM,KACfuG,EAAM7E,EAAE,GACRoE,EAAKpE,EAAE,GACTuS,GAAKlS,KAAKuD,KAAK,gBAAiBiB,EAAKT,EAAImO,IACxCA,GAAOxS,GACVM,KAAKyY,MAAMtT,kBAAkBX,EAAKT,EAAIrE,OAAM,OAAW,EAAW,CAChE2F,UAAU,IAGdrF,KAAK+Y,MAAMxS,GAAQ2L,GAAM,EAAK,EAC1BA,GAAOxS,IAAMM,KAAK+Y,MAAMxS,GAAQ,GACpC,MAAMoT,EAAS,CAAA,EACf3Z,KAAKgZ,MAAM7V,QAAQ0W,IAz2CN,EAACvc,EAAQQ,EAAMY,KAC9B,MAAM7B,IACJA,EAAA2B,EACAA,GACEX,EAAcP,EAAQQ,EAAMM,QAChCvB,EAAI2B,GAAK3B,EAAI2B,IAAM,GACnB3B,EAAI2B,GAAGqC,KAAKnC,IAo2CRob,CAASD,EAAEF,OAAQ,CAACnV,GAAMT,GA7EV,EAAC8V,EAAGtT,UACA,IAApBsT,EAAER,QAAQ9S,YACLsT,EAAER,QAAQ9S,GACjBsT,EAAEH,iBA2EAK,CAAcF,EAAGtT,GACb2L,GAAK2H,EAAED,OAAO/Y,KAAKqR,GACA,IAAnB2H,EAAEH,cAAuBG,EAAEG,OAC7B5b,OAAO2H,KAAK8T,EAAEF,QAAQxW,QAAQ2I,IACvB6N,EAAO7N,KAAI6N,EAAO7N,GAAK,CAAA,GAC5B,MAAMmO,EAAaJ,EAAEF,OAAO7N,GACxBmO,EAAW9b,QACb8b,EAAW9W,QAAQ+W,SACI,IAAjBP,EAAO7N,GAAGoO,KAAkBP,EAAO7N,GAAGoO,IAAK,OAIrDL,EAAEG,MAAO,EACLH,EAAED,OAAOzb,OACX0b,EAAEV,SAASU,EAAED,QAEbC,EAAEV,cAIRnZ,KAAKuD,KAAK,SAAUoW,GACpB3Z,KAAKgZ,MAAQhZ,KAAKgZ,MAAMhR,OAAO6R,IAAMA,EAAEG,KACzC,CACA,IAAAG,CAAK3V,EAAKT,EAAIqW,EAAQC,EAAQ,EAAGC,EAAOta,KAAK8Y,aAAcK,GACzD,IAAK3U,EAAIrG,cAAegb,EAAS,KAAM,CAAA,GACvC,GAAInZ,KAAK4Y,cAAgB5Y,KAAK2Y,iBAS5B,YARA3Y,KAAK0Y,aAAa7X,KAAK,CACrB2D,MACAT,KACAqW,SACAC,QACAC,OACAnB,aAIJnZ,KAAK4Y,eACL,MAAM2B,EAAW,CAACrI,EAAKxS,KAErB,GADAM,KAAK4Y,eACD5Y,KAAK0Y,aAAava,OAAS,EAAG,CAChC,MAAMgD,EAAOnB,KAAK0Y,aAAa/X,QAC/BX,KAAKma,KAAKhZ,EAAKqD,IAAKrD,EAAK4C,GAAI5C,EAAKiZ,OAAQjZ,EAAKkZ,MAAOlZ,EAAKmZ,KAAMnZ,EAAKgY,SACxE,CACIjH,GAAOxS,GAAQ2a,EAAQra,KAAK6Y,WAC9B2B,WAAW,KACTxa,KAAKma,KAAK5b,KAAKyB,KAAMwE,EAAKT,EAAIqW,EAAQC,EAAQ,EAAU,EAAPC,EAAUnB,IAC1DmB,GAGLnB,EAASjH,EAAKxS,IAEVkR,EAAK5Q,KAAKwY,QAAQ4B,GAAQK,KAAKza,KAAKwY,SAC1C,GAAkB,IAAd5H,EAAGzS,OAaP,OAAOyS,EAAGpM,EAAKT,EAAIwW,GAZjB,IACE,MAAMrS,EAAI0I,EAAGpM,EAAKT,GACdmE,GAAuB,mBAAXA,EAAEwS,KAChBxS,EAAEwS,QAAaH,EAAS,KAAM7a,IAAOib,MAAMJ,GAE3CA,EAAS,KAAMrS,EAEnB,OAASgK,GACPqI,EAASrI,EACX,CAIJ,CACA,cAAA0I,CAAe1B,EAAWxR,EAAYzF,EAAU,CAAA,EAAIkX,GAClD,IAAKnZ,KAAKwY,QAER,OADAxY,KAAKoC,OAAOP,KAAK,kEACVsX,GAAYA,IAEjBvc,EAASsc,OAAwBlZ,KAAKwL,cAAcI,mBAAmBsN,IACvEtc,EAAS8K,KAAaA,EAAa,CAACA,IACxC,MAAM0R,EAASpZ,KAAKiZ,UAAUC,EAAWxR,EAAYzF,EAASkX,GAC9D,IAAKC,EAAOA,OAAOjb,OAEjB,OADKib,EAAOC,QAAQlb,QAAQgb,IACrB,KAETC,EAAOA,OAAOjW,QAAQoD,IACpBvG,KAAK6a,QAAQtU,IAEjB,CACA,IAAAyJ,CAAKkJ,EAAWxR,EAAYyR,GAC1BnZ,KAAK4a,eAAe1B,EAAWxR,EAAY,CAAA,EAAIyR,EACjD,CACA,MAAAM,CAAOP,EAAWxR,EAAYyR,GAC5BnZ,KAAK4a,eAAe1B,EAAWxR,EAAY,CACzC+R,QAAQ,GACPN,EACL,CACA,OAAA0B,CAAQtU,EAAMpE,EAAS,IACrB,MAAMxC,EAAI4G,EAAKtI,MAAM,KACfuG,EAAM7E,EAAE,GACRoE,EAAKpE,EAAE,GACbK,KAAKma,KAAK3V,EAAKT,EAAI,YAAQ,OAAW,EAAW,CAACmO,EAAKxS,KACjDwS,GAAKlS,KAAKoC,OAAOP,KAAK,GAAGM,sBAA2B4B,kBAAmBS,WAAc0N,IACpFA,GAAOxS,GAAMM,KAAKoC,OAAOV,IAAI,GAAGS,qBAA0B4B,kBAAmBS,IAAO9E,GACzFM,KAAK2Z,OAAOpT,EAAM2L,EAAKxS,IAE3B,CACA,WAAAyM,CAAY+M,EAAWhQ,EAAWzL,EAAKqd,EAAeC,EAAU9Y,EAAU,CAAA,EAAI+Y,EAAM,QAClF,IAAIhb,KAAK+G,UAAUqH,OAAOC,oBAAuBrO,KAAK+G,UAAUqH,OAAOC,mBAAmBnF,IAI1F,GAAIzL,SAA6C,KAARA,EAAzC,CACA,GAAIuC,KAAKwY,SAAS9V,OAAQ,CACxB,MAAMuY,EAAO,IACRhZ,EACH8Y,YAEInK,EAAK5Q,KAAKwY,QAAQ9V,OAAO+X,KAAKza,KAAKwY,SACzC,GAAI5H,EAAGzS,OAAS,EACd,IACE,IAAI+J,EAEFA,EADgB,IAAd0I,EAAGzS,OACDyS,EAAGsI,EAAWhQ,EAAWzL,EAAKqd,EAAeG,GAE7CrK,EAAGsI,EAAWhQ,EAAWzL,EAAKqd,GAEhC5S,GAAuB,mBAAXA,EAAEwS,KAChBxS,EAAEwS,QAAaM,EAAI,KAAMtb,IAAOib,MAAMK,GAEtCA,EAAI,KAAM9S,EAEd,OAASgK,GACP8I,EAAI9I,EACN,MAEAtB,EAAGsI,EAAWhQ,EAAWzL,EAAKqd,EAAeE,EAAKC,EAEtD,CACK/B,GAAcA,EAAU,IAC7BlZ,KAAKyY,MAAM7T,YAAYsU,EAAU,GAAIhQ,EAAWzL,EAAKqd,EA5BA,OAHnD9a,KAAKoC,OAAOP,KAAK,qBAAqBpE,wBAA0ByL,wBAAiC,2NAgCrG,EAGF,MAAM3I,EAAM,KAAA,CACV8B,OAAO,EACP6Y,WAAW,EACXnX,GAAI,CAAC,eACLC,UAAW,CAAC,eACZ0H,YAAa,CAAC,OACduC,YAAY,EACZqB,eAAe,EACfW,0BAA0B,EAC1BD,KAAM,MACNmL,SAAS,EACTC,sBAAsB,EACtBra,aAAc,IACd0G,YAAa,IACbkD,gBAAiB,IACjBiE,iBAAkB,IAClByM,yBAAyB,EACzBlP,aAAa,EACbf,eAAe,EACfO,cAAe,WACfS,oBAAoB,EACpBH,mBAAmB,EACnB2I,6BAA6B,EAC7BlH,aAAa,EACbG,yBAAyB,EACzBkB,YAAY,EACZC,mBAAmB,EACnBtC,eAAe,EACf7C,YAAY,EACZ8C,uBAAuB,EACvBF,wBAAwB,EACxBD,6BAA6B,EAC7BrD,yBAAyB,EACzBJ,iCAAkCpH,IAChC,IAAI2Z,EAAM,CAAA,EAIV,GAHuB,iBAAZ3Z,EAAK,KAAiB2Z,EAAM3Z,EAAK,IACxC/E,EAAS+E,EAAK,MAAK2Z,EAAI5Q,aAAe/I,EAAK,IAC3C/E,EAAS+E,EAAK,MAAK2Z,EAAIC,aAAe5Z,EAAK,IACxB,iBAAZA,EAAK,IAAsC,iBAAZA,EAAK,GAAiB,CAC9D,MAAMM,EAAUN,EAAK,IAAMA,EAAK,GAChCvD,OAAO2H,KAAK9D,GAASkB,QAAQ1F,IAC3B6d,EAAI7d,GAAOwE,EAAQxE,IAEvB,CACA,OAAO6d,GAETjU,cAAe,CACb6L,aAAa,EACbD,OAAQpO,GAASA,EACjB1C,OAAQ,KACRoK,OAAQ,KACRgH,gBAAiB,IACjBE,eAAgB,IAChBC,cAAe,MACfE,cAAe,IACfE,wBAAyB,IACzBC,YAAa,IACb7G,iBAAiB,GAEnBuJ,qBAAqB,IAEjB+E,EAAmBvZ,IACnBrF,EAASqF,EAAQ8B,MAAK9B,EAAQ8B,GAAK,CAAC9B,EAAQ8B,KAC5CnH,EAASqF,EAAQyJ,eAAczJ,EAAQyJ,YAAc,CAACzJ,EAAQyJ,cAC9D9O,EAASqF,EAAQgM,cAAahM,EAAQgM,WAAa,CAAChM,EAAQgM,aAC5DhM,EAAQqN,eAAe5R,UAAU,UAAY,IAC/CuE,EAAQqN,cAAgBrN,EAAQqN,cAAcvK,OAAO,CAAC,YAEnB,kBAA1B9C,EAAQwZ,gBAA6BxZ,EAAQiZ,UAAYjZ,EAAQwZ,eACrExZ,GAGHyZ,EAAO,OASb,MAAMC,UAAa7Y,EACjB,WAAAhD,CAAYmC,EAAU,CAAA,EAAIkX,GATA,IAAAyC,EAkBxB,GARA3X,QACAjE,KAAKiC,QAAUuZ,EAAiBvZ,GAChCjC,KAAK+G,SAAW,CAAA,EAChB/G,KAAKoC,OAASS,EACd7C,KAAK6b,QAAU,CACbC,SAAU,IAfYF,EAiBJ5b,KAhBT5B,OAAO2d,oBAAoB3d,OAAO4d,eAAeJ,IACzDzY,QAAQuU,IACc,mBAAdkE,EAAKlE,KACdkE,EAAKlE,GAAOkE,EAAKlE,GAAK+C,KAAKmB,MAczBzC,IAAanZ,KAAKic,gBAAkBha,EAAQia,QAAS,CACvD,IAAKlc,KAAKiC,QAAQiZ,UAEhB,OADAlb,KAAKkC,KAAKD,EAASkX,GACZnZ,KAETwa,WAAW,KACTxa,KAAKkC,KAAKD,EAASkX,IAClB,EACL,CACF,CACA,IAAAjX,CAAKD,EAAU,CAAA,EAAIkX,GACjBnZ,KAAKmc,gBAAiB,EACC,mBAAZla,IACTkX,EAAWlX,EACXA,EAAU,CAAA,GAEa,MAArBA,EAAQ+B,WAAqB/B,EAAQ8B,KACnCnH,EAASqF,EAAQ8B,IACnB9B,EAAQ+B,UAAY/B,EAAQ8B,GACnB9B,EAAQ8B,GAAGrG,QAAQ,eAAiB,IAC7CuE,EAAQ+B,UAAY/B,EAAQ8B,GAAG,KAGnC,MAAMqY,EAAU7b,IAChBP,KAAKiC,QAAU,IACVma,KACApc,KAAKiC,WACLuZ,EAAiBvZ,IAEtBjC,KAAKiC,QAAQoF,cAAgB,IACxB+U,EAAQ/U,iBACRrH,KAAKiC,QAAQoF,oBAEW,IAAzBpF,EAAQlB,eACVf,KAAKiC,QAAQ4F,wBAA0B5F,EAAQlB,mBAErB,IAAxBkB,EAAQwF,cACVzH,KAAKiC,QAAQ6F,uBAAyB7F,EAAQwF,aAEhD,MAAM4U,EAAsBC,GACrBA,EACwB,mBAAlBA,EAAqC,IAAIA,EAC7CA,EAFoB,KAI7B,IAAKtc,KAAKiC,QAAQia,QAAS,CAMzB,IAAItF,EALA5W,KAAK6b,QAAQzZ,OACfS,EAAWX,KAAKma,EAAoBrc,KAAK6b,QAAQzZ,QAASpC,KAAKiC,SAE/DY,EAAWX,KAAK,KAAMlC,KAAKiC,SAI3B2U,EADE5W,KAAK6b,QAAQjF,UACH5W,KAAK6b,QAAQjF,UAEbL,EAEd,MAAMgG,EAAK,IAAIlN,EAAarP,KAAKiC,SACjCjC,KAAKyY,MAAQ,IAAI3U,EAAc9D,KAAKiC,QAAQgD,UAAWjF,KAAKiC,SAC5D,MAAMtC,EAAIK,KAAK+G,SACfpH,EAAEyC,OAASS,EACXlD,EAAEsP,cAAgBjP,KAAKyY,MACvB9Y,EAAE6L,cAAgB+Q,EAClB5c,EAAE0K,eAAiB,IAAImH,EAAe+K,EAAI,CACxC7J,QAAS1S,KAAKiC,QAAQ0I,gBACtByQ,qBAAsBpb,KAAKiC,QAAQmZ,uBAEHpb,KAAKiC,QAAQoF,cAAc4L,QAAUjT,KAAKiC,QAAQoF,cAAc4L,SAAWmJ,EAAQ/U,cAAc4L,QAEjIjT,KAAKoC,OAAOP,KAAK,+IAEf+U,GAAe5W,KAAKiC,QAAQoF,cAAc4L,QAAUjT,KAAKiC,QAAQoF,cAAc4L,SAAWmJ,EAAQ/U,cAAc4L,SAClHtT,EAAEiX,UAAYyF,EAAoBzF,GAC9BjX,EAAEiX,UAAU1U,MAAMvC,EAAEiX,UAAU1U,KAAKvC,EAAGK,KAAKiC,SAC/CjC,KAAKiC,QAAQoF,cAAc4L,OAAStT,EAAEiX,UAAU3D,OAAOwH,KAAK9a,EAAEiX,YAEhEjX,EAAE+I,aAAe,IAAIsK,EAAahT,KAAKiC,SACvCtC,EAAEyO,MAAQ,CACRC,mBAAoBrO,KAAKqO,mBAAmBoM,KAAKza,OAEnDL,EAAEuM,iBAAmB,IAAIqM,EAAU8D,EAAoBrc,KAAK6b,QAAQrD,SAAU7Y,EAAEsP,cAAetP,EAAGK,KAAKiC,SACvGtC,EAAEuM,iBAAiBlJ,GAAG,IAAK,CAACI,KAAUzB,KACpC3B,KAAKuD,KAAKH,KAAUzB,KAElB3B,KAAK6b,QAAQW,mBACf7c,EAAE6c,iBAAmBH,EAAoBrc,KAAK6b,QAAQW,kBAClD7c,EAAE6c,iBAAiBta,MAAMvC,EAAE6c,iBAAiBta,KAAKvC,EAAGK,KAAKiC,QAAQwa,UAAWzc,KAAKiC,UAEnFjC,KAAK6b,QAAQ9R,aACfpK,EAAEoK,WAAasS,EAAoBrc,KAAK6b,QAAQ9R,YAC5CpK,EAAEoK,WAAW7H,MAAMvC,EAAEoK,WAAW7H,KAAKlC,OAE3CA,KAAKyG,WAAa,IAAIK,EAAW9G,KAAK+G,SAAU/G,KAAKiC,SACrDjC,KAAKyG,WAAWzD,GAAG,IAAK,CAACI,KAAUzB,KACjC3B,KAAKuD,KAAKH,KAAUzB,KAEtB3B,KAAK6b,QAAQC,SAAS3Y,QAAQ+B,IACxBA,EAAEhD,MAAMgD,EAAEhD,KAAKlC,OAEvB,CAGA,GAFAA,KAAKiT,OAASjT,KAAKiC,QAAQoF,cAAc4L,OACpCkG,IAAUA,EAAWuC,GACtB1b,KAAKiC,QAAQyJ,cAAgB1L,KAAK+G,SAASyV,mBAAqBxc,KAAKiC,QAAQuC,IAAK,CACpF,MAAM2J,EAAQnO,KAAK+G,SAASyE,cAAcC,iBAAiBzL,KAAKiC,QAAQyJ,aACpEyC,EAAMhQ,OAAS,GAAkB,QAAbgQ,EAAM,KAAcnO,KAAKiC,QAAQuC,IAAM2J,EAAM,GACvE,CACKnO,KAAK+G,SAASyV,kBAAqBxc,KAAKiC,QAAQuC,KACnDxE,KAAKoC,OAAOP,KAAK,2DAEF,CAAC,cAAe,oBAAqB,oBAAqB,qBAClEsB,QAAQiX,IACfpa,KAAKoa,GAAU,IAAIzY,IAAS3B,KAAKyY,MAAM2B,MAAWzY,KAE5B,CAAC,cAAe,eAAgB,oBAAqB,wBAC7DwB,QAAQiX,IACtBpa,KAAKoa,GAAU,IAAIzY,KACjB3B,KAAKyY,MAAM2B,MAAWzY,GACf3B,QAGX,MAAM0c,EAAW5f,IACXkT,EAAO,KACX,MAAM2M,EAAS,CAACzK,EAAKlL,KACnBhH,KAAKmc,gBAAiB,EAClBnc,KAAKic,gBAAkBjc,KAAK4c,sBAAsB5c,KAAKoC,OAAOP,KAAK,yEACvE7B,KAAKic,eAAgB,EAChBjc,KAAKiC,QAAQia,cAAc9Z,OAAOV,IAAI,cAAe1B,KAAKiC,SAC/DjC,KAAKuD,KAAK,cAAevD,KAAKiC,SAC9Bya,EAASvf,QAAQ6J,GACjBmS,EAASjH,EAAKlL,IAEhB,GAAIhH,KAAKkZ,YAAclZ,KAAKic,cAAe,OAAOU,EAAO,KAAM3c,KAAKgH,EAAEyT,KAAKza,OAC3EA,KAAKiH,eAAejH,KAAKiC,QAAQuC,IAAKmY,IAOxC,OALI3c,KAAKiC,QAAQgD,YAAcjF,KAAKiC,QAAQiZ,UAC1ClL,IAEAwK,WAAWxK,EAAM,GAEZ0M,CACT,CACA,aAAAG,CAAc3V,EAAUiS,EAAWuC,GACjC,IAAIoB,EAAe3D,EACnB,MAAM5P,EAAU3M,EAASsK,GAAYA,EAAWlH,KAAKkH,SAErD,GADwB,mBAAbA,IAAyB4V,EAAe5V,IAC9ClH,KAAKiC,QAAQgD,WAAajF,KAAKiC,QAAQoZ,wBAAyB,CACnE,GAA+B,WAA3B9R,GAASH,iBAAgCpJ,KAAKiC,QAAQkZ,SAA2C,IAAhCnb,KAAKiC,QAAQkZ,QAAQhd,eAAsB2e,IAChH,MAAM1D,EAAS,GACT2D,EAASvY,IACb,IAAKA,EAAK,OACV,GAAY,WAARA,EAAkB,OACTxE,KAAK+G,SAASyE,cAAcI,mBAAmBpH,GACvDrB,QAAQ2I,IACD,WAANA,GACAsN,EAAO1b,QAAQoO,GAAK,GAAGsN,EAAOvY,KAAKiL,MAG3C,GAAKvC,EAIHwT,EAAOxT,OAJK,CACMvJ,KAAK+G,SAASyE,cAAcC,iBAAiBzL,KAAKiC,QAAQyJ,aAClEvI,QAAQ2I,GAAKiR,EAAOjR,GAChC,CAGA9L,KAAKiC,QAAQkZ,SAAShY,UAAU2I,GAAKiR,EAAOjR,IAC5C9L,KAAK+G,SAASmF,iBAAiB8D,KAAKoJ,EAAQpZ,KAAKiC,QAAQ8B,GAAIpF,IACtDA,GAAMqB,KAAKgd,mBAAoBhd,KAAKkH,UAAUlH,KAAKid,oBAAoBjd,KAAKkH,UACjF4V,EAAane,IAEjB,MACEme,EAAa,KAEjB,CACA,eAAAI,CAAgB5R,EAAMvH,EAAIoV,GACxB,MAAMuD,EAAW5f,IAgBjB,MAfoB,mBAATwO,IACT6N,EAAW7N,EACXA,OAAO,GAES,mBAAPvH,IACToV,EAAWpV,EACXA,OAAK,GAEFuH,IAAMA,EAAOtL,KAAKkZ,WAClBnV,IAAIA,EAAK/D,KAAKiC,QAAQ8B,IACtBoV,IAAUA,EAAWuC,GAC1B1b,KAAK+G,SAASmF,iBAAiBuN,OAAOnO,EAAMvH,EAAImO,IAC9CwK,EAASvf,UACTgc,EAASjH,KAEJwK,CACT,CACA,GAAAS,CAAI7W,GACF,IAAKA,EAAQ,MAAM,IAAI8W,MAAM,iGAC7B,IAAK9W,EAAO7E,KAAM,MAAM,IAAI2b,MAAM,4FAsBlC,MArBoB,YAAhB9W,EAAO7E,OACTzB,KAAK6b,QAAQrD,QAAUlS,IAEL,WAAhBA,EAAO7E,MAAqB6E,EAAO5E,KAAO4E,EAAOzE,MAAQyE,EAAOxE,SAClE9B,KAAK6b,QAAQzZ,OAASkE,GAEJ,qBAAhBA,EAAO7E,OACTzB,KAAK6b,QAAQW,iBAAmBlW,GAEd,eAAhBA,EAAO7E,OACTzB,KAAK6b,QAAQ9R,WAAazD,GAER,kBAAhBA,EAAO7E,MACT0E,EAAcE,iBAAiBC,GAEb,cAAhBA,EAAO7E,OACTzB,KAAK6b,QAAQjF,UAAYtQ,GAEP,aAAhBA,EAAO7E,MACTzB,KAAK6b,QAAQC,SAASjb,KAAKyF,GAEtBtG,IACT,CACA,mBAAAid,CAAoBnR,GAClB,GAAKA,GAAM9L,KAAKkZ,aACZ,CAAC,SAAU,OAAOxb,QAAQoO,IAAK,GAAnC,CACA,IAAA,IAASuR,EAAK,EAAGA,EAAKrd,KAAKkZ,UAAU/a,OAAQkf,IAAM,CACjD,MAAMC,EAAYtd,KAAKkZ,UAAUmE,GACjC,KAAI,CAAC,SAAU,OAAO3f,QAAQ4f,IAAa,IACvCtd,KAAKyY,MAAM3S,4BAA4BwX,GAAY,CACrDtd,KAAKgd,iBAAmBM,EACxB,KACF,CACF,EACKtd,KAAKgd,kBAAoBhd,KAAKkZ,UAAUxb,QAAQoO,GAAK,GAAK9L,KAAKyY,MAAM3S,4BAA4BgG,KACpG9L,KAAKgd,iBAAmBlR,EACxB9L,KAAKkZ,UAAUqE,QAAQzR,GAXc,CAazC,CACA,cAAA7E,CAAezC,EAAK2U,GAClBnZ,KAAKwd,qBAAuBhZ,EAC5B,MAAMkY,EAAW5f,IACjBkD,KAAKuD,KAAK,mBAAoBiB,GAC9B,MAAMiZ,EAAc3R,IAClB9L,KAAKkH,SAAW4E,EAChB9L,KAAKkZ,UAAYlZ,KAAK+G,SAASyE,cAAcI,mBAAmBE,GAChE9L,KAAKgd,sBAAmB,EACxBhd,KAAKid,oBAAoBnR,IAErBkO,EAAO,CAAC9H,EAAKpG,KACbA,EACE9L,KAAKwd,uBAAyBhZ,IAChCiZ,EAAY3R,GACZ9L,KAAKyG,WAAWQ,eAAe6E,GAC/B9L,KAAKwd,0BAAuB,EAC5Bxd,KAAKuD,KAAK,kBAAmBuI,GAC7B9L,KAAKoC,OAAOV,IAAI,kBAAmBoK,IAGrC9L,KAAKwd,0BAAuB,EAE9Bd,EAASvf,QAAQ,IAAIwE,IAAS3B,KAAKgH,KAAKrF,IACpCwX,KAAmBjH,EAAK,IAAIvQ,IAAS3B,KAAKgH,KAAKrF,KAE/C+b,EAASpS,IACR9G,GAAQ8G,IAAQtL,KAAK+G,SAASyV,qBAAyB,IAC5D,MAAMmB,EAAK/gB,EAAS0O,GAAQA,EAAOA,GAAQA,EAAK,GAC1CQ,EAAI9L,KAAKyY,MAAM3S,4BAA4B6X,GAAMA,EAAK3d,KAAK+G,SAASyE,cAAc0E,sBAAsBtT,EAAS0O,GAAQ,CAACA,GAAQA,GACpIQ,IACG9L,KAAKkH,UACRuW,EAAY3R,GAET9L,KAAKyG,WAAWS,UAAUlH,KAAKyG,WAAWQ,eAAe6E,GAC9D9L,KAAK+G,SAASyV,kBAAkBoB,oBAAoB9R,IAEtD9L,KAAK6c,cAAc/Q,EAAGoG,IACpB8H,EAAK9H,EAAKpG,MAcd,OAXKtH,IAAOxE,KAAK+G,SAASyV,kBAAqBxc,KAAK+G,SAASyV,iBAAiBqB,OAElErZ,GAAOxE,KAAK+G,SAASyV,kBAAoBxc,KAAK+G,SAASyV,iBAAiBqB,MAC7B,IAAjD7d,KAAK+G,SAASyV,iBAAiBsB,OAAO3f,OACxC6B,KAAK+G,SAASyV,iBAAiBsB,SAASpD,KAAKgD,GAE7C1d,KAAK+G,SAASyV,iBAAiBsB,OAAOJ,GAGxCA,EAAOlZ,GARPkZ,EAAO1d,KAAK+G,SAASyV,iBAAiBsB,UAUjCpB,CACT,CACA,SAAAqB,CAAUvZ,EAAKT,EAAIia,GACjB,MAAMC,EAAS,CAACxgB,EAAKwd,KAASlD,KAC5B,IAAI3Q,EAEFA,EADkB,iBAAT6T,EACLjb,KAAKiC,QAAQ8G,iCAAiC,CAACtL,EAAKwd,GAAMlW,OAAOgT,IAEjE,IACCkD,GAGP7T,EAAE5C,IAAM4C,EAAE5C,KAAOyZ,EAAOzZ,IACxB4C,EAAEkE,KAAOlE,EAAEkE,MAAQ2S,EAAO3S,KAC1BlE,EAAErD,GAAKqD,EAAErD,IAAMka,EAAOla,GACF,KAAhBqD,EAAE4W,YAAkB5W,EAAE4W,UAAY5W,EAAE4W,WAAaA,GAAaC,EAAOD,WACzE,MAAMjd,EAAef,KAAKiC,QAAQlB,cAAgB,IAClD,IAAImd,EAMJ,OAJEA,EADE9W,EAAE4W,WAAaxa,MAAMiB,QAAQhH,GACnBA,EAAI0K,IAAI3J,GAAK,GAAG4I,EAAE4W,YAAYjd,IAAevC,KAE7C4I,EAAE4W,UAAY,GAAG5W,EAAE4W,YAAYjd,IAAetD,IAAQA,EAE7DuC,KAAKgH,EAAEkX,EAAW9W,IAS3B,OAPIxK,EAAS4H,GACXyZ,EAAOzZ,IAAMA,EAEbyZ,EAAO3S,KAAO9G,EAEhByZ,EAAOla,GAAKA,EACZka,EAAOD,UAAYA,EACZC,CACT,CACA,CAAAjX,IAAKrF,GACH,OAAO3B,KAAKyG,YAAYoC,aAAalH,EACvC,CACA,MAAAwF,IAAUxF,GACR,OAAO3B,KAAKyG,YAAYU,UAAUxF,EACpC,CACA,mBAAAwc,CAAoBpa,GAClB/D,KAAKiC,QAAQ+B,UAAYD,CAC3B,CACA,kBAAAsK,CAAmBtK,EAAI9B,EAAU,IAC/B,IAAKjC,KAAKic,cAER,OADAjc,KAAKoC,OAAOP,KAAK,kDAAmD7B,KAAKkZ,YAClE,EAET,IAAKlZ,KAAKkZ,YAAclZ,KAAKkZ,UAAU/a,OAErC,OADA6B,KAAKoC,OAAOP,KAAK,6DAA8D7B,KAAKkZ,YAC7E,EAET,MAAM1U,EAAMvC,EAAQuC,KAAOxE,KAAKgd,kBAAoBhd,KAAKkZ,UAAU,GAC7DxN,IAAc1L,KAAKiC,SAAUjC,KAAKiC,QAAQyJ,YAC1C0S,EAAUpe,KAAKkZ,UAAUlZ,KAAKkZ,UAAU/a,OAAS,GACvD,GAA0B,WAAtBqG,EAAI4E,cAA4B,OAAO,EAC3C,MAAMiV,EAAiB,CAACvS,EAAGoO,KACzB,MAAMoE,EAAYte,KAAK+G,SAASmF,iBAAiB6M,MAAM,GAAGjN,KAAKoO,KAC/D,OAAqB,IAAdoE,GAAkC,IAAdA,GAAiC,IAAdA,GAEhD,GAAIrc,EAAQsc,SAAU,CACpB,MAAMC,EAAYvc,EAAQsc,SAASve,KAAMqe,GACzC,QAAkB,IAAdG,EAAyB,OAAOA,CACtC,CACA,QAAIxe,KAAK2F,kBAAkBnB,EAAKT,OAC3B/D,KAAK+G,SAASmF,iBAAiBsM,WAAWxY,KAAKiC,QAAQgD,WAAcjF,KAAKiC,QAAQoZ,8BACnFgD,EAAe7Z,EAAKT,IAAS2H,IAAe2S,EAAeD,EAASra,IAE1E,CACA,cAAA0a,CAAe1a,EAAIoV,GACjB,MAAMuD,EAAW5f,IACjB,OAAKkD,KAAKiC,QAAQ8B,IAIdnH,EAASmH,KAAKA,EAAK,CAACA,IACxBA,EAAGZ,QAAQ+W,IACLla,KAAKiC,QAAQ8B,GAAGrG,QAAQwc,GAAK,GAAGla,KAAKiC,QAAQ8B,GAAGlD,KAAKqZ,KAE3Dla,KAAK6c,cAAc3K,IACjBwK,EAASvf,UACLgc,KAAmBjH,KAElBwK,IAXDvD,GAAUA,IACPjc,QAAQC,UAWnB,CACA,aAAAuhB,CAAcpT,EAAM6N,GAClB,MAAMuD,EAAW5f,IACbF,EAAS0O,KAAOA,EAAO,CAACA,IAC5B,MAAMqT,EAAY3e,KAAKiC,QAAQkZ,SAAW,GACpCyD,EAAUtT,EAAKtD,OAAOxD,GAAOma,EAAUjhB,QAAQ8G,GAAO,GAAKxE,KAAK+G,SAASyE,cAAcuE,gBAAgBvL,IAC7G,OAAKoa,EAAQzgB,QAIb6B,KAAKiC,QAAQkZ,QAAUwD,EAAU5Z,OAAO6Z,GACxC5e,KAAK6c,cAAc3K,IACjBwK,EAASvf,UACLgc,KAAmBjH,KAElBwK,IARDvD,GAAUA,IACPjc,QAAQC,UAQnB,CACA,GAAA0hB,CAAIra,GAEF,GADKA,IAAKA,EAAMxE,KAAKgd,mBAAqBhd,KAAKkZ,WAAW/a,OAAS,EAAI6B,KAAKkZ,UAAU,GAAKlZ,KAAKkH,YAC3F1C,EAAK,MAAO,MACjB,IACE,MAAMsH,EAAI,IAAI6D,KAAKmP,OAAOta,GAC1B,GAAIsH,GAAKA,EAAEiT,YAAa,CACtB,MAAMC,EAAKlT,EAAEiT,cACb,GAAIC,GAAMA,EAAGC,UAAW,OAAOD,EAAGC,SACpC,CACF,OAAStgB,GAAI,CACb,MACM6M,EAAgBxL,KAAK+G,UAAUyE,eAAiB,IAAI6D,EAAa9O,KACvE,OAAIiE,EAAI4E,cAAc1L,QAAQ,SAAW,EAAU,MAFnC,CAAC,KAAM,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,KAAM,KAAM,KAAM,MAAO,MAAO,MAAO,MAAO,MAAO,KAAM,KAAM,MAAO,MAAO,MAAO,KAAM,KAAM,MAAO,MAAO,MAAO,KAAM,MAAO,MAAO,MAAO,MAAO,KAAM,MAAO,OAGnaA,QAAQ8N,EAAciE,wBAAwBjL,KAAQ,GAAMA,EAAI4E,cAAc1L,QAAQ,SAAW,EAAI,MAAQ,KAC9H,CACA,qBAAOwhB,CAAejd,EAAU,CAAA,EAAIkX,GAClC,OAAO,IAAIwC,EAAK1Z,EAASkX,EAC3B,CACA,aAAAgG,CAAcld,EAAU,GAAIkX,EAAWuC,GACrC,MAAM0D,EAAoBnd,EAAQmd,kBAC9BA,UAA0Bnd,EAAQmd,kBACtC,MAAMC,EAAgB,IACjBrf,KAAKiC,WACLA,EAEDia,SAAS,GAGPtZ,EAAQ,IAAI+Y,EAAK0D,QACD,IAAlBpd,EAAQI,YAA0C,IAAnBJ,EAAQE,SACzCS,EAAMR,OAASQ,EAAMR,OAAOQ,MAAMX,IAYpC,GAVsB,CAAC,QAAS,WAAY,YAC9BkB,QAAQ+B,IACpBtC,EAAMsC,GAAKlF,KAAKkF,KAElBtC,EAAMmE,SAAW,IACZ/G,KAAK+G,UAEVnE,EAAMmE,SAASqH,MAAQ,CACrBC,mBAAoBzL,EAAMyL,mBAAmBoM,KAAK7X,IAEhDwc,EAAmB,CACrB,MAAME,EAAalhB,OAAO2H,KAAK/F,KAAKyY,MAAM/Y,MAAMqW,OAAO,CAACwJ,EAAMzT,KAC5DyT,EAAKzT,GAAK,IACL9L,KAAKyY,MAAM/Y,KAAKoM,IAErByT,EAAKzT,GAAK1N,OAAO2H,KAAKwZ,EAAKzT,IAAIiK,OAAO,CAACyJ,EAAKtF,KAC1CsF,EAAItF,GAAK,IACJqF,EAAKzT,GAAGoO,IAENsF,GACND,EAAKzT,IACDyT,GACN,CAAA,GACH3c,EAAM6V,MAAQ,IAAI3U,EAAcwb,EAAYD,GAC5Czc,EAAMmE,SAASkI,cAAgBrM,EAAM6V,KACvC,CAUA,OATA7V,EAAM6D,WAAa,IAAIK,EAAWlE,EAAMmE,SAAUsY,GAClDzc,EAAM6D,WAAWzD,GAAG,IAAK,CAACI,KAAUzB,KAClCiB,EAAMW,KAAKH,KAAUzB,KAEvBiB,EAAMV,KAAKmd,EAAelG,GAC1BvW,EAAM6D,WAAWxE,QAAUod,EAC3Bzc,EAAM6D,WAAWyF,iBAAiBnF,SAASqH,MAAQ,CACjDC,mBAAoBzL,EAAMyL,mBAAmBoM,KAAK7X,IAE7CA,CACT,CACA,MAAAsD,GACE,MAAO,CACLjE,QAASjC,KAAKiC,QACdwW,MAAOzY,KAAKyY,MACZvR,SAAUlH,KAAKkH,SACfgS,UAAWlZ,KAAKkZ,UAChB8D,iBAAkBhd,KAAKgd,iBAE3B,EAEG,MAACyC,EAAW9D,EAAKuD,iBACtBO,EAASP,eAAiBvD,EAAKuD,eAERO,EAASP,eACpBO,EAASZ,IACRY,EAASvd,KACAud,EAAS5C,cACP4C,EAASvC,gBACrBuC,EAAStC,IACEsC,EAASxY,eACdwY,EAAS1B,UACjB0B,EAASzY,EACJyY,EAAStY,OACIsY,EAAStB,oBACVsB,EAASpR,mBACboR,EAAShB,eACVgB,EAASf","x_google_ignoreList":[0]}